(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    387763,       8084]
NotebookOptionsPosition[    382052,       7905]
NotebookOutlinePosition[    382421,       7921]
CellTagsIndexPosition[    382378,       7918]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"$HistoryLength", "=", "3"}]], "Input",
 CellChangeTimes->{{3.7168600196836944`*^9, 3.7168600196897116`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7168626392200623`*^9, 3.7170003984053345`*^9, 3.719481812125894*^9, 
   3.7195790938556557`*^9, 3.7195792120424166`*^9, 3.719596188338661*^9, {
   3.7202685287610874`*^9, 3.7202685463739247`*^9}, 3.72064492073162*^9, 
   3.7207258857046757`*^9, 3.7207479737760773`*^9, 3.720816802016095*^9, 
   3.7208183212784853`*^9, 3.7208192940037255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Daycount - Number of days in a month, given year and month", "Section",
 CellChangeTimes->{{3.651277445868752*^9, 3.6512774694471006`*^9}}],

Cell["\<\
daycount[yyyy,mm] where yyyy and mm are numeric (strings or integers) 
\
\>", "Text",
 CellChangeTimes->{{3.6512774614856453`*^9, 3.6512774978627257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"daycount", "[", 
     RowBox[{"year_", ",", "month_"}], "]"}], ":=", "\n", 
    RowBox[{"Catch", "[", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "monthlengths", "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"year", "//", "ToExpression"}], ",", "4"}], "]"}], 
           "\[Equal]", "0"}], ",", "\n", 
          RowBox[{"monthlengths", "=", 
           RowBox[{"{", 
            RowBox[{
            "31", ",", "29", ",", "31", ",", "30", ",", "31", ",", "30", ",", 
             "31", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31"}], 
            "}"}]}], ",", "\n", 
          RowBox[{"monthlengths", "=", 
           RowBox[{"{", 
            RowBox[{
            "31", ",", "28", ",", "31", ",", "30", ",", "31", ",", "30", ",", 
             "31", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31"}], 
            "}"}]}]}], "]"}], ";", "\n", 
        RowBox[{"Throw", "[", 
         RowBox[{"monthlengths", "[", 
          RowBox[{"[", 
           RowBox[{"month", "//", "ToExpression"}], "]"}], "]"}], "]"}], 
        ";"}]}], "\n", "]"}], "]"}]}], ";"}], "\n", "\n"}]], "Code",
 CellChangeTimes->{{3.6512775021919737`*^9, 3.651277595830329*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindNearestNeighbor", "Section",
 CellChangeTimes->{{3.662346442127885*^9, 3.662346444934046*^9}}],

Cell["\<\
Finds the members of \[OpenCurlyDoubleQuote]loc\[CloseCurlyDoubleQuote] that \
are nearest to the members of \[OpenCurlyDoubleQuote]findlist\
\[CloseCurlyDoubleQuote] according to smallest-square-distance. should work \
for 1, 2, 3, or higher dimension sets, only tested for x/y scatters

example:
s=OpenRead[\[OpenCurlyDoubleQuote]C:\\\\Users\\\\Sam\\\\Desktop\\\\station \
locations.txt\[CloseCurlyDoubleQuote]];
loc=ReadList[s,Number];
Close[s];
loc=Partition[loc,2];

findlist={{-77.422777777778,35.645277777778},
{-77.372777777778,35.616666666667},
{-77.175833333333,35.573888888889}};\
\>", "Text",
 CellChangeTimes->{{3.662346652276905*^9, 3.6623467087931376`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindNearestNeighbor", "[", 
    RowBox[{"loc_", ",", "findlist_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Catch", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"neareststation", ",", "distancemin", ",", "distance"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neareststation", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "findlist", "]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"distancemin", "=", "9999999"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"distance", "=", 
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"loc", "[", 
                    RowBox[{"[", "station", "]"}], "]"}], "-", 
                   RowBox[{"findlist", "[", 
                    RowBox[{"[", "site", "]"}], "]"}]}], ")"}], "^", "2"}], 
                "]"}]}], ";", 
              RowBox[{"(*", " ", 
               RowBox[{
               "take", " ", "square", " ", "of", " ", "distance", " ", 
                "between", " ", "test", " ", "pt", " ", 
                RowBox[{"(", "loc", ")"}], " ", "and", " ", "real", " ", 
                "location", " ", 
                RowBox[{"(", "findlist", ")"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"distance", "<", "distancemin"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"distancemin", "=", "distance"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"neareststation", "[", 
                   RowBox[{"[", "site", "]"}], "]"}], "=", "station"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"station", ",", "1", ",", 
               RowBox[{"Length", "[", "loc", "]"}]}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"site", ",", "1", ",", 
            RowBox[{"Length", "[", "findlist", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "[", "neareststation", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{3.6623466452895055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Title",
 CellChangeTimes->{{3.6623464209586744`*^9, 3.662346422059737*^9}}],

Cell["", "Subtitle",
 CellChangeTimes->{{3.662346415605368*^9, 3.662346416304408*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.662346403291664*^9, 3.662346405978818*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Viewlist",
  FontWeight->"Bold"],
 " - show elements in a list using manipulate"
}], "Section",
 CellChangeTimes->{{3.6467042872620554`*^9, 3.64670429493487*^9}, 
   3.6483646235625763`*^9, 3.648372039795718*^9, {3.648372184895647*^9, 
   3.6483721917908587`*^9}}],

Cell["\<\
Useful little \[OpenCurlyDoubleQuote]manipulate\[CloseCurlyDoubleQuote] call \
that brings up a window to view elements in some list. \
\[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote] is some free variable (block \
seems to give errors). \
\>", "Text",
 CellChangeTimes->{{3.6467043753842106`*^9, 3.646704408581069*^9}, {
  3.6467044988116274`*^9, 3.646704514240055*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Viewlist", "[", 
   RowBox[{"temp_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"temp", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "temp", "]"}], ",", "1"}], "}"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.64670430069128*^9, 3.6467043313141336`*^9}, 
   3.646704367443797*^9, {3.6467044114202743`*^9, 3.646704422777094*^9}, {
   3.6467044603887606`*^9, 3.646704464101567*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["nashsutcliffe",
  FontWeight->"Bold"],
 " - NSE with no assumptions"
}], "Section",
 CellChangeTimes->{{3.6467037282598715`*^9, 3.6467037332518806`*^9}, 
   3.6483646243916235`*^9, {3.648372025350093*^9, 3.648372033103307*^9}, {
   3.6483721937720623`*^9, 3.6483722008232746`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnUtu40YQholEiyy81j46gY6g5AIxJicYA8k2wMRAMFfwIXwMn0Ln8CkG
6PzDwjTa7DfVL4r/B9igKIoskn8Xqx/s+vXpn09//zRN07+/4N+nz//99uXL
569/HvDh96/Pfz39jIU/8PcNf9+XFSGEEEIIIYQQQgghhBBCCCGE7JvX19en
mdPp9Pb21tscQury/v4OtcsyBD9NE9b0NWnnHI/Hy+WCm/L4+IjbIe4Iyw8P
D71NuxPg5M0RMljGmo727By4nZeXF1nGgqlz7ZpuZLVPu16v42gj0Rjfyep4
BhtA89hbSeNIDs/Pz3r5MuP8ajV4Xqy+vzCmiA1FSDQG24TDdVwQ8yKTvsDJ
a59fBDwpAr4RX0EAOpSCEhZOEvY084cFjbF/q8HlpeDLMs2cXZxOJ8Tt0w9s
bcszt2DdCgrBcZ1f4SiwZxE7wT0eDgdxkqJAfAyXmiIUNwY7dJ64NN3obUrY
Tr4/WJ16NsGVh8vCXV6sXwTzt4NDOB0jVkI/TiPNijM28BWZglQyBs58UTpQ
fCD49xnsjc2VBcGtwU2MuhEIcrHNIpi/EWgJjxV7PQ4K8yAn56+kHU/00CCY
r2cMfmV6FVyN6SM3Wk5M5D469bbYbOHcygbzEhXb66EEmOf7lWhD1AV7RG/1
woCqxgT2TIojDiq9pRG3VVrmC7pWyMkuQVHDzA3EGWJNpXi+tjG4AuM0tO4B
0XDHoBFezg7mEXeFq8koJro+go1RAMu2I7U0Rrr5ChhKkkF407Ej1SknFISw
SdBJs3752sY8zqz7LVmHhKMNmj6cOKtpUXugQ7tBKcw1hk+0NYwxgZNnU3x7
5OncpSnYp/mADKShNasTSroAwvgCjOLGLKDmu4DLnlgnXTGyBXIKSMJZ1hBL
BHqppNMny4ZbqG0MY5v2QMPpfiarxQaPD+jBWUvV6MY9ExxCt+DBvOcZ+Ygo
orFCahsz1GChPQA1ZsWiK0a2hDUPF+ps5YBVEAN+KN/Co0IY0iqSdfQiVDXm
eDwO0tkqL6rgyYu7fDGQlVU7yHBJmwV4djerjSh29ciWsOYhG9/Jiq70iH3T
1MUOsaWEZ/WuW4ox8saHvN8kJmF7vex7IgzVJyV9Dfb9xTnWa9yTvvhb2gHS
wU2MepjXGVk2B5NIwfRhlqOw5rFlysXEHrSeF13DMsrRXq6HzxjdFattMAc1
ObWdFVg2AJb7WjNq2Cmj7LDnNppPqbfKMDP9cV3kGda87DZa9LCBtgRXyfSx
5jO3zZhznzEyMExr2/SNuJLOYR7hCn57ZFSt86uqzkQG9Nbbv5pvgYxmdCI1
NYniTAmtG9kS1bxvSK2JaPswYwYJYqf+iPtVr0M2aoyaH4XaHjPWkqBocd1w
MYdy8mp+MJlnZOq8atlsoHkpzimYHtgcTCKxjbOhOyu2ESCV6BPELoPqR+G1
l2vjNEZ9HEhgVs9lCOvCVfbqB/SxCOZb1isbaH4duYNJ5N0H0Ub0V9F35XyY
by2t+HlZzHcB4DF02cd6nKBZN7TdfnfkZonXklFGKfGMRONhonoeVvPkvlkE
8xB8s0ZUap50AQGY79X+2hXtRM2vHjRFiI1UzM0Q1NRP7RbgFM3fOGiKbIsK
Klsig+WcftLso7FhPE82irwf7fuqwdGp+X3ScYJWCN6p7UDAUBBqfp/0mqBV
jyLzDS2raoZ0ncuBsICPrIfuB07QSnYIJ2jdLQP2URYBGk4cpMcJWndFm/HA
vcDZRYdhcILWXdFm8sm+hNtkOEHraFRNNSLvj4x5owv2LuEEfWPUOUHraNRO
NbKfGb2c8RsnaB2QqqlGzDeMVrNiKpIuFDlZ0pjiqUZSWiqiOT5azpsRNSZM
rzkc9ow8PZ2D09qnGlFz33fARUdzfAhtkuwkGhMGVzU6ETopy1CpRhavctvf
RnN8NEuyk2JMCjX8BolyHiPViJoLoM/ppef4aNDOmW5MCuFHG6nBIKlG1Fz6
fIUoPcdHg2A+3ZjEve2knWooRkg1ouZmf6cNWTk+aifZyTImBXnVupB1JIPu
qUbU/JR3PjjOOTk+pspJdrKMSQGlg9XYXvRNNaI+znFnkpXjI3cqklyKJxyB
tX0v+565dk01ovxjxaNWbTrhiDnLN2lPx1QjKqj5O044Qs33pWOqEeXX/H0n
HGFs05G+qUaUvw676YQj0VnxWYftxbV3qhHZp68cbTThSMqs+JK7obbNxKZ7
qhEVc9qbSziSOCt+oCeO1OM8QKoRlePxfDk+1GAJR1Jmxcd6Dq1szDipRnCU
xBaMTSQcSZwVP7edh9zIUKlGlCdRrM1WEo5EZ8WXsce1LSQmo6UaSa+WbiLh
SBTO5rEVcvv301ON+LKMpTNUwpEoKX6A3D3HYbID18ZMtUb2TMuYpC9t3mEk
m+Bs5Nq7V7YSfZFmpPSRbRcEbzt5lpF0JEXyXcpehnnc5akRQgghhBBCCCGE
EEJImP8B+QzNyQ==
       "], {{0, 79}, {252, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{233., Automatic},
     ImageSizeRaw->{252, 79},
     PlotRange->{{0, 252}, {0, 79}},
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW82OVMcVvnT39AwzjXFsmACJNEPPjGNhO4ZNIiUbVskiQkFRFtkCIYaF
lcgZJYofgTfwj5AfwiLyIm/AA/AEvAPZdOqr8323v6qp2wwMRMjJle7Qt26d
U+e/Tp1zuXHr8N7dT28d3r9za/fXn936y737d/66+6s/f5aGxqe67tSFruv+
sNvh9yL95J98XcQfPrzi31/lfyaLp0+fLq5evZrv9PsGhx8/fryYz+f5TsPv
O9BYo7i732JstHj06BFf8OreC5gvCYMFHjx4kJ9+x7Hbt28vbt686dO/4KuH
Dx8KW/d7js1ms0wYng5ONH17exsUF9NBnFBw+t+N9sPDQ0zp3gp+04JJTGAA
2rp+/Tpebho1WAJP52N+YnOE6ektOc5vf0GIyWTS07ofi98xYQNZurtZ/jsW
7XnGKP+dLmQ1eAcCoKBE1waoTyAgEUOB9Oiqol284umMkUA2E9OlxNNNEkot
HDRg3+EYJAB6GtwKRSKr28h/1/IYSDpKxiQrWdJI7L29gjOASgJboRXgn+QX
AMCdSJN0tCQ41BgUISvey3/X8joVijQa5IFTGAktfYNoQDGmmgD+yFeYKfm7
PYFR1x3kp3k/aHB92mC11Cy4hq+uCWG+6P29IsUSQpEWdKXt0ebARwPPKNaB
j6x5TJB2O8kBa4jgwNndNTuUi272+MaUOXSAGbpA/GY2jLF0nGeKoZZkwJCs
dba0hzVxKcTZ7ccxIXQLHemihqnGaV6lgYAiSRpLc1wkuGhV6yQMj1ItpfIn
vlLk7aUSTlIIGBSBX1CZnlsucdrQKQCHTiZ5ZYgWTCQU4tlWzleIagkiu01g
u8RumDoPfkRVWNtSYUC8jGYu5oRHIhKBDRFp68LTWY75VrBKHpgnycdSwTiW
wly5/ijTv+QQar1CYVTzRxyG7Gz6lOaiAFGZk/h0GyWfn/AVVC0RvMUxDwpn
wuLCeLEEGe6jCp7F0JTMApjRQvYUbEpXbjE/eRmgAZtRRMCQts7/VYbv2SvM
hnVpK4ZVQRALs2SYVG3J8B/Nm3IM1s2g2cnAYJYMFmTv+fO03YA2bUsF6SFm
biAA/WAFVcqfFn0MCszcG3ouwSEz1aTRSGrMc14YnymxtLRJv/1xuQ+fQ71k
JdkDq5w2r5aDT7UzHReBQtggubFfSA8fGdrS1gOt5p0mq5CUJUYjCpbZbp60
Mwg+dvCC0sosFJvhE5iODOSnhramFAIRWlEqk+Lc0TI5UcrbU3oUfOzgPaUN
31P6AZSYDnuP6eH24oCBp/uR6YDW2HPhOMSFjQUXSVKW0IPinUHwFlmhA1kQ
uVAyKa/FqWHLxiRvJfNQl8bEkW+xigIwShmh8gU5C8PwiFkYH/Ok3UHwsYP3
HGGehFlxBKqAAoLasulKiiY9DT82c5SS62iG1EZ8SLRUhTYSyzJ7Po6Cjx28
5wNzFDDIxx2jSuZYp/nIkGVD0IqcSZqRyGox0pPIZRw+lJ0n3JHJjT037C4P
go8dvN9vwbk8a/97zVGOLzo86wyOkKPAQ39ZWl2FTPbnRrBh82jkzA+WZ0IY
kPuldvY5VzJY3JMGuOwPJMr0ydvnhrn2eD/huQYxDkF7Ds9yQk+9J2L7IT9o
Y1qfgAXouUsB13V/I6MWQQJhAhW3Hl3Om1AVXX5oViDh/7Ix78CXjPOs6VW2
qlU93dg2xhWrVEqypF4BKRGyBtO4FAtGZWkta0cYuLWEmGXadrrulwQDGIf8
f46xS4sMtnxbxrvgC0uwaJf5SmOsBapEZ4fqvkQHS9MxfINEQ6B+ZgEdRVlx
7FpXhTD4ca/xrVl2R/l8HTBhb542/cYUW+fGbr+k55kJwMhVMvhCs2ZkH0uo
FIUbO/iEu56NxyHxMlGLNgHhd64JpjnfBrPhL/XBl0knaWD1MZlvtTXJRDEm
we/ZmNLJfwYCqGxaKFH7V3pTrhUR0I474fP5RWuF7yorwU0rknaJGbory3IZ
cw46nmCq+rnJ6qdXmU83KHhSrBKpt+fD7inCozF38d0GbsVFP41sDZ1GvsGy
EYqKsoOMVIt6NGsVRVqE5OTnTONg8a9yPW1dNZNy6oMG7ieOYr2vcisjVHoN
G5PvnUBPolQWCD9wFUlaLUp/ZmNFhT4pwA3QivTKGjFdQvDCtLwnR6yPTYra
iEcUC9j1ihjmAGm0BpaSlnFze9PpGSSpRtCyvpYh7DREMK8U/V/qE8CZyjr1
xAv0y8164m0BXCPWS9w89ioMxOLZhTZUid8aSvniqaDIqTxC7v1f/G+Q+D0s
KT138a8S9WvoESk8qR3qorb+Thdb79R7ePni0nJ7bxPNB9GUrUAZnPchJWzW
DPvlpBDPwMFhVRKXsBUBMV3CNnQ8qqz13CuY49i2bzheZV8K84r+DlkQPvkL
W0o96xSjJO0533wQzaRGowzIq7jCnkC9oSkr9dpUeSbr+fQdTNOJMT/t2Jjk
67va6+l3+aFTlGwZJXU24gUijfmJpjU2H8S37vjypWwHeTPPOsGk5Wj5go/I
XL34T6m/TdUqwWQuntOrEUbySV31gFYmsaqbhgWP2U3zKnNZMVuvu2lF/0su
U/a/QhbeLSBepoHTIZyjvvXKNqQZi4QUzd/1Hr28UM9e0fKUP6TYV0dfpscm
tP4hyJRvGj02b5jlo8IVSnTF3M7L1yJdp2b/5oPsqCx9rM4SvVAZpZpL3joU
ep75QdGkbhSN+j7RiF8W+Cbwnqm/7jBlSNmMd5i8FCGSyaFaBB69j9tK8iZ9
VV6NorVv7zwThlnLX5YcPb+ptB0IEk9zJ31Z92ft4opRpcVJVdTlfGPTQt7/
ORuT08/ZCbpIKjrJiRpWZV2kzltITapdlu6Ar6yPdO57SLA3vpzgyloj1/JK
mgj29tWB0bCqzXUukC4NVUHRm1sfGTL5E6kJm3Myg5r1usNVHGq1jR1tbU2H
4HIHw5tEcklKUS2V47a6LnE+FFQ0kPT1n/W1ep6qfpcff7qc4ew0qBBjA8Ba
j8Erv5kZcQpq5FMNipdpholn/1JxakuV3az1uhlW7Ao5Og63wqZDwK1yldht
7NFi9/idMu/C1Nnu0VbXUi06U9FA9l4cxEs/8nvPilRKzbbFsuRtvj9Jv8nL
OZ6olw2jadFvwsU0fP/FQcQpGJd9Tkw4jer8BeP3xN0o13FrGy67URveTspI
q1Q4u+58EH59FXzfR3L/3TRcok/f6LT6DRTOPwjWamcxYydDIRiRwSxOXYlW
1eXo58NjB292w+q+HXY/r5BqDUneOx80bzbRleplBx33YxcIiEVF3Lu2gHK8
a9UY4rdihhc+/VtIEXLhzSQkvlptdOc6UpXUcdGsSJal2q6nu9eqMaTXswas
vtIbaAyRwOgermjmdcvWM+iV0WJldb0V5Dv7xoidg2c0GR3jdFnHRqL6Nylp
9V5e438mOM7v7tR/APa9RW0=\
\>"]], " ", "Thanks"}], ",", " ", 
   RowBox[{"Wikipedia", "!"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.634646549451454*^9, 3.634646567164468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nashsutcliffe", "[", 
    RowBox[{"qm_", ",", "qo_", ",", "times_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qobar", ",", "top", ",", "bottom"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"qobar", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"qo", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "times"}], "]"}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"top", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qo", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"qm", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "times"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"bottom", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qo", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "qobar"}], ")"}], "^", 
          "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "times"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"1", "-", 
        RowBox[{"(", 
         RowBox[{"top", "/", "bottom"}], ")"}]}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6346414318277435`*^9, 3.63464145362399*^9}, {
   3.6346415381098223`*^9, 3.6346417269336224`*^9}, 3.6346467030502396`*^9, {
   3.6349147771888704`*^9, 3.6349148561361876`*^9}, {3.634914899559767*^9, 
   3.634914934583828*^9}, 3.634915101380937*^9, {3.6467037625331316`*^9, 
   3.64670376733794*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ReadUSGSQfile",
  FontWeight->"Bold"],
 " - Reads a file in the common USGS station format, returns single column"
}], "Section",
 CellChangeTimes->{{3.6467037873839755`*^9, 3.64670378972398*^9}, 
   3.648364625316676*^9, 3.648372018610881*^9, {3.648372202305277*^9, 
   3.6483722126792955`*^9}, {3.648372352238141*^9, 3.6483723555609465`*^9}}],

Cell[TextData[{
 "fpath = filepath\nheaderrows = number of rows to skip\nncolumns = number of \
\[OpenCurlyDoubleQuote]word\[CloseCurlyDoubleQuote] columns - note that \
common date-time notation (mm/dd/yyyy hh:mm) is two \
\[OpenCurlyDoubleQuote]words\[CloseCurlyDoubleQuote] since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reads spaces as separators in ascii files\n\ncolumn of interest = number \
of column that has the data of interest\nformat = format of column (word, \
number, etc)\n\n!! file must be \[OpenCurlyDoubleQuote]filled\
\[CloseCurlyDoubleQuote] i.e. each column/row combo needs data. Normal USGS \
gauge data format doesn\[CloseCurlyQuote]t put \[OpenCurlyDoubleQuote]NaN\
\[CloseCurlyDoubleQuote] values, they just leave blanks, so you\
\[CloseCurlyQuote]ll need to account for that !!\n\nAlso, since this is a \
good format for reading arbitrary ascii tables, it pops up in lots of other \
places in my code - sorry for the bad label D:"
}], "Text",
 CellChangeTimes->{{3.6467038192164326`*^9, 3.6467039026921797`*^9}, {
  3.646703992283137*^9, 3.646704041735224*^9}, {3.646704354246174*^9, 
  3.646704364354992*^9}, {3.6589502522487907`*^9, 3.6589502770238376`*^9}, {
  3.658950356663724*^9, 3.6589503675342226`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReadUSGSQfile", "[", 
    RowBox[{
    "fpath_", ",", "headerrows_", ",", "ncolumns_", ",", "columnofinterest_", 
     ",", "format_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "table", ",", "L"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"table", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"s", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{"Length", "[", "table", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"L", "-", "headerrows"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Skip", "[", 
       RowBox[{"s", ",", "String", ",", "headerrows"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Skip", "[", 
          RowBox[{"s", ",", "Word", ",", 
           RowBox[{"columnofinterest", "-", "1"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"table", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "format"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Skip", "[", 
          RowBox[{"s", ",", "Word", ",", 
           RowBox[{"ncolumns", "-", "columnofinterest"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"L", "-", "headerrows"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "table", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.6467038145208244`*^9, {3.720749842540058*^9, 3.720749844946543*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadUSGSQfileOld", "Section",
 CellChangeTimes->{{3.669753244215702*^9, 3.6697532685049095`*^9}}],

Cell["\<\
reads old format (pre-2007) USGS file, looks for date information and data in \
the \[OpenCurlyDoubleQuote]columnofinterest\[CloseCurlyDoubleQuote], and \
returns a scatter dataset of absolute times / data values\
\>", "Text",
 CellChangeTimes->{{3.6697532731189404`*^9, 3.669753306159085*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"group", "[", "table_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"table", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "//", "ToExpression"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "table", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReadUSGSQfileOld", "[", 
     RowBox[{
     "fpath_", ",", "ncolumns_", ",", "datecolumn_", ",", "columnofinterest_",
       ",", "format_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "s", ",", "raw", ",", "char", ",", "skip", ",", "yyyyMMddhhmmss", ",",
          "flows", ",", "yyyy", ",", "MM", ",", "dd", ",", "hh", ",", "mm", 
         ",", "ss", ",", "times"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"raw", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"s", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"char", "=", 
         RowBox[{"Characters", "[", "raw", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"skip", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"char", ",", "\"\<#\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"skip", "=", 
         RowBox[{
          RowBox[{"Length", "[", "skip", "]"}], "+", "2"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"yyyyMMddhhmmss", "=", 
         RowBox[{"ReadUSGSQfile", "[", 
          RowBox[{
          "fpath", ",", "skip", ",", "ncolumns", ",", "datecolumn", ",", 
           "Word"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"flows", "=", 
         RowBox[{"ReadUSGSQfile", "[", 
          RowBox[{
          "fpath", ",", "skip", ",", "ncolumns", ",", "columnofinterest", ",",
            "format"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"flows", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"flows", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"yyyyMMddhhmmss", ",", "0"}], "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"yyyyMMddhhmmss", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"yyyyMMddhhmmss", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"yyyyMMddhhmmss", ",", "0"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"yyyyMMddhhmmss", "=", 
         RowBox[{"Characters", "[", "yyyyMMddhhmmss", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"yyyy", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "4"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"yyyy", "=", 
         RowBox[{"group", "[", "yyyy", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"MM", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"5", ";;", "6"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"MM", "=", 
         RowBox[{"group", "[", "MM", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"7", ";;", "8"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"dd", "=", 
         RowBox[{"group", "[", "dd", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hh", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"9", ";;", "10"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"hh", "=", 
         RowBox[{"group", "[", "hh", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mm", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"11", ";;", "12"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"mm", "=", 
         RowBox[{"group", "[", "mm", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ss", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "yyyyMMddhhmmss", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"13", ";;", "14"}], "]"}], "]"}], "//", "Transpose"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ss", "=", 
         RowBox[{"group", "[", "ss", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"times", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"AbsoluteTime", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"yyyy", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"MM", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"dd", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"hh", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"mm", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"ss", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "yyyy", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Table", "[", 
           RowBox[{"{", 
            RowBox[{"times", ",", "flows"}], "}"}], "]"}], "]"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\n", "\n", 
  "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.6697498694504085`*^9, 3.669749910527627*^9}, {
  3.6697531988033104`*^9, 3.669753217330552*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ReadRDHMQ - ",
  FontWeight->"Bold"],
 "Calls \[OpenCurlyDoubleQuote]ReadUSGSQfile\[CloseCurlyDoubleQuote] to read \
an RDHM Q file. Caution: slow!"
}], "Section",
 CellChangeTimes->{{3.6467037873839755`*^9, 3.64670378972398*^9}, 
   3.648364625316676*^9, 3.648372018610881*^9, {3.648372202305277*^9, 
   3.6483722126792955`*^9}, {3.648372352238141*^9, 3.6483723555609465`*^9}, {
   3.658950712779363*^9, 3.6589507333123617`*^9}, {3.6589510403510776`*^9, 
   3.658951042628298*^9}}],

Cell["\<\
Inputs:
filepath = path of RDHM file

Outputs: Scatter in form {{t1,Q1},{t2,Q2}...{tn,Qn}}

At the moment, clocks in at 0.936s for a 9500 line file - this is slow! But I \
only need to run this a few times for my thesis (around 1000 times total, so \
runtime ~16 minutes) so it\[CloseCurlyQuote]s not worth refactoring (yet). \
\>", "Text",
 CellChangeTimes->{{3.658950752029537*^9, 3.658950808689105*^9}, {
  3.658950935939743*^9, 3.6589510320984*^9}}],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"ReadRDHMQ", "[", "filepath_", "]"}], ":=", "\n", 
   RowBox[{"Catch", "[", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "raw", ",", "char", ",", "skip", ",", "flows", ",", "ddmmyy",
         ",", "dd", ",", "mm", ",", "yy", ",", "h", ",", "m", ",", "yyadjust",
         ",", "yyyy", ",", "times"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"OpenRead", "[", "filepath", "]"}]}], ";", "\n", 
       RowBox[{"raw", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{"s", ",", "String"}], "]"}]}], ";", "\n", 
       RowBox[{"Close", "[", "s", "]"}], ";", "\n", 
       RowBox[{"char", "=", 
        RowBox[{"Characters", "[", "raw", "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "find", " ", "lines", " ", "that", " ", "start", " ", "with", " ", 
         "\"\<$\>\"", " ", "and", " ", "delete", " ", "them", " ", "from", 
         " ", "\"\<raw\>\"", " ", "input"}], "*)"}], "\n", 
       RowBox[{"skip", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"char", ",", "\"\<$\>\""}], "]"}]}], ";", "\n", 
       RowBox[{"skip", "=", 
        RowBox[{"Length", "[", "skip", "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "two", " ", "lines", " ", "after", " ", "the", " ", "\"\<$\>\"", " ",
           "lines"}], ",", " ", 
         RowBox[{"so", " ", "skip", " ", "those", " ", 
          RowBox[{"(", 
           RowBox[{
           "second", " ", "argument", " ", "of", " ", "ReadUSGSQfile"}], 
           ")"}]}]}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{"Import", " ", "data"}], "*)"}], "\n", 
       RowBox[{"flows", "=", 
        RowBox[{"ReadUSGSQfile", "[", 
         RowBox[{"filepath", ",", 
          RowBox[{"skip", "+", "2"}], ",", "4", ",", "4", ",", "Number"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"ddmmyy", "=", 
        RowBox[{"ReadUSGSQfile", "[", 
         RowBox[{"filepath", ",", 
          RowBox[{"skip", "+", "2"}], ",", "4", ",", "2", ",", "Word"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"when", " ", "I", " ", "do", " ", "the", " ", "read"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
          "I", " ", "wind", " ", "up", " ", "with", " ", "a", " ", "bunch", 
           " ", "of", " ", "\"\<0\>\"", " ", "characters", " ", "at", " ", 
           "the", " ", "end", " ", "of", " ", "the", " ", 
           RowBox[{"file", ".", " ", 
            RowBox[{"Let", "'"}]}], "s", " ", "remove", " ", "those"}], 
          "..."}]}], "*)"}], 
       RowBox[{"yy", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"ddmmyy", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"ddmmyy", ",", "0"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"flows", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"flows", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"ddmmyy", ",", "0"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"ddmmyy", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"ddmmyy", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"ddmmyy", ",", "0"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "move", " ", "them", " ", "into", " ", "a", " ", "convenient", " ", 
         "format", " ", "for", " ", "\"\<absoluteTime\>\"", " ", "function"}],
         "*)"}], "\n", 
       RowBox[{"dd", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Characters", "[", "ddmmyy", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"dd", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dd", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "//", "ToExpression"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "dd", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"mm", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Characters", "[", "ddmmyy", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;", "4"}], "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"mm", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"mm", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "//", "ToExpression"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "mm", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"yy", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Characters", "[", "ddmmyy", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"5", ";;", "6"}], "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"yy", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"yy", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "//", "ToExpression"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "yy", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"h", "=", 
        RowBox[{"ReadUSGSQfile", "[", 
         RowBox[{"filepath", ",", 
          RowBox[{"skip", "+", "2"}], ",", "4", ",", "3", ",", "Number"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"m", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "h", "]"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"s", "=", "m"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "years", " ", "are", " ", "in", " ", "\"\<yy\>\"", " ", "format"}], 
         " ", "-", " ", 
         RowBox[{
         "absolute", " ", "time", " ", "needs", " ", "the", " ", 
          "millenium"}]}], "*)"}], "\n", 
       RowBox[{"yyadjust", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "yy", "]"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"Do", "[", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "code", " ", "written", " ", "in", " ", "2015", " ", "for", " ", 
             "storms", " ", "no", " ", "older", " ", "than", " ", "1990"}], 
            " ", "-", " ", 
            RowBox[{"any", " ", "yy"}]}], " ", "<", " ", 
           RowBox[{"20", " ", "is", " ", "20", "yy"}]}], ",", " ", 
          RowBox[{
           RowBox[{"any", " ", "yy"}], " ", ">", 
           RowBox[{"20", " ", "is", " ", "19", "yy"}]}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"yy", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<", "20"}], ",", "\n", 
            RowBox[{
             RowBox[{"yyadjust", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "2000"}], ",", "\n", 
            RowBox[{
             RowBox[{"yyadjust", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "1900"}]}], "]"}], ";"}], 
         "\n", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "yy", "]"}]}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"yyyy", "=", 
        RowBox[{"yy", "+", "yyadjust"}]}], ";", "\n", "\n", "\n", 
       RowBox[{"times", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"AbsoluteTime", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"yyyy", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"mm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"dd", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"h", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"m", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "flows", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{"Throw", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"{", 
           RowBox[{"times", ",", "flows"}], "}"}], "]"}], "]"}], "]"}], 
       ";"}]}], "\n", "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.6589508260062656`*^9, 3.658950866861467*^9, {3.6589508972217717`*^9, 
   3.6589509108722916`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["asciiFileSubset",
  FontWeight->"Bold"],
 " - looks for info in a messy ascii file, exports to a target "
}], "Section",
 CellChangeTimes->{{3.6424808162805357`*^9, 3.6424808276861887`*^9}, {
   3.642481397595785*^9, 3.6424814021810474`*^9}, {3.6424814531049604`*^9, 
   3.642481453821001*^9}, 3.64836462608072*^9, 3.6483720124176702`*^9, {
   3.6483722145044985`*^9, 3.6483722241151156`*^9}}],

Cell["\<\
Reads lines in a text file, looking for \[OpenCurlyDoubleQuote]preline.\
\[CloseCurlyDoubleQuote] if it finds \[OpenCurlyDoubleQuote]preline\
\[CloseCurlyDoubleQuote] it then begins writing subsequent lines to an output \
file, until it reads \[OpenCurlyDoubleQuote]postline.\[CloseCurlyDoubleQuote] \
Repeats until file end. If \[OpenCurlyDoubleQuote]delimit\
\[CloseCurlyDoubleQuote] = TRUE, inserts \[OpenCurlyDoubleQuote]delimiter\
\[CloseCurlyDoubleQuote] line in between each read section. Example inputs in \
comments. \
\>", "Text",
 CellChangeTimes->{{3.642481408816427*^9, 3.642481446045556*^9}, {
  3.6424816199235015`*^9, 3.64248163877358*^9}, {3.6467046239394474`*^9, 
  3.646704627496254*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "fpath", "=", 
    "\"\<D:\\\\Dropbox\\\\HEC-RAS\\\\HEC-RAS Mainstem Only\\\\HEC-RAS \
Mainstem Only\\\\Mainstem.RASexport.sdf\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{
   "fpathOut", "=", 
    "\"\<D:\\\\Dropbox\\\\HEC-RAS\\\\HEC-RAS Mainstem \
Only\\\\cutlines.txt\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"preline", "=", "\"\<    CUT LINE:\>\""}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"postline", "=", "\"\<    SURFACE LINE:\>\""}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"delimit", "=", "True"}], ";", "\[IndentingNewLine]", 
   RowBox[{"delimiter", "=", "\"\<xsection\>\""}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6424808107152176`*^9, 3.642480889572728*^9}, {
   3.642480945975954*^9, 3.6424809738545485`*^9}, {3.6424811832035227`*^9, 
   3.6424812143733053`*^9}, {3.6424813095127473`*^9, 3.6424813130919523`*^9}, 
   3.6424813458328247`*^9, {3.6424815921749144`*^9, 3.6424816530133944`*^9}, {
   3.6467042650320168`*^9, 3.6467042799612427`*^9}, {3.6467045324764867`*^9, 
   3.646704622051844*^9}, {3.664793086571579*^9, 3.6647930865745792`*^9}, {
   3.6829765150903144`*^9, 3.682976515096312*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"asciiFileSubset", "[", 
    RowBox[{
    "fpath_", ",", "fpathOut_", ",", "preline_", ",", "postline_", ",", 
     "delimit_", ",", "delimiter_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "s", ",", "l", ",", "so", ",", "infoflag", ",", "test", ",", "data"}], 
      "}"}], ",", "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"s", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "temp", "]"}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Viewlist", "[", 
          RowBox[{"temp", ",", "i"}], "]"}], " ", "<", 
         RowBox[{
          RowBox[{"-", " ", "Use"}], " ", "this", " ", "cell", " ", "after", 
          " ", "initial", " ", "read", " ", "to", " ", "define", " ", 
          "preline"}]}], ",", " ", "postline"}], "*)"}], "\n", 
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"so", "=", 
       RowBox[{"OpenWrite", "[", "fpathOut", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"infoflag", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"infoflag", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"test", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "String"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"test", "\[Equal]", "preline"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"infoflag", "=", "1"}], ";"}]}], "\[IndentingNewLine]",
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"infoflag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "String"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"data", "\[Equal]", "postline"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"infoflag", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"delimit", "\[Equal]", "True"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Write", "[", 
                   RowBox[{"so", ",", "delimiter"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{
               RowBox[{"Write", "[", 
                RowBox[{"so", ",", "data"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", "l", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "so", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Code",
 CellChangeTimes->{{3.6424808107152176`*^9, 3.642480889572728*^9}, {
   3.642480945975954*^9, 3.6424809738545485`*^9}, {3.6424811832035227`*^9, 
   3.6424812143733053`*^9}, {3.6424813095127473`*^9, 3.6424813130919523`*^9}, 
   3.6424813458328247`*^9, {3.6424815921749144`*^9, 3.6424816530133944`*^9}, {
   3.6467042650320168`*^9, 3.6467042799612427`*^9}, {3.6467045324764867`*^9, 
   3.6467046154530325`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["scatterNSinterp",
  FontWeight->"Bold"],
 " - interpolates model scatter, then calculates NSE "
}], "Section",
 CellChangeTimes->{{3.6472510194024386`*^9, 3.6472510301196575`*^9}, 
   3.6483646276568103`*^9, 3.648371975824747*^9, {3.6483722473747563`*^9, 
   3.648372267295992*^9}}],

Cell["\<\
Irregular Data NSE (average and compare)
generate (using some other script) two scatters to be compared, with format \
{{t1,y1},{t2,y2}...,{tn,yn}} where tx is the xth time measurement and yx is \
the xth quantity measured (flow, stage, etc) 

The output is {nse,gaplossobs,gaplossmod,overlap,obqs,modqs}. 

\[OpenCurlyDoubleQuote]Gap\[CloseCurlyDoubleQuote] means some data did not \
overlap and was excluded. \[OpenCurlyDoubleQuote]obs\[CloseCurlyDoubleQuote] \
vs \[OpenCurlyDoubleQuote]mod\[CloseCurlyDoubleQuote] tells you if the lost \
data came from observed or model dataset. IE Gaplossmod is harmless, \
gaplossobs is bad.  Overlap is the average number of extra data entries \
averaged into each averaging bin. IE if you have 5 minute data and want the \
NSE over 15 minute intervals, overlap will be two (three 5-minute data points \
per 15-minute \[OpenCurlyDoubleQuote]bin\[CloseCurlyDoubleQuote], so two \
\[OpenCurlyDoubleQuote]overlapped\[CloseCurlyDoubleQuote] data points). \
Ideally gaplossobs, gaplossmod, and overlap will all be zero. The real best \
answer for \[OpenCurlyDoubleQuote]increment\[CloseCurlyDoubleQuote] minimizes \
the three, and the best averaged NSE will take sensitivity to \
\[OpenCurlyDoubleQuote]increment\[CloseCurlyDoubleQuote] into account. 

obqs and modqs are just the averaged timeseries for each parameter. It\
\[CloseCurlyQuote]d be good practice to plot these along with the original \
data to make sure they are representing the behavior of the system. \
\>", "Text",
 CellChangeTimes->{3.6472514547201033`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "method", " ", "can", " ", "take", " ", "values", " ", "of", " ", 
    "\"\<Hermite\>\"", " ", "or", " ", 
    RowBox[{"\"\<Spline\>\"", ".", " ", "Best"}], " ", "practice", " ", 
    "will", " ", "test", " ", 
    RowBox[{"both", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"scatterNSinterp", "[", 
      RowBox[{"obscatter_", ",", "modelscatter_", ",", "method_"}], "]"}], ":=",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "set", " ", "timeinc", " ", "to", " ", "the", " ", "length", " ", "of", 
       " ", "\"\<bins\>\"", " ", "to", " ", "be", " ", "used"}], "*)"}], "\n",
      "\n", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "obtimes", ",", "interp", ",", "modqs", ",", "obqs", ",", "obqm", 
          ",", "topsumsq", ",", "botsumsq", ",", "nse"}], "}"}], ",", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"step", " ", "1"}], ":", " ", 
          RowBox[{
          "find", " ", "the", " ", "list", " ", "of", " ", "times", " ", 
           "for", " ", "which", " ", "we", " ", "have", " ", 
           "observations"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"obtimes", "=", 
           RowBox[{
            RowBox[{"Transpose", "[", "obscatter", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"step", " ", "2"}], ":", " ", 
            RowBox[{
            "define", " ", "an", " ", "interpolating", " ", "function"}]}], 
           "*)"}], "\n", 
          RowBox[{"interp", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{"modelscatter", ",", 
             RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", 
          "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"step", " ", "3"}], ":", " ", 
            RowBox[{
            "call", " ", "function", " ", "for", " ", "all", " ", "values", 
             " ", "of", " ", "times"}]}], "*)"}], "\n", 
          RowBox[{"modqs", "=", 
           RowBox[{"interp", "[", "obtimes", "]"}]}], ";", "\n", 
          RowBox[{"obqs", "=", 
           RowBox[{
            RowBox[{"Transpose", "[", "obscatter", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"(*", 
           RowBox[{"calculate", " ", "NSE"}], "*)"}], "\[IndentingNewLine]", 
          GraphicsBox[
           TagBox[RasterBox[CompressedData["
1:eJztnUtu40YQholEiyy81j46gY6gZB/AmJxgDCTbABMDwVzBh/AxfAqdw6cY
oPMPC9Nos99Uvyj+H2CDoiiySP5drH6w69enfz79/dM0Tf/+gn+fPv/325cv
n7/+ecCH378+//X0Mxb+wN83/H1fVoQQQgghhBBCCCGEELKW19fXp5nT6fT2
9tbbHELq8v7+DrXLMgQ/TRPW9DVp5xyPx8vlgpvy+PiI2yHuCMsPDw+9TbsT
4OTNviQsY01He3YO3M7Ly4ssY8HUuXZNN7Lap12v13G0kWiM72R1PIMNoHns
raRxJIfn52e9fJlxfrUaPC9W318YU8SGIiQag23C4TouiHmRSV/g5LXPLwKe
FAHfiK8gAB1KQQkLJwl7mvnDgsbYv9Xg8lLwZZlmzi5OpxPi9ukHtrblmVuw
bgWF4LjOr3AU2LOIneAeD4eDOElRID6GS00RihuDHTpPXJpu9DYlbCffH6xO
PZvgysNl4S4v1i+C+dvBIZyOESuhH6eRZsUZG/iKTEEqGQNnvigdKD4Q/PsM
9sbmyoLg1uAmRt0IBLnYZhHM3wi0hMeKvR4HhXmQk/NX0o4nemgQzNczBr8y
vQquxvSRGy0nJnIfnXpbbLZwbmWDeYmK7fVQAszz/Uq0IeqCPaK3emFAVWMC
eybFEQeV3tKI2yot8wVdK+Rkl6CoYeYG4gyxplI8X9sYXIFxGlr3gGi4Y9AI
L2cH84i7wtVkFBNdH8HGKIBl25FaGiPdfAUMJckgvOnYkeqUEwpC2CTopFm/
fG1jHmfW/ZasQ8LRBk0fTpzVtKg90KHdoBTmGsMn2hrGmMDJsym+PfJ07tIU
7NN8QAbS0JrVCSVdAGF8AUZxYxZQ813AZU+sk64Y2QI5BSThLGuIJQK9VNLp
k2XDLdQ2hrFNe6DhdD+T1WKDxwf04KylanTjngkOoVvwYN7zjHxEFNFYIbWN
GWqw0B6AGrNi0RUjW8Kahwt1tnLAKogBP5Rv4VEhDGkVyTp6EaoaczweB+ls
lRdV8OTFXb4YyMqqHWS4pM0CPLub1UYUu3pkS1jzkI3vZEVXesS+aepih9hS
wrN61y3FGHnjQ95vEpOwvV72PRGG6pOSvgb7/uIc6zXuSV/8Le0A6eAmRj3M
64wsm4NJpGD6MMtRWPPYMuViYg9az4uuYRnlaC/Xw2eM7orVNpiDmpzazgos
GwDLfa0ZNeyUUXbYcxvNp9RbZZiZ/rgu8gxrXnYbLXrYQFuCq2T6WPOZ22bM
uc8YGRimtW36RlxJ5zCPcAW/PTKq1vlVVWciA3rr7V/Nt0BGMzqRmppEcaaE
1o1siWreN6TWRLR9mDGDBLFTf8T9qtchGzVGzY9CbY8Za0lQtLhuuJhDOXk1
P5jMMzJ1XrVsNtC8FOcUTA9sDiaR2MbZ0J0V2wiQSvQJYpdB9aPw2su1cRqj
Pg4kMKvnMoR14Sp79QP6WATzLeuVDTS/jtzBJPLug2gj+qvou3I+zLeWVvy8
LOa7APAYuuxjPU7QrBvabr87crPEa8koo5R4RqLxMFE9D6t5ct8sgnkIvlkj
KjVPuoAAzPdqf+2KdqLmVw+aIsRGKuZmCGrqp3YLcIrmbxw0RbZFBZUtkcFy
Tj9p9tHYMJ4nG0Xej/Z91eDo1Pw+6ThBKwTv1HYgYCgINb9Pek3QqkeR+YaW
VTVDus7lQFjAR9ZD9wMnaCU7hBO07pYB+yiLAA0nDtLjBK27os144F7g7KLD
MDhB665oM/lkX8JtMpygdTSqphqR90fGvNEFe5dwgr4x6pygdTRqpxrZz4xe
zviNE7QOSNVUI+YbRqtZMRVJF4qcLGlM8VQjKS0V0RwfLefNiBoTptccDntG
np7OwWntU42oue874KKjOT6ENkl2Eo0Jg6sanQidlGWoVCOLV7ntb6M5Ppol
2UkxJoUafoNEOY+RakTNBdDn9NJzfDRo50w3JoXwo43UYJBUI2oufb5ClJ7j
o0Ewn25M4t520k41FCOkGlFzs7/ThqwcH7WT7GQZk4K8al3IOpJB91Qjan7K
Ox8c55wcH1PlJDtZxqSA0sFqbC/6phpRH+e4M8nK8ZE7FUkuxROOwNq+l33P
XLumGlH+seJRqzadcMSc5Zu0p2OqERXU/B0nHKHm+9Ix1Yjya/6+E44wtulI
31Qjyl+H3XTCkeis+KzD9uLaO9WI7NNXjjaacCRlVnzJ3VDbZmLTPdWIijnt
zSUcSZwVP9ATR+pxHiDViMrxeL4cH2qwhCMps+JjPYdWNmacVCM4SmILxiYS
jiTOip/bzkNuZKhUI8qTKNZmKwlHorPiy9jj2hYSk9FSjaRXSzeRcCQKZ/PY
Crn9++mpRnxZxtIZKuFIlBQ/QO6e4zDZgWtjploje6ZlTNKXNu8wkk1wNnLt
3Stbib5IM1L6yLYLgredPMtIOpIi+S5lL8M87vLUCCGEEEIIIYQQQgghhBAi
/A+MhOtV
             "], {{0, 77}, {252, 0}}, {0, 255},
             ColorFunction->RGBColor],
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True],
            Selectable->False],
           BaseStyle->"ImageGraphics",
           ImageSize->{236., Automatic},
           ImageSizeRaw->{252, 77},
           PlotRange->{{0, 252}, {0, 77}}], ";"}], "\[IndentingNewLine]", ";",
          "\[IndentingNewLine]", 
         RowBox[{"obqm", "=", 
          RowBox[{"Mean", "[", "obqs", "]"}]}], ";", "\n", 
         RowBox[{"topsumsq", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"obqs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"modqs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "obqs", "]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"botsumsq", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"obqs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", "obqm"}], ")"}], "^", 
             "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "obqs", "]"}]}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"nse", "=", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", "topsumsq", ")"}], "/", 
            RowBox[{"(", "botsumsq", ")"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", 
          RowBox[{"{", 
           RowBox[{"nse", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"{", 
               RowBox[{"obtimes", ",", "obqs"}], "}"}], "]"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"{", 
               RowBox[{"obtimes", ",", "modqs"}], "}"}], "]"}], "]"}]}], 
           "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]"}]}]], "Code",
 CellChangeTimes->{{3.6472514166146297`*^9, 3.6472514347866554`*^9}, {
  3.6472515824405293`*^9, 3.647251722659727*^9}, {3.6472519216942725`*^9, 
  3.6472519377377167`*^9}, {3.6472519682073293`*^9, 3.6472519990170383`*^9}, {
  3.64725210834525*^9, 3.647252111996255*^9}, {3.647252201860177*^9, 
  3.6472522606723223`*^9}, {3.647252439233612*^9, 3.647252446534622*^9}, {
  3.647259244473322*^9, 3.647259297327345*^9}, {3.647259398066107*^9, 
  3.6472594438707266`*^9}, {3.6472597550495253`*^9, 3.647259755587556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"this", " ", "is", " ", "a", " ", "simple", " ", "example"}], ",",
     " ", 
    RowBox[{
    "showing", " ", "how", " ", "the", " ", "function", " ", "works", " ", 
     "and", " ", "a", " ", "few", " ", "good", " ", "\"\<due diligence\>\"", 
     " ", 
     RowBox[{"steps", ".", " ", "Try"}], " ", "varying", " ", "increment", 
     " ", "to", " ", "see", " ", "how", " ", "the", " ", "model", " ", "fit", 
     " ", "changes"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"obset", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "10", ",", "0.12"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modset", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"y", "+", "4.6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "10", ",", "0.21"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"method", "=", "\"\<Hermite\>\""}], "\n", "\n", 
   "\"\<original datasets:\>\"", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"obset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", "modset", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"scatterNSinterp", "[", 
      RowBox[{"obset", ",", "modset", ",", "method"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<NSE: \>\"", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{"result", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   "\"\<model data vs. representation after averaging:\>\"", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"modset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"result", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "]"}], "\n", "\n", 
   "\"\<observed data vs. interpolated model values\>\"", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"obset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"result", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"using", " ", "this", " ", "example"}], ",", " ", 
     RowBox[{
     "Hermite", " ", "gives", " ", "NSE", " ", "of", " ", 
      "\"\<NSE: 0.984906\>\""}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Spline", " ", "gives", " ", "NSE", " ", "of", " ", 
     "\"\<NSE: 0.984906\>\""}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.6472514166146297`*^9, 3.6472514572311068`*^9}, {
  3.6472515908115416`*^9, 3.6472515939215455`*^9}, {3.6472593094300375`*^9, 
  3.6472593540235877`*^9}, {3.6472594641078844`*^9, 3.6472594860721407`*^9}, {
  3.6472595461795783`*^9, 3.6472596369557705`*^9}, {3.6472597470960703`*^9, 
  3.6472598127968283`*^9}, {3.647259906415183*^9, 3.6472599070392184`*^9}, {
  3.6472599826215415`*^9, 3.6472599877268333`*^9}, {3.647260191802506*^9, 
  3.6472602825877867`*^9}}],

Cell[BoxData["\<\"Hermite\"\>"], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.720819294164756*^9}],

Cell[BoxData["\<\"original datasets:\"\>"], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.720819294167735*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.016666666666666666`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxdU3tQVFUYR5DXCu0Cy5vFXZhkCY0QMkzk+wRMDScBkzCYiQgEMicHR6eQ
LBMSYZAhDAPSjA2nRiAII0DlGGqI8tqQAClgd3ktC3vBWDF8ENxz/uqbubOz
d8/+vt/ryBI+jEoyNjIyenPpWf78/9S7Z+ki65ugfTQo/3B5E9DvHXD1RrSX
4EAHCHoVBzcLeuGU4fbGH3P/ZL8PQoDPpuA7eX+DPz8a2Lul3DHPRs3Oj0NT
kL+60nkUVOniqm2qSTiq03dI7o2z/+tBHh8fpNwwCdv5A7OwqVF6ZjFwiuH9
Azf3uJSFdk8Df9zdAC+1hHXWLeoZ/jxY55YMmDVy8FAel99seATqpB0tWYsc
27cAPsLsav9ODtr4eQKz9teON3tzbP8z2GryfkKhjR6i+BdGeKnhtbnKnCnG
ZwVav92ZUVMyCZv5hcY4+vGY3/XtE4yfCZYqbxgSz42C9/J6+UrMDBlVHypT
M76meHG/4pW2W4OwzCZdbIanJf0tCT29jL855opeXRuY1wU0BQuM7ak7EChq
ZnossC3j5P1Z1yJYRsvSWaLVeyYq5ZoGQvUJsPgbYYTx1buExrMKP/oipz0Y
egjVa4WTypnQLVF/kSVyS4DWaKgz3XjsmIpQ/c+holbonFY4Qnh6VUKsCVrc
q4gbJ9QPEVYGRpp1dWpJO48nwj7brqEHGh2h/thg+CN5UWLBNMO3waLPbQ3z
Sj2hftmi4khImeg7ju2zRVHoEcfLjzlC/bNDo2CrkjPDHNtvh3ckbeYOERyh
fooxKGp98s6devL9sjyFGPuk2TjXN0Wov/b48guGgcTHk6SYH3s8bLr+bEbj
BKF+O2CqZ1jpSfcxks8TdMDL4nd3yfw0hPrviKVXph7IFoYID5fliK0tXpIw
t35C83DC62XVObMqJTnKAzqh+hMn79N3bxKajxMKVsodLrhcJDy9g86YkTdR
u668luXljD8LS4SXzFthHz8ueMJS6xs+08366YJnzW/PRtsNAC83zhVrKnfd
i9EOA83TFYU7Wr/9TTDC+umGemmN/TvqMdZnN1zVqnm+MUkLvH3bJPhL/cLT
glwd0DwkKL4Frs/Cp1l/3dEsTZWSe0HP+u+OK1R+i7szOdbn1ej762drbeY4
oHmsxtAeeZaXnmP9leIHV5I7KtI4xkeK+54EVCWf0AP1V4rGIyhr9ZwG2hcp
lsyv6xyK0bG+y7Chu2L/Vm8tu18yzHhqmWp2bgyo/zJM1fywJ/OahvGX4aeH
TkXu/mqY3Q8PLPC12rAm/j7T44H/uqZkZgd0A83HA38qnTmektnC9HmgSfcb
XOSX1ew+eWDs+eK8hJAK1j9P1NbZW7wV8TvLzxMV6T6xD8//wfroiYOFVjF+
yn5C8/TE6Ne/rnsxapj8B2OleKM=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQOneiO12bft2f+wSmSd+8NT9stme9x8+GmHPYR/
y/7DjYXtpxIu22vG9B/6qvHEXm1J+pEnq+5D5V/Z3xBhWpzq8dT+7BkQ+GD/
LqEn6cvpl1D1X+x75Y5uj9B9a9/6OnCHXOt3e8P+X309bu+h+n/Z93lkxHz9
/97eluv64gLbf/Z2Eedn5wa+h5rH4CD3dGvRAqe39tUg5VVMDg7PpudtfgUz
n8WB5Y2LplP+U3uQbq7rrA6e/787b2d6ALWP3eHc9K3ztI5ctjcGA06HvVJH
Il0m7YLaz+Xwc1fWDSbx3ftBpsX08zi8LVX+9uTx5f0Q9/A5sEheilIXfLAf
bNxrfof5wsxHF1U/3Q9xn4BDr6huWOWXl/uXgKxfLOjw5Yr7jljPt/sh7hVy
SHxiVngt5P3+IJD2QGGH4zp30x//f78f4n4RB7bG4lkMzu/3Q2JD1CFWRGJF
ldrb/RD/iDowXN9UJnjo5X6QaSLrxBwS9lnwv7V+uh/iP3EHjW+utx703t8P
Ni5GwsGhMs3yl8Pl/RD/Sjrsv6lSxJa3Yz/YO1xSDluLZ0Uts9oL9b+Uw1S1
LsfFaVfswc7bIe3wernys4k+D+wh4SHjUPdQKblm3VP7NDCQdThguJWvTeYV
NL7kHB5K3ua7nfLWHuxdEXkHC9OlBv1J7+0h4SXv8ENC08L2PzS+ExUc1rx8
foLJBBa/Cg7bedSunuV8C7HfQtFhwUxj3R8zXtpDwlPR4euMrBmmHE8h7uFX
cnBNnsx4UPQ+ND0oOTC/Xrm4YO8liPueKTnktkkkhHtus4eEt7IDvx1b+aHY
/ZD43KvssPCXIQ/zyyv7ARx1cEE=
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.959999999999999}, {-0.999475522827284, 
    0.9999417202299663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.7208192943427763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({9.959999999999999`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.647260283127787*^9, 3.6476846796817083`*^9, 3.6477642843566685`*^9, 
   3.6488270349546227`*^9, 3.6513681790352974`*^9, 3.651407915451729*^9, 
   3.651410025188882*^9, 3.6514113311933765`*^9, 3.6514122450657697`*^9, 
   3.651417837209403*^9, 3.6514186552612405`*^9, 3.651894615992037*^9, 
   3.6536699459415445`*^9, 3.653672279757475*^9, 3.653882285907424*^9, 
   3.6538852297976246`*^9, 3.6538857994922094`*^9, 3.6538862014582005`*^9, 
   3.653937380614106*^9, 3.6550083702185736`*^9, 3.65505168208342*^9, 
   3.6550539156116233`*^9, 3.6566871218939514`*^9, 3.6568707995813603`*^9, 
   3.656871998572476*^9, 3.658588514367569*^9, 3.658612579710503*^9, 
   3.658640996164014*^9, 3.6586410350253816`*^9, 3.6589489236664615`*^9, 
   3.6592114955999165`*^9, 3.6592148580707054`*^9, 3.6602770115504384`*^9, {
   3.660534164432821*^9, 3.6605341652718687`*^9}, 3.6605348670040054`*^9, 
   3.660542231106208*^9, 3.660580883281111*^9, 3.6612646883509264`*^9, 
   3.662107794594669*^9, 3.662150536682577*^9, 3.662949435403878*^9, 
   3.662958118365515*^9, 3.6635528700879602`*^9, 3.6636044827507524`*^9, 
   3.663608388541782*^9, 3.663609231528998*^9, 3.6636096215623064`*^9, 
   3.6636119467499075`*^9, 3.6638250758454127`*^9, 3.6638499644196267`*^9, 
   3.6640957281274214`*^9, 3.66409689547819*^9, 3.6641560301497793`*^9, 
   3.66415737301941*^9, 3.6641770875043974`*^9, 3.664793095064065*^9, 
   3.6648061075823383`*^9, 3.66488360130474*^9, {3.6650027675181026`*^9, 
   3.665002770806291*^9}, 3.6653741931336656`*^9, 3.665454161200671*^9, 
   3.6655338144335756`*^9, 3.6680218423926845`*^9, 3.6681826401392283`*^9, 
   3.6681845166054673`*^9, 3.6682790117237196`*^9, 3.668285326526282*^9, 
   3.6682876230126114`*^9, 3.6684727790054874`*^9, 3.668559001787793*^9, 
   3.669082664334697*^9, 3.6691318317524605`*^9, 3.6695038476019225`*^9, 
   3.669657016217842*^9, 3.669750268838173*^9, 3.670215652319584*^9, 
   3.6702300343163238`*^9, 3.670263887646721*^9, 3.6702649047197385`*^9, 
   3.6702655963589935`*^9, 3.6702658576117306`*^9, 3.670575306550742*^9, 
   3.670630243081932*^9, {3.6706335561954317`*^9, 3.670633578518708*^9}, 
   3.670647846613796*^9, 3.6706520430608196`*^9, 3.6706758942620306`*^9, 
   3.6706759996770597`*^9, 3.670727413547765*^9, 3.6707375723388147`*^9, 
   3.670743207930152*^9, 3.671457773198241*^9, 3.6714634684577866`*^9, 
   3.6714976782729344`*^9, 3.672923830143355*^9, 3.674251163702276*^9, 
   3.674427756240716*^9, 3.674430426323764*^9, 3.674432738621499*^9, 
   3.675565547886897*^9, 3.676242179593135*^9, 3.6762440042234573`*^9, 
   3.6771980654919276`*^9, 3.680733425390256*^9, 3.681424354543588*^9, 
   3.6814256671088877`*^9, 3.6816907782741203`*^9, 3.681942929271047*^9, 
   3.682014231785885*^9, 3.6820154931500664`*^9, 3.6820246295682545`*^9, 
   3.682906751046981*^9, 3.6829097158407593`*^9, {3.6829731776827855`*^9, 
   3.682973196284646*^9}, 3.6829765203578043`*^9, 3.683497674521169*^9, 
   3.6835032798536263`*^9, 3.6845481271979494`*^9, 3.6847050145722246`*^9, 
   3.684714084230921*^9, 3.6854908276406083`*^9, 3.6856422867295437`*^9, 
   3.6856594829576297`*^9, 3.686619761640565*^9, 3.6866205996407123`*^9, 
   3.6874517238427525`*^9, 3.688955069018302*^9, 3.691629292648052*^9, 
   3.691721478868206*^9, 3.6918400173925285`*^9, 3.691840058553113*^9, 
   3.6920272161837907`*^9, 3.6921200095746527`*^9, 3.692921374594831*^9, 
   3.694388254919829*^9, 3.6944772356819572`*^9, 3.6956888010710964`*^9, 
   3.7132461025834465`*^9, 3.7168493382560425`*^9, {3.717000397721908*^9, 
   3.717000398564258*^9}, 3.719481812547841*^9, 3.719579094306902*^9, 
   3.7195792123032985`*^9, 3.719596188977062*^9, {3.7202685292283587`*^9, 
   3.7202685466065636`*^9}, 3.720644925050104*^9, 3.7207258861821785`*^9, 
   3.7207479740416546`*^9, 3.7208168023623495`*^9, 3.720818321519726*^9, 
   3.7208192944124603`*^9}],

Cell[BoxData["\<\"NSE: 0.984906\"\>"], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.720819294414467*^9}],

Cell[BoxData["\<\"model data vs. representation after averaging:\"\>"], \
"Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.720819294415971*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQOneiO12bft2f+wSmSd+8NT9stme9x8+GmHPYR/
y/7DjYXtpxIu22vG9B/6qvHEXm1J+pEnq+5D5V/Z3xBhWpzq8dT+7BkQ+GD/
LqEn6cvpl1D1X+x75Y5uj9B9a9/6OnCHXOt3e8P+X309bu+h+n/Z93lkxHz9
/97eluv64gLbf/Z2Eedn5wa+h5rH4CD3dGvRAqe39tUg5VVMDg7PpudtfgUz
n8WB5Y2LplP+U3uQbq7rrA6e/787b2d6ALWP3eHc9K3ztI5ctjcGA06HvVJH
Il0m7YLaz+Xwc1fWDSbx3ftBpsX08zi8LVX+9uTx5f0Q9/A5sEheilIXfLAf
bNxrfof5wsxHF1U/3Q9xn4BDr6huWOWXl/uXgKxfLOjw5Yr7jljPt/sh7hVy
SHxiVngt5P3+IJD2QGGH4zp30x//f78f4n4RB7bG4lkMzu/3Q2JD1CFWRGJF
ldrb/RD/iDowXN9UJnjo5X6QaSLrxBwS9lnwv7V+uh/iP3EHjW+utx703t8P
Ni5GwsGhMs3yl8Pl/RD/Sjrsv6lSxJa3Yz/YO1xSDluLZ0Uts9oL9b+Uw1S1
LsfFaVfswc7bIe3wernys4k+D+wh4SHjUPdQKblm3VP7NDCQdThguJWvTeYV
NL7kHB5K3ua7nfLWHuxdEXkHC9OlBv1J7+0h4SXv8ENC08L2PzS+ExUc1rx8
foLJBBa/Cg7bedSunuV8C7HfQtFhwUxj3R8zXtpDwlPR4euMrBmmHE8h7uFX
cnBNnsx4UPQ+ND0oOTC/Xrm4YO8liPueKTnktkkkhHtus4eEt7IDvx1b+aHY
/ZD43KvssPCXIQ/zyyv7ARx1cEE=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Uw1MU1cYbQGlMMosFMpvaUtw+MeUxaGA3k+okbksCE4ipJtsGUwxo13c
YmDTIQZClB/D0IlzuFGDAxlBtgEbsMvfhAmswiggKNICq6XQVzapDgQG716+
5OXlvXff+c53zvmk7ytjk2w4HM7bK9fqfa3u5cVvsa9txPXiLFNM/W9ou/m6
RbHrC0Se/0Tdt8rm3Q82I8dBtWqP4yAKiPf+RfOuhn4fRWex84R1eQC9xtY4
krWnDvNePKLnDcj+Rtq2Crke6dKFVQd0U2hIaKNOipqk/5vRuEEgfmPRgKLY
A7OoSTRoCUuYonj/IrsTEsPUkWnEHhfPoaLeiK8TjDMU/xkaksiCupwZZA1U
FLTOPUfb+++OFLQwtN88yo86rphbZlA3Wy9Q17LvZk0HQ/svIa/BM9pgbwbF
si84YFsYoGtcmKF8uKDI3SqyS51Ge9iGNrA7Lf3Mj6fX+NlCQ+q3QTV+T9Cm
1faBdmA3Ld8UoZykfNdBbWlKcIpSj1bZpAvXQ2Tu7TT3o6OUvz2UZNQd2vve
ICJu8GAu+Nau88L7dB4eJCoyDHzPFrSKlmVygKvJiUHi0lw6nyP892vKkI2o
ARN7XgLBUqX3s6puTOZ1AnnZHe2XP2nxCrkVQD5sWXyoL2l5SP12hueeyqtJ
NTrM0qt6GQ4HcbstrROY6LEBXCSxOT3ZBtzD4m2APLdtcWlPjZjoIwDn5KKd
S9xpii+A0bnDMcPfz2CilwscO71jIFRvpv1c4Due4P5yOYOJfq5w4canJw8t
MrS/K+SGdMxmDzOY6CmE9edOXeNEMvjm6nhqIVRVFFyqCDFjoq8bnOX2Wq41
TeNittwgJ8cUdPLBFCZ6uwNXkJ2aWfgEF7AE3cHnrYYjr85OYqK/CMq+uX1K
v6THLFyWCAKt+4fH8h5j4ocHhMk/rxeVD+HPWEAPsGzNLOGm9GLijwe0KMfV
Im0bZumpPOFKRmWbZmcpJn55QmtxSVvMlZ9RMltekGO1ypsX/qD+ecHljRf2
qZP7ETuuwhs4UZea+s6PIOKnN7x+r3ovX6yj+fSBg5uPFvLCJmiefeCV+aKq
Ar4BsfId8IXEvoC8uItGRPzwhfbYwBOdFSaaXzHoPEecRz6YofkXw2WrNM6h
xkzz7AeP74Qfr8tnEPHDD+IbHvVOWhmaXwlELoeGZxrX9kUCqZ3RGU3JDCL6
SsDWV77kpDIjkhcJ1Dlt1PY4rO2rFCrzoq8vhJjofknhnGOzWGljRER/Kfz+
ZrUmW/U35S+FZvyhVJI7TvdDBjHRidGdx8boPDLoqv3Eg29+gIg/MrA1latV
TX10Phnc/Ojix5r8u3SfZBDaMPCVEX6g8/pDI3/3P3zXauqfP7RXjz3t399B
8+gPxQnadTvc/6J++oM+3PCOKmIY/w8X2YED
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.87}, {-0.9999863651841218, 0.9999949269133752}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.7208192944485917`*^9}],

Cell[BoxData["\<\"observed data vs. interpolated model values\"\>"], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.7208192944519897`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.016666666666666666`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxdU3tQVFUYR5DXCu0Cy5vFXZhkCY0QMkzk+wRMDScBkzCYiQgEMicHR6eQ
LBMSYZAhDAPSjA2nRiAII0DlGGqI8tqQAClgd3ktC3vBWDF8ENxz/uqbubOz
d8/+vt/ryBI+jEoyNjIyenPpWf78/9S7Z+ki65ugfTQo/3B5E9DvHXD1RrSX
4EAHCHoVBzcLeuGU4fbGH3P/ZL8PQoDPpuA7eX+DPz8a2Lul3DHPRs3Oj0NT
kL+60nkUVOniqm2qSTiq03dI7o2z/+tBHh8fpNwwCdv5A7OwqVF6ZjFwiuH9
Azf3uJSFdk8Df9zdAC+1hHXWLeoZ/jxY55YMmDVy8FAel99seATqpB0tWYsc
27cAPsLsav9ODtr4eQKz9teON3tzbP8z2GryfkKhjR6i+BdGeKnhtbnKnCnG
ZwVav92ZUVMyCZv5hcY4+vGY3/XtE4yfCZYqbxgSz42C9/J6+UrMDBlVHypT
M76meHG/4pW2W4OwzCZdbIanJf0tCT29jL855opeXRuY1wU0BQuM7ak7EChq
ZnossC3j5P1Z1yJYRsvSWaLVeyYq5ZoGQvUJsPgbYYTx1buExrMKP/oipz0Y
egjVa4WTypnQLVF/kSVyS4DWaKgz3XjsmIpQ/c+holbonFY4Qnh6VUKsCVrc
q4gbJ9QPEVYGRpp1dWpJO48nwj7brqEHGh2h/thg+CN5UWLBNMO3waLPbQ3z
Sj2hftmi4khImeg7ju2zRVHoEcfLjzlC/bNDo2CrkjPDHNtvh3ckbeYOERyh
fooxKGp98s6devL9sjyFGPuk2TjXN0Wov/b48guGgcTHk6SYH3s8bLr+bEbj
BKF+O2CqZ1jpSfcxks8TdMDL4nd3yfw0hPrviKVXph7IFoYID5fliK0tXpIw
t35C83DC62XVObMqJTnKAzqh+hMn79N3bxKajxMKVsodLrhcJDy9g86YkTdR
u668luXljD8LS4SXzFthHz8ueMJS6xs+08366YJnzW/PRtsNAC83zhVrKnfd
i9EOA83TFYU7Wr/9TTDC+umGemmN/TvqMdZnN1zVqnm+MUkLvH3bJPhL/cLT
glwd0DwkKL4Frs/Cp1l/3dEsTZWSe0HP+u+OK1R+i7szOdbn1ej762drbeY4
oHmsxtAeeZaXnmP9leIHV5I7KtI4xkeK+54EVCWf0AP1V4rGIyhr9ZwG2hcp
lsyv6xyK0bG+y7Chu2L/Vm8tu18yzHhqmWp2bgyo/zJM1fywJ/OahvGX4aeH
TkXu/mqY3Q8PLPC12rAm/j7T44H/uqZkZgd0A83HA38qnTmektnC9HmgSfcb
XOSX1ew+eWDs+eK8hJAK1j9P1NbZW7wV8TvLzxMV6T6xD8//wfroiYOFVjF+
yn5C8/TE6Ne/rnsxapj8B2OleKM=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1Uw1MU1cYbQGlMMosFMpvaUtw+MeUxaGA3k+okbksCE4ipJtsGUwxo13c
YmDTIQZClB/D0IlzuFGDAxlBtgEbsMvfhAmswiggKNICq6XQVzapDgQG716+
5OXlvXff+c53zvmk7ytjk2w4HM7bK9fqfa3u5cVvsa9txPXiLFNM/W9ou/m6
RbHrC0Se/0Tdt8rm3Q82I8dBtWqP4yAKiPf+RfOuhn4fRWex84R1eQC9xtY4
krWnDvNePKLnDcj+Rtq2Crke6dKFVQd0U2hIaKNOipqk/5vRuEEgfmPRgKLY
A7OoSTRoCUuYonj/IrsTEsPUkWnEHhfPoaLeiK8TjDMU/xkaksiCupwZZA1U
FLTOPUfb+++OFLQwtN88yo86rphbZlA3Wy9Q17LvZk0HQ/svIa/BM9pgbwbF
si84YFsYoGtcmKF8uKDI3SqyS51Ge9iGNrA7Lf3Mj6fX+NlCQ+q3QTV+T9Cm
1faBdmA3Ld8UoZykfNdBbWlKcIpSj1bZpAvXQ2Tu7TT3o6OUvz2UZNQd2vve
ICJu8GAu+Nau88L7dB4eJCoyDHzPFrSKlmVygKvJiUHi0lw6nyP892vKkI2o
ARN7XgLBUqX3s6puTOZ1AnnZHe2XP2nxCrkVQD5sWXyoL2l5SP12hueeyqtJ
NTrM0qt6GQ4HcbstrROY6LEBXCSxOT3ZBtzD4m2APLdtcWlPjZjoIwDn5KKd
S9xpii+A0bnDMcPfz2CilwscO71jIFRvpv1c4Due4P5yOYOJfq5w4canJw8t
MrS/K+SGdMxmDzOY6CmE9edOXeNEMvjm6nhqIVRVFFyqCDFjoq8bnOX2Wq41
TeNittwgJ8cUdPLBFCZ6uwNXkJ2aWfgEF7AE3cHnrYYjr85OYqK/CMq+uX1K
v6THLFyWCAKt+4fH8h5j4ocHhMk/rxeVD+HPWEAPsGzNLOGm9GLijwe0KMfV
Im0bZumpPOFKRmWbZmcpJn55QmtxSVvMlZ9RMltekGO1ypsX/qD+ecHljRf2
qZP7ETuuwhs4UZea+s6PIOKnN7x+r3ovX6yj+fSBg5uPFvLCJmiefeCV+aKq
Ar4BsfId8IXEvoC8uItGRPzwhfbYwBOdFSaaXzHoPEecRz6YofkXw2WrNM6h
xkzz7AeP74Qfr8tnEPHDD+IbHvVOWhmaXwlELoeGZxrX9kUCqZ3RGU3JDCL6
SsDWV77kpDIjkhcJ1Dlt1PY4rO2rFCrzoq8vhJjofknhnGOzWGljRER/Kfz+
ZrUmW/U35S+FZvyhVJI7TvdDBjHRidGdx8boPDLoqv3Eg29+gIg/MrA1latV
TX10Phnc/Ojix5r8u3SfZBDaMPCVEX6g8/pDI3/3P3zXauqfP7RXjz3t399B
8+gPxQnadTvc/6J++oM+3PCOKmIY/w8X2YED
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.959999999999999}, {-0.999475522827284, 
    0.9999417202299663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600738687606`*^9, {3.6472601862301874`*^9, 3.6472601941196384`*^9}, {
   3.6472602286876154`*^9, 3.6472602365000625`*^9}, {3.6472602685296497`*^9, 
   3.6472602830477867`*^9}, 3.647684679588108*^9, 3.647764284265667*^9, 
   3.648827034720622*^9, 3.6513681789642935`*^9, 3.651407914585679*^9, 
   3.6514100249548817`*^9, 3.6514113311309767`*^9, 3.651412244991765*^9, 
   3.651417836398202*^9, 3.6514186550116396`*^9, 3.6518946147089634`*^9, 
   3.653669945703531*^9, 3.6536722781350718`*^9, 3.653882285174223*^9, 
   3.653885229584613*^9, 3.6538857993001986`*^9, 3.6538862012471886`*^9, 
   3.6539373797320557`*^9, 3.6550083694385724`*^9, 3.6550516819118195`*^9, 
   3.6550539153826103`*^9, 3.6566871205229335`*^9, 3.656870786647442*^9, 
   3.6568719984944754`*^9, 3.658588513306508*^9, 3.6586125786809015`*^9, 
   3.6586409960080137`*^9, 3.6586410349629817`*^9, 3.658948922385259*^9, 
   3.6592114945678577`*^9, 3.6592148580047016`*^9, 3.660277010552821*^9, {
   3.660534164301813*^9, 3.660534165200865*^9}, 3.660534866710989*^9, 
   3.6605422308231916`*^9, 3.6605808830841*^9, 3.661264687278865*^9, 
   3.6621077930145783`*^9, 3.662150536190549*^9, 3.6629494282584696`*^9, 
   3.6629581176924767`*^9, 3.6635528689688964`*^9, 3.663604481237666*^9, 
   3.6636083881027565`*^9, 3.663609231425992*^9, 3.6636096214272985`*^9, 
   3.663611946514894*^9, 3.6638250675239367`*^9, 3.6638499637865906`*^9, 
   3.6640957270943623`*^9, 3.664096895167172*^9, 3.6641560246185284`*^9, 
   3.664157372893403*^9, 3.664177087396391*^9, 3.664793093769991*^9, 
   3.6648061073553257`*^9, 3.664883600442691*^9, {3.6650027674350977`*^9, 
   3.6650027707402873`*^9}, 3.665374191305561*^9, 3.6654541610876646`*^9, 
   3.6655338142345643`*^9, 3.6680218402716713`*^9, 3.668182637251133*^9, 
   3.6681845164414577`*^9, 3.668279010273712*^9, 3.66828532625628*^9, 
   3.668287622809811*^9, 3.668472774724242*^9, 3.6685589998246813`*^9, 
   3.669082661677692*^9, 3.669131830442058*^9, 3.669503842627638*^9, 
   3.6696570142208233`*^9, 3.6697502683841724`*^9, 3.6702156496764326`*^9, 
   3.6702300334832764`*^9, 3.670263885181916*^9, 3.6702649037213364`*^9, 
   3.670265595875392*^9, 3.67026585748693*^9, 3.6705753059087057`*^9, 
   3.670630242822917*^9, {3.6706335559524174`*^9, 3.6706335778416696`*^9}, 
   3.67064784352562*^9, 3.670652042320777*^9, 3.67067588988978*^9, 
   3.6706759994440465`*^9, 3.670727413080738*^9, 3.6707375716657763`*^9, 
   3.6707432077491417`*^9, 3.671457771435438*^9, 3.671463468395386*^9, 
   3.671497677745426*^9, 3.6729238109590755`*^9, 3.6742511635513744`*^9, 
   3.674427756037587*^9, 3.674430426156993*^9, 3.6744327385478024`*^9, 
   3.6755655476221666`*^9, 3.6762421793852377`*^9, 3.676244004099861*^9, 
   3.6771980652687607`*^9, 3.6807334253332415`*^9, 3.6814243543335605`*^9, 
   3.6814256670546427`*^9, 3.6816907781146684`*^9, 3.681942929083525*^9, 
   3.6820142317146955`*^9, 3.6820154931039877`*^9, 3.6820246294991665`*^9, 
   3.6829067508188105`*^9, 3.68290971543503*^9, {3.682973177461831*^9, 
   3.682973196241107*^9}, 3.682976520299384*^9, 3.683497674297202*^9, 
   3.6835032798034267`*^9, 3.6845481270729103`*^9, 3.684705014406784*^9, 
   3.684714084056699*^9, 3.685490827434778*^9, 3.685642286604495*^9, 
   3.6856594828092103`*^9, 3.6866197614897594`*^9, 3.686620599511989*^9, 
   3.687451723588931*^9, 3.6889550688097467`*^9, 3.691629292516489*^9, 
   3.6917214787522144`*^9, 3.6918400172050056`*^9, 3.6918400584906073`*^9, 
   3.692027215933762*^9, 3.6921200093685827`*^9, 3.6929213743256254`*^9, 
   3.694388254684554*^9, 3.694477235605253*^9, 3.695688800836697*^9, 
   3.7132461024135337`*^9, 3.7168493379633813`*^9, {3.7170003975133486`*^9, 
   3.7170003985035954`*^9}, 3.7194818123134136`*^9, 3.719579094044242*^9, 
   3.719579212250659*^9, 3.7195961886043353`*^9, {3.7202685289736533`*^9, 
   3.7202685465513973`*^9}, 3.720644924533732*^9, 3.7207258858882303`*^9, 
   3.720747973963522*^9, 3.7208168022394857`*^9, 3.7208183214586325`*^9, 
   3.7208192944845257`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NSEtable",
  FontWeight->"Bold"],
 " - tabulates NSE using many lists of model scatters. Calls scatterNSinterp"
}], "Section",
 CellChangeTimes->{{3.6468071622856894`*^9, 3.6468071687441006`*^9}, 
   3.648364628286846*^9, {3.648371962814324*^9, 3.648371969038735*^9}, {
   3.6483722786840115`*^9, 3.6483722877788277`*^9}, {3.6483724277585635`*^9, 
   3.6483724329377728`*^9}}],

Cell["\<\
Calls \[OpenCurlyDoubleQuote]scatterNS\[CloseCurlyDoubleQuote], creates a \
table of the results. Useful for finding the \[OpenCurlyDoubleQuote]best\
\[CloseCurlyDoubleQuote] member among multi-member ensembles.\
\>", "Text",
 CellChangeTimes->{{3.646808085302216*^9, 3.6468080934454303`*^9}, {
  3.6468081332723002`*^9, 3.646808176328376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSEtable", "[", 
     RowBox[{"modelScatters_", ",", "obscatter_", ",", "method_"}], "]"}], ":=",
     "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", ",", "nmembers", ",", "i"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"nmembers", "=", 
        RowBox[{"Length", "[", "modelScatters", "]"}]}], ";", "\n", 
       RowBox[{"temp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "nmembers", "}"}]}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"Do", "[", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"scatterNSinterp", "[", 
            RowBox[{"obscatter", ",", 
             RowBox[{"modelScatters", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "method"}], "]"}]}], ";"}],
          "\n", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nmembers"}], "}"}]}], "]"}], ";", "\n",
        "\n", 
       RowBox[{"Return", "[", "temp", "]"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}]], "Code",
 CellChangeTimes->{{3.646807176824915*^9, 3.6468072350598173`*^9}, {
  3.6468073922553988`*^9, 3.646807510675207*^9}, {3.64680754101726*^9, 
  3.6468077872480927`*^9}, {3.6468078508494043`*^9, 3.646807963622002*^9}, {
  3.646807993948456*^9, 3.6468081308542957`*^9}, {3.6472600923288164`*^9, 
  3.64726013137605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"observedScatter", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10", ",", "0.12"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"modelScatters", "=", 
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Cos", "[", 
           RowBox[{"x", "-", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "10", ",", "0.22"}], "}"}]}], "]"}], ",", 
      RowBox[{"(*", "\"\<red\>\"", "*)"}], "\n", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Cos", "[", 
           RowBox[{"x", "-", "2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "10", ",", "0.22"}], "}"}]}], "]"}], ",",
       " ", 
      RowBox[{"(*", "\"\<green\>\"", "*)"}], "\n", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Cos", "[", 
           RowBox[{"x", "-", "1.5"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "10", ",", "0.22"}], "}"}]}], "]"}]}], 
     " ", 
     RowBox[{"(*", "\"\<blue\>\"", "*)"}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"observedScatter", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"modelScatters", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"modelScatters", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"modelScatters", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "]"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"NSElist", "=", 
   RowBox[{"NSEtable", "[", 
    RowBox[{"modelScatters", ",", "observedScatter", ",", "\"\<Spline\>\""}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"NSEs", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "NSElist", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{"BestMember", "=", 
  RowBox[{"Position", "[", 
   RowBox[{"NSEs", ",", 
    RowBox[{"Max", "[", "NSEs", "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.646807176824915*^9, 3.6468072350598173`*^9}, {
  3.6468073922553988`*^9, 3.646807510675207*^9}, {3.64680754101726*^9, 
  3.6468077872480927`*^9}, {3.6468078508494043`*^9, 3.646807963622002*^9}, {
  3.646807993948456*^9, 3.6468080793430057`*^9}, {3.6468081911016016`*^9, 
  3.646808290894977*^9}, {3.646809459872799*^9, 3.6468094986399403`*^9}, {
  3.6472601175912614`*^9, 3.647260122320532*^9}, {3.6472601659980297`*^9, 
  3.647260166379052*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.016666666666666666`], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdU3tQVFUYR5DXCu0Cy5vFXZhkCY0QMkzk+wRMDScBkzCYiQgEMicHR6eQ
LBMSYZAhDAPSjA2nRiAII0DlGGqI8tqQAClgd3ktC3vBWDF8ENxz/uqbubOz
d8/+vt/ryBI+jEoyNjIyenPpWf78/9S7Z+ki65ugfTQo/3B5E9DvHXD1RrSX
4EAHCHoVBzcLeuGU4fbGH3P/ZL8PQoDPpuA7eX+DPz8a2Lul3DHPRs3Oj0NT
kL+60nkUVOniqm2qSTiq03dI7o2z/+tBHh8fpNwwCdv5A7OwqVF6ZjFwiuH9
Azf3uJSFdk8Df9zdAC+1hHXWLeoZ/jxY55YMmDVy8FAel99seATqpB0tWYsc
27cAPsLsav9ODtr4eQKz9teON3tzbP8z2GryfkKhjR6i+BdGeKnhtbnKnCnG
ZwVav92ZUVMyCZv5hcY4+vGY3/XtE4yfCZYqbxgSz42C9/J6+UrMDBlVHypT
M76meHG/4pW2W4OwzCZdbIanJf0tCT29jL855opeXRuY1wU0BQuM7ak7EChq
ZnossC3j5P1Z1yJYRsvSWaLVeyYq5ZoGQvUJsPgbYYTx1buExrMKP/oipz0Y
egjVa4WTypnQLVF/kSVyS4DWaKgz3XjsmIpQ/c+holbonFY4Qnh6VUKsCVrc
q4gbJ9QPEVYGRpp1dWpJO48nwj7brqEHGh2h/thg+CN5UWLBNMO3waLPbQ3z
Sj2hftmi4khImeg7ju2zRVHoEcfLjzlC/bNDo2CrkjPDHNtvh3ckbeYOERyh
fooxKGp98s6devL9sjyFGPuk2TjXN0Wov/b48guGgcTHk6SYH3s8bLr+bEbj
BKF+O2CqZ1jpSfcxks8TdMDL4nd3yfw0hPrviKVXph7IFoYID5fliK0tXpIw
t35C83DC62XVObMqJTnKAzqh+hMn79N3bxKajxMKVsodLrhcJDy9g86YkTdR
u668luXljD8LS4SXzFthHz8ueMJS6xs+08366YJnzW/PRtsNAC83zhVrKnfd
i9EOA83TFYU7Wr/9TTDC+umGemmN/TvqMdZnN1zVqnm+MUkLvH3bJPhL/cLT
glwd0DwkKL4Frs/Cp1l/3dEsTZWSe0HP+u+OK1R+i7szOdbn1ej762drbeY4
oHmsxtAeeZaXnmP9leIHV5I7KtI4xkeK+54EVCWf0AP1V4rGIyhr9ZwG2hcp
lsyv6xyK0bG+y7Chu2L/Vm8tu18yzHhqmWp2bgyo/zJM1fywJ/OahvGX4aeH
TkXu/mqY3Q8PLPC12rAm/j7T44H/uqZkZgd0A83HA38qnTmektnC9HmgSfcb
XOSX1ew+eWDs+eK8hJAK1j9P1NbZW7wV8TvLzxMV6T6xD8//wfroiYOFVjF+
yn5C8/TE6Ne/rnsxapj8B2OleKM=
      "]]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQPdbFv5Nbwe2mvG9B/6qnHG/ld14/6z+59B+Xfs
N9WoHtgm89pevvV14A65p/Yb+YWvcmu/g8q/sVfdcXSu2NH39rNmgsBH+wPi
K34KXX8PVf/Vfva52V+UEt7ZLymw5bq++Ie9Td2/ysii11D9f+wX8yh73TZ8
br/O/WGVyLr/9lm3139SuPwQah6jw4VK6yn3DK7bg5XHMDtMYFSbMs3qMNR8
VgeVC52l2zZv3A/S7f6QzaF15oo5nQ6X9kPs43CICdml+MLo/v40MOByeKhv
IK4U9HQ/xH4eh5oPE/9uZn61/w3QtNbXvA77S9+fsC15ux/iHn4Hb4Xl+r6V
7/eDZAN3CDhEB7Fmfv35fj/EfYIOTPviDjN9eLe/GmR9lZDDj89Muu4Zb/ZD
3Cvs4BLQ8/9344v9INcU2Io4xNk/WeuQ+3g/xP2iDrfX8l+YePHWfkhsiDlk
2UaERP8+BfWPmEPm17Onl+vU2x8GmtZ/SNzhe3SlmsKjM9DwlHAwmWv43HTz
bXuwca2SDpt5C30Pn39sD/GvlEM9V3NH/sUX9h5gA6Udghpt1K8veAMNfxmH
/9tn63zle28Pdh6XrMM/kW1RZ/6+t4eEh6yD7Lwj7jcT39ufPQMCcg7ST7cW
LXB6C40veYe28re1gbteQs1XcGiZzcbZ8uWJPSS8FByE/t+uso64B7VP0SFN
+cKPbwEXofGr6FAV1VLLvWA11H4lh1uH2aOU1I9Cw1PJYZanB9d8iRvQ+FFy
sFRbXq9h9QgavsoOZ5rSdwq1P98PcZ+yQ+Vrfr2lG1/vBwB8JmTJ
      "]]}, {}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQOsRcHhaotu7deM6T/0VeOMvWDzlyavqaeg/Dv2
S7Safd1k2uzlW18H7pB7ar/6ufGio+5n7SHyb+xPn+hZYPHotv2smSDw0V72
0aRpVk8eQ9V/tY9tXKn34OEL+yUFtlzXF/+w93nY7Vm25g1U/x/7SLfsBGPR
9/br3B9Wiaz7bz+tN3VqzL/3UPMYHaqSyqduiXlvD1Yew+wwMVHeh83iLdR8
Vofln7h3Hln10h6k2/0hm0NNcl/XkQdPoPZxOBzOKi6007pnnwYGXA7JPloZ
m+UuQu3ncWia28og+3+l/Rugaa2veR1MX1zV5ek7uh/iHn6H4zrcfB88buwH
yQbuEHAoSm5+N8X/0X6I+wQdOi5O2LJrxvP91SDrq4QcTI+uvrRu3+v9EPcK
O8xakWfr0PduP8g1BbYiDg2LC+X3P3m/H+J+UQfhoHfPVmx8vx8SG2IO8VIH
mUu+v90P8Y+Yg+OX+ubC06/2Hwaa1n9I3KFr7TqmYyHP9kP8J+HQfS1kYdup
B/vBxrVKOkiqf2pXenRlP8S/Ug6neiO12bft2e8BNlDawYCh6+aput1Q/8s4
uEazLBeeccUe7DwuWQez/VvsNVY+gIaHrMM/A5PKNRbP7M+eAQE5B61/vNO+
b30FjS95B6UdPTsXvXxrDzFfwaHh6svDWmve20PCS8FhRzvvm+vP30PtU3Qo
2yB/6OTMd9D4VXT4fqdjvdSl11D7lRx2b/Oxk9z83B4SnkoOTjICexbkP4K6
R8lB/t1cJ++JN6DpQdmhPKXqm7/GMaj7lB1Wa4UZTe9dvh8AMjRldQ==
      "]]}, {}}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQPLfx71vyq9yV4zpv/QV40z9klLNA50RV6C8u/Y
V+o+VFjned9evvV14A65p/a3xTkZbkc/hcq/sX8j5XnVi/uV/ayZIPDR/sei
289DKt9C1X+1P3l5zpGl1e/tlxTYcl1f/MO+YkZHQ9HP91D9f+zfL3qxZtWb
d/br3B9Wiaz7b69yWFHXOekN1DxGh4lz5wdNq3xhD1Yew+wgFsT45UHSY6j5
rA4GKfE+93besgfpdn/I5sDyq1019MQpqH0cDrujjq3yu9m0Pw0MuByK+FT9
v4qc3Q+xn8ch8YnV5J2nbu9/AzSt9TWvwyHLzBkMtx7vh7iH30HNNerNypsv
9oNkA3cIOKzbyC61ctmb/RD3CTqcclh8W0zo/f5qkPVVQg6GlqcVxP+93w9x
r7DDrUSNLs/49/tBrimwFXE4aTLlbKjt2/0Q94s6MKxyt+vd9HI/JDbEHA6q
3GZb9urJfoh/xBxidryutHe8t/8w0LT+Q+IOUf23510zv7gf4j8JB4dvDZXT
zq/aDzauVdJBrMeXa2bUUXuIf6Uc5sQ86TtpcMPeA2ygtMNSswvWD1weQcNf
xsF7TviaF/3P7cHO45J1iDul56ez47U9JDxkHdh8IyfFdr2zP3sGBOQczq2s
dFjz+D00vuQdPu2QFyne/B5qvoJDXecvNdY/b+0h4aXg4D+B0XHipVdQ+xQd
yi5NL5CJewaNX0WHI4xdLQuuPoDar+Swcpa3zelfV+wh4ank4Bc8t2aP7F6o
e5QcKndn3WAS3w0NX2WHArFcjdj6K/sh7lN2sF8XbMs878F+AMTLY/s=
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.959999999999999}, {-0.999475522827284, 
    0.9999417202299663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.647260139540517*^9, 3.647260168119151*^9}, 
   3.647684679884509*^9, 3.647764284554672*^9, 3.6488270351106234`*^9, 
   3.651368179207308*^9, 3.651407915762747*^9, 3.6514100253448825`*^9, 
   3.651411331364977*^9, 3.6514122452417793`*^9, 3.6514178375526037`*^9, 
   3.65141865541724*^9, 3.6518946163390565`*^9, 3.6536699461285553`*^9, 
   3.6536722802098756`*^9, 3.6538822863130245`*^9, 3.653885229962634*^9, 
   3.653885799652219*^9, 3.6538862016272106`*^9, 3.653937380979127*^9, 
   3.6550083706553745`*^9, 3.6550516822862206`*^9, 3.655053915778633*^9, 
   3.656687122237152*^9, 3.656870800029373*^9, 3.656871998728476*^9, 
   3.6585885148055944`*^9, 3.658612580147304*^9, 3.6586409965228148`*^9, 
   3.658641035212582*^9, 3.658948924188866*^9, 3.6592114959629374`*^9, 
   3.659214858233715*^9, 3.660277011893639*^9, {3.6605341646238317`*^9, 
   3.6605341654498787`*^9}, 3.660534867276021*^9, 3.6605422313002195`*^9, 
   3.6605808835161247`*^9, 3.661264688688946*^9, 3.66210779496169*^9, 
   3.662150537396618*^9, 3.662949435922908*^9, 3.6629581190205526`*^9, 
   3.66355287060399*^9, 3.6636044831267743`*^9, 3.663608388877801*^9, 
   3.6636092316970077`*^9, 3.6636096217423167`*^9, 3.663611946919917*^9, 
   3.6638250768554707`*^9, 3.663849964858652*^9, 3.6640957294084945`*^9, 
   3.6640968959642177`*^9, 3.6641560305949855`*^9, 3.6641573733074265`*^9, 
   3.664177087767412*^9, 3.664793095572094*^9, 3.664806107747348*^9, 
   3.6648836018027687`*^9, {3.665002767709114*^9, 3.665002770980301*^9}, 
   3.6653741936256933`*^9, 3.665454161610695*^9, 3.665533815227621*^9, 
   3.6680218434044924`*^9, 3.668182640995244*^9, 3.6681845170554934`*^9, 
   3.66827901277174*^9, 3.6682853269392824`*^9, 3.6682876236210127`*^9, 
   3.6684727801985555`*^9, 3.6685590027578487`*^9, 3.669082665442299*^9, 
   3.669131832672862*^9, 3.6695038489539995`*^9, 3.6696570170003433`*^9, 
   3.6697502693981743`*^9, 3.670215653518652*^9, 3.670230035486391*^9, 
   3.6702638898931246`*^9, 3.6702649057649403`*^9, 3.670265597419795*^9, 
   3.670265858095331*^9, 3.670575307271784*^9, 3.670630243602962*^9, {
   3.670633556906472*^9, 3.6706335794007587`*^9}, 3.670647848203888*^9, 
   3.670652044008874*^9, 3.6706758964911575`*^9, 3.670676000276094*^9, 
   3.6707274143728123`*^9, 3.670737573066856*^9, 3.670743208440181*^9, 
   3.6714577734946423`*^9, 3.671463468660587*^9, 3.671497679163449*^9, 
   3.672923830868758*^9, 3.6742511638266077`*^9, 3.674427756346279*^9, 
   3.674430426442078*^9, 3.6744327387513437`*^9, 3.6755655480402784`*^9, 
   3.6762421797134533`*^9, 3.6762440043399625`*^9, 3.6771980656190042`*^9, 
   3.6807334255497046`*^9, 3.6814243546714115`*^9, 3.681425667334283*^9, 
   3.68169077838539*^9, 3.6819429294116597`*^9, 3.6820142319112177`*^9, 
   3.6820154932693834`*^9, 3.6820246297036085`*^9, 3.682906751194618*^9, 
   3.6829097159648995`*^9, {3.6829731778047595`*^9, 3.6829731963949704`*^9}, 
   3.6829765204789762`*^9, 3.683497674653063*^9, 3.6835032799795227`*^9, 
   3.6845481273219733`*^9, 3.684705014703574*^9, 3.6847140849499702`*^9, 
   3.6854908277541914`*^9, 3.685642286857765*^9, 3.685659483767969*^9, 
   3.686619761795773*^9, 3.68662059977057*^9, 3.687451723986866*^9, 
   3.688955069161277*^9, 3.691629292785145*^9, 3.691721479068387*^9, 
   3.6918400175175133`*^9, 3.691840058693755*^9, 3.6920272162931767`*^9, 
   3.6921200097045903`*^9, 3.692921374727879*^9, 3.6943882550693913`*^9, 
   3.694477235809696*^9, 3.6956888012018447`*^9, 3.7132461027333612`*^9, 
   3.716849338403266*^9, {3.7170003978634243`*^9, 3.717000398695594*^9}, 
   3.719481812672857*^9, 3.7195790944344006`*^9, 3.719579212416125*^9, 
   3.71959618912444*^9, {3.7202685293606815`*^9, 3.7202685467168374`*^9}, 
   3.720644925306798*^9, 3.720725886318293*^9, 3.7207479741822963`*^9, 
   3.720816802511804*^9, 3.7208183216555862`*^9, 3.72081929454134*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6308261810079008`", ",", "0.7819708022207247`", ",", 
   "0.9940379257457824`"}], "}"}]], "Output",
 CellChangeTimes->{{3.647260139540517*^9, 3.647260168119151*^9}, 
   3.647684679884509*^9, 3.647764284554672*^9, 3.6488270351106234`*^9, 
   3.651368179207308*^9, 3.651407915762747*^9, 3.6514100253448825`*^9, 
   3.651411331364977*^9, 3.6514122452417793`*^9, 3.6514178375526037`*^9, 
   3.65141865541724*^9, 3.6518946163390565`*^9, 3.6536699461285553`*^9, 
   3.6536722802098756`*^9, 3.6538822863130245`*^9, 3.653885229962634*^9, 
   3.653885799652219*^9, 3.6538862016272106`*^9, 3.653937380979127*^9, 
   3.6550083706553745`*^9, 3.6550516822862206`*^9, 3.655053915778633*^9, 
   3.656687122237152*^9, 3.656870800029373*^9, 3.656871998728476*^9, 
   3.6585885148055944`*^9, 3.658612580147304*^9, 3.6586409965228148`*^9, 
   3.658641035212582*^9, 3.658948924188866*^9, 3.6592114959629374`*^9, 
   3.659214858233715*^9, 3.660277011893639*^9, {3.6605341646238317`*^9, 
   3.6605341654498787`*^9}, 3.660534867276021*^9, 3.6605422313002195`*^9, 
   3.6605808835161247`*^9, 3.661264688688946*^9, 3.66210779496169*^9, 
   3.662150537396618*^9, 3.662949435922908*^9, 3.6629581190205526`*^9, 
   3.66355287060399*^9, 3.6636044831267743`*^9, 3.663608388877801*^9, 
   3.6636092316970077`*^9, 3.6636096217423167`*^9, 3.663611946919917*^9, 
   3.6638250768554707`*^9, 3.663849964858652*^9, 3.6640957294084945`*^9, 
   3.6640968959642177`*^9, 3.6641560305949855`*^9, 3.6641573733074265`*^9, 
   3.664177087767412*^9, 3.664793095572094*^9, 3.664806107747348*^9, 
   3.6648836018027687`*^9, {3.665002767709114*^9, 3.665002770980301*^9}, 
   3.6653741936256933`*^9, 3.665454161610695*^9, 3.665533815227621*^9, 
   3.6680218434044924`*^9, 3.668182640995244*^9, 3.6681845170554934`*^9, 
   3.66827901277174*^9, 3.6682853269392824`*^9, 3.6682876236210127`*^9, 
   3.6684727801985555`*^9, 3.6685590027578487`*^9, 3.669082665442299*^9, 
   3.669131832672862*^9, 3.6695038489539995`*^9, 3.6696570170003433`*^9, 
   3.6697502693981743`*^9, 3.670215653518652*^9, 3.670230035486391*^9, 
   3.6702638898931246`*^9, 3.6702649057649403`*^9, 3.670265597419795*^9, 
   3.670265858095331*^9, 3.670575307271784*^9, 3.670630243602962*^9, {
   3.670633556906472*^9, 3.6706335794007587`*^9}, 3.670647848203888*^9, 
   3.670652044008874*^9, 3.6706758964911575`*^9, 3.670676000276094*^9, 
   3.6707274143728123`*^9, 3.670737573066856*^9, 3.670743208440181*^9, 
   3.6714577734946423`*^9, 3.671463468660587*^9, 3.671497679163449*^9, 
   3.672923830868758*^9, 3.6742511638266077`*^9, 3.674427756346279*^9, 
   3.674430426442078*^9, 3.6744327387513437`*^9, 3.6755655480402784`*^9, 
   3.6762421797134533`*^9, 3.6762440043399625`*^9, 3.6771980656190042`*^9, 
   3.6807334255497046`*^9, 3.6814243546714115`*^9, 3.681425667334283*^9, 
   3.68169077838539*^9, 3.6819429294116597`*^9, 3.6820142319112177`*^9, 
   3.6820154932693834`*^9, 3.6820246297036085`*^9, 3.682906751194618*^9, 
   3.6829097159648995`*^9, {3.6829731778047595`*^9, 3.6829731963949704`*^9}, 
   3.6829765204789762`*^9, 3.683497674653063*^9, 3.6835032799795227`*^9, 
   3.6845481273219733`*^9, 3.684705014703574*^9, 3.6847140849499702`*^9, 
   3.6854908277541914`*^9, 3.685642286857765*^9, 3.685659483767969*^9, 
   3.686619761795773*^9, 3.68662059977057*^9, 3.687451723986866*^9, 
   3.688955069161277*^9, 3.691629292785145*^9, 3.691721479068387*^9, 
   3.6918400175175133`*^9, 3.691840058693755*^9, 3.6920272162931767`*^9, 
   3.6921200097045903`*^9, 3.692921374727879*^9, 3.6943882550693913`*^9, 
   3.694477235809696*^9, 3.6956888012018447`*^9, 3.7132461027333612`*^9, 
   3.716849338403266*^9, {3.7170003978634243`*^9, 3.717000398695594*^9}, 
   3.719481812672857*^9, 3.7195790944344006`*^9, 3.719579212416125*^9, 
   3.71959618912444*^9, {3.7202685293606815`*^9, 3.7202685467168374`*^9}, 
   3.720644925306798*^9, 3.720725886318293*^9, 3.7207479741822963`*^9, 
   3.720816802511804*^9, 3.7208183216555862`*^9, 3.7208192945503635`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "3", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.647260139540517*^9, 3.647260168119151*^9}, 
   3.647684679884509*^9, 3.647764284554672*^9, 3.6488270351106234`*^9, 
   3.651368179207308*^9, 3.651407915762747*^9, 3.6514100253448825`*^9, 
   3.651411331364977*^9, 3.6514122452417793`*^9, 3.6514178375526037`*^9, 
   3.65141865541724*^9, 3.6518946163390565`*^9, 3.6536699461285553`*^9, 
   3.6536722802098756`*^9, 3.6538822863130245`*^9, 3.653885229962634*^9, 
   3.653885799652219*^9, 3.6538862016272106`*^9, 3.653937380979127*^9, 
   3.6550083706553745`*^9, 3.6550516822862206`*^9, 3.655053915778633*^9, 
   3.656687122237152*^9, 3.656870800029373*^9, 3.656871998728476*^9, 
   3.6585885148055944`*^9, 3.658612580147304*^9, 3.6586409965228148`*^9, 
   3.658641035212582*^9, 3.658948924188866*^9, 3.6592114959629374`*^9, 
   3.659214858233715*^9, 3.660277011893639*^9, {3.6605341646238317`*^9, 
   3.6605341654498787`*^9}, 3.660534867276021*^9, 3.6605422313002195`*^9, 
   3.6605808835161247`*^9, 3.661264688688946*^9, 3.66210779496169*^9, 
   3.662150537396618*^9, 3.662949435922908*^9, 3.6629581190205526`*^9, 
   3.66355287060399*^9, 3.6636044831267743`*^9, 3.663608388877801*^9, 
   3.6636092316970077`*^9, 3.6636096217423167`*^9, 3.663611946919917*^9, 
   3.6638250768554707`*^9, 3.663849964858652*^9, 3.6640957294084945`*^9, 
   3.6640968959642177`*^9, 3.6641560305949855`*^9, 3.6641573733074265`*^9, 
   3.664177087767412*^9, 3.664793095572094*^9, 3.664806107747348*^9, 
   3.6648836018027687`*^9, {3.665002767709114*^9, 3.665002770980301*^9}, 
   3.6653741936256933`*^9, 3.665454161610695*^9, 3.665533815227621*^9, 
   3.6680218434044924`*^9, 3.668182640995244*^9, 3.6681845170554934`*^9, 
   3.66827901277174*^9, 3.6682853269392824`*^9, 3.6682876236210127`*^9, 
   3.6684727801985555`*^9, 3.6685590027578487`*^9, 3.669082665442299*^9, 
   3.669131832672862*^9, 3.6695038489539995`*^9, 3.6696570170003433`*^9, 
   3.6697502693981743`*^9, 3.670215653518652*^9, 3.670230035486391*^9, 
   3.6702638898931246`*^9, 3.6702649057649403`*^9, 3.670265597419795*^9, 
   3.670265858095331*^9, 3.670575307271784*^9, 3.670630243602962*^9, {
   3.670633556906472*^9, 3.6706335794007587`*^9}, 3.670647848203888*^9, 
   3.670652044008874*^9, 3.6706758964911575`*^9, 3.670676000276094*^9, 
   3.6707274143728123`*^9, 3.670737573066856*^9, 3.670743208440181*^9, 
   3.6714577734946423`*^9, 3.671463468660587*^9, 3.671497679163449*^9, 
   3.672923830868758*^9, 3.6742511638266077`*^9, 3.674427756346279*^9, 
   3.674430426442078*^9, 3.6744327387513437`*^9, 3.6755655480402784`*^9, 
   3.6762421797134533`*^9, 3.6762440043399625`*^9, 3.6771980656190042`*^9, 
   3.6807334255497046`*^9, 3.6814243546714115`*^9, 3.681425667334283*^9, 
   3.68169077838539*^9, 3.6819429294116597`*^9, 3.6820142319112177`*^9, 
   3.6820154932693834`*^9, 3.6820246297036085`*^9, 3.682906751194618*^9, 
   3.6829097159648995`*^9, {3.6829731778047595`*^9, 3.6829731963949704`*^9}, 
   3.6829765204789762`*^9, 3.683497674653063*^9, 3.6835032799795227`*^9, 
   3.6845481273219733`*^9, 3.684705014703574*^9, 3.6847140849499702`*^9, 
   3.6854908277541914`*^9, 3.685642286857765*^9, 3.685659483767969*^9, 
   3.686619761795773*^9, 3.68662059977057*^9, 3.687451723986866*^9, 
   3.688955069161277*^9, 3.691629292785145*^9, 3.691721479068387*^9, 
   3.6918400175175133`*^9, 3.691840058693755*^9, 3.6920272162931767`*^9, 
   3.6921200097045903`*^9, 3.692921374727879*^9, 3.6943882550693913`*^9, 
   3.694477235809696*^9, 3.6956888012018447`*^9, 3.7132461027333612`*^9, 
   3.716849338403266*^9, {3.7170003978634243`*^9, 3.717000398695594*^9}, 
   3.719481812672857*^9, 3.7195790944344006`*^9, 3.719579212416125*^9, 
   3.71959618912444*^9, {3.7202685293606815`*^9, 3.7202685467168374`*^9}, 
   3.720644925306798*^9, 3.720725886318293*^9, 3.7207479741822963`*^9, 
   3.720816802511804*^9, 3.7208183216555862`*^9, 3.7208192945528703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["stationsAnd61Import",
  FontWeight->"Bold"],
 " - imports station locations and fort.61 WSE timeseries"
}], "Section",
 CellChangeTimes->{{3.6462746050053515`*^9, 3.6462746106553593`*^9}, {
  3.648270136815508*^9, 3.648270145790021*^9}, {3.6482727953735046`*^9, 
  3.648272806707153*^9}, {3.6483646086527233`*^9, 3.6483646289788857`*^9}, {
  3.6483719431738896`*^9, 3.6483719488366995`*^9}, {3.6483722911640334`*^9, 
  3.6483722998220487`*^9}}],

Cell["\<\
This function is a little esoteric. It\[CloseCurlyQuote]s purpose is to \
import the locations (fort.15) and WSE timeseries information (Fort.61) for a \
set of ADCIRC stations in one or more cross-sections of interest (xsecs), \
then export that information to a set of ascii files. It\[CloseCurlyQuote]s \
basically a data trimming operation, meant to shrink the (potentially quite \
large) fort.61 files into a more manageable dataset. 

INPUTS
fpath15 - fort.15 file used in the run
start - line in fort.15 file of the first station\[CloseCurlyQuote]s location
end - line in fort.15 file of the last station\[CloseCurlyQuote]s location
xsecstart/xsecend - in the set of stations, the number of the station that is \
the beginning of the xsection of \tinterest. i.e. if you have 100 stations \
total and you want info for the 5th through the 17th station, \t\txsecstart \
is 5, xsecend is 17. 
bathypath - filepath of station bathymetry info
\t(default \
bathypath=\[CloseCurlyDoubleQuote]C:\\\\Users\\\\Sam\\\\Desktop\\\\Thesis \
Work\\\\ADCIRC\\\\Data reading - \t\t\tbathymetries\\\\stationBathy.txt\
\[CloseCurlyDoubleQuote];(*text file. one column. one value for each station*)
path61 - some fort.61
wseoutpath - output path for all WSE data at the stations. That means for a \
section with 10 stations, \t\tthere\[CloseCurlyQuote]ll be 10 timeseries. \
useful for debugging
avgWSEoutpath - timeseries of average WSE across the river xsection. that \
means for a section with 10 \t\tstations, there\[CloseCurlyQuote]s only one \
timeseries. This is what will be reported generally.
headerinfo - extra info that gets tacked on to the \
\[OpenCurlyDoubleQuote]throw\[CloseCurlyDoubleQuote] list. Useful for \
debugging. 

OUTPUTS
headerinfo - as above, verbatim
lastx - list of easting coordinates (feet) according to the projection given. \
Note: you must manually change grid parameters for this to be accurate!!!!!
lasty - as lastx, but northing coordinates 
lastz - elevation of stations in xsection
WSEtimeseries - average WSE timeseries for the x-section, excluding dry areas. 

NOTE TO SELF - when you have some time, refactor this to instead just take \
the lines of fort.15 indicating the stations of interest\
\>", "Text",
 CellChangeTimes->{{3.6482732973392153`*^9, 3.648273573340002*^9}, {
  3.64827440185139*^9, 3.648274414567117*^9}, {3.648279223788189*^9, 
  3.6482792326286945`*^9}, {3.6482822281940312`*^9, 3.6482822451029987`*^9}, {
  3.64828567819236*^9, 3.6482859658298116`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stationsAnd61Import", "[", 
     RowBox[{
     "fpath15_", ",", "start_", ",", "end_", ",", "xsecstart_", ",", 
      "xsecend_", ",", "bathypath_", ",", "path61_", ",", "wseoutpath_", ",", 
      "avgWSEoutpath_", ",", "headerinfo_"}], "]"}], ":=", "\n", 
    RowBox[{"Catch", "[", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nstations", ",", "stationlat", ",", "stationlon", ",", "s15", ",", 
         "slam0", ",", "sfea0", ",", "NAN", ",", "d2r", ",", "R", ",", 
         "slam0r", ",", "sfea0r", ",", "slam", ",", "stationx", ",", "sfea", 
         ",", "stationy", ",", "lastx", ",", "lasty", ",", "bathystream", ",",
          "\n", "stationbathys", ",", "lastz", ",", "dist", ",", "s", ",", 
         "temp", ",", "L", ",", "totalstations", ",", "timesteps", ",", 
         "xsecstations", ",", "ts", ",", "validateTable", ",", 
         "WSEtimeseries", ",", "deletelist", ",", "NaN", ","}], "}"}], ",", 
       "\n", 
       RowBox[{
        RowBox[{"nstations", "=", 
         RowBox[{"end", "-", "start", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n61header", "=", "908"}], ";", "\[IndentingNewLine]", 
          RowBox[{"n61headerstations", "=", 
           RowBox[{"start", "-", "n61header"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n62header", "="}], ";", "\[IndentingNewLine]", 
          RowBox[{"n62stationstart", "="}], ";", "\[IndentingNewLine]", 
          RowBox[{"n62header", "="}], ";"}], "\[IndentingNewLine]", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{"\"\<i\>\"", "\n", 
          RowBox[{"Dynamic", "[", "i", "]"}], "\[IndentingNewLine]", 
          "\"\<j\>\"", "\n", 
          RowBox[{"Dynamic", "[", "j", "]"}], "\[IndentingNewLine]", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
           "\"\<validation Table - should be list of station indexes, going \
from \>\"", ",", 
            RowBox[{"ToString", "[", "xsecstart", "]"}], ",", 
            "\"\< (xsecstart) to \>\"", ",", 
            RowBox[{"ToString", "[", "xsecend", "]"}], ",", 
            "\"\< (xsecend)\>\""}], "]"}], "\n", 
          RowBox[{"Dynamic", "[", "validateTable", "]"}]}], 
         "\[IndentingNewLine]", "*)"}], "\n", "\n", "\[IndentingNewLine]", 
        RowBox[{"stationlat", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "nstations", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"stationlon", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "nstations", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"s15", "=", 
         RowBox[{"OpenRead", "[", "fpath15", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Skip", "[", 
         RowBox[{"s15", ",", "String", ",", 
          RowBox[{"(", 
           RowBox[{"start", "-", "1"}], ")"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"stationlon", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Read", "[", 
             RowBox[{"s15", ",", "Number"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"stationlat", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Read", "[", 
             RowBox[{"s15", ",", "Number"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Skip", "[", 
            RowBox[{"s15", ",", "String"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nstations"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "s15", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"convert", " ", 
          RowBox[{"lat", "/", "longs"}], " ", "into", " ", 
          RowBox[{"x", "/", "y"}]}], " ", "*)"}], "\n", 
        RowBox[{"slam0", "=", 
         RowBox[{"-", "79.0"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"center", " ", "longitude"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"sfea0", "=", "35.0"}], ";", 
        RowBox[{"(*", 
         RowBox[{"center", " ", "latitude"}], "*)"}], "\n", 
        RowBox[{"NAN", "=", "\"\<NAN\>\""}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Designator", " ", "for", " ", "non"}], "-", "values"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"d2r", "=", 
         RowBox[{"3.14159265358979323", "/", "180"}]}], ";", "\n", 
        RowBox[{"R", "=", "6378206.4"}], ";", "\n", 
        RowBox[{"slam0r", "=", 
         RowBox[{"slam0", "*", "d2r"}]}], ";", "\n", 
        RowBox[{"sfea0r", "=", 
         RowBox[{"sfea0", "*", "d2r"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"slam", "=", 
         RowBox[{"stationlon", "*", "d2r"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"stationx", "=", 
         RowBox[{"R", "*", 
          RowBox[{"(", 
           RowBox[{"slam", "-", "slam0r"}], ")"}], "*", 
          RowBox[{"Cos", "[", "sfea0r", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sfea", "=", 
         RowBox[{"stationlat", "*", "d2r"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"stationy", "=", 
         RowBox[{"R", "*", "sfea"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"irene", ":", " ", 
          RowBox[{
           RowBox[{
           "last", " ", "ds", " ", "bc", " ", "is", " ", "at", " ", 
            "positions", " ", "192"}], "-", "596"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"lastx", "=", 
         RowBox[{"stationx", "[", 
          RowBox[{"[", 
           RowBox[{"xsecstart", ";;", "xsecend"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lasty", "=", 
         RowBox[{"stationy", "[", 
          RowBox[{"[", 
           RowBox[{"xsecstart", ";;", "xsecend"}], "]"}], "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{"import", " ", "station", " ", "bathymetries"}], "*)"}], 
        "\n", 
        RowBox[{"bathystream", "=", 
         RowBox[{"OpenRead", "[", "bathypath", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"stationbathys", "=", 
         RowBox[{"ReadList", "[", "bathystream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lastz", "=", 
         RowBox[{"stationbathys", "[", 
          RowBox[{"[", 
           RowBox[{"xsecstart", ";;", "xsecend"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "bathystream", "]"}], ";", 
        "\[IndentingNewLine]", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"visualize", " ", "river", " ", "x"}], "-", "section"}], 
          ",", " ", 
          RowBox[{"if", " ", "applicable"}]}], "*)"}], "\n", 
        RowBox[{"dist", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lastx", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{"Min", "[", "lastx", "]"}]}], ")"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lasty", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{"Min", "[", "lasty", "]"}]}], ")"}], "^", "2"}]}], 
            ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "lastx", "]"}], ",", "1"}], "}"}]}], 
          "]"}]}], ";", "\n", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Generate", " ", "WSE", " ", "timeseries", " ", "at", " ", "each", 
          " ", 
          RowBox[{"station", "'"}], "s", " ", "points"}], "*)"}], "\n", 
        RowBox[{"s", "=", 
         RowBox[{"OpenRead", "[", "path61", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"s", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"L", "=", 
         RowBox[{"Length", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "import", " ", "61", " ", "timeseries", " ", "for", " ", "target", 
           " ", "x"}], "-", "section"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"totalstations", "=", "nstations"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"timesteps", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "2"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"totalstations", "+", "1"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"xsecstations", "=", 
         RowBox[{"xsecend", "-", "xsecstart", "+", "1"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ts", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", "timesteps", "}"}]}], "]"}], ",", 
           RowBox[{"{", "xsecstations", "}"}]}], "]"}]}], ";", "\t", 
        "\[IndentingNewLine]", 
        RowBox[{"validateTable", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "xsecstations", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"s", "=", 
         RowBox[{"OpenRead", "[", "path61", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Skip", "[", 
         RowBox[{"s", ",", "String", ",", 
          RowBox[{"xsecstart", "+", "2"}]}], "]"}], ";", 
        RowBox[{"(*", " ", "*)"}], "\n", "\n", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"validateTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"Read", "[", 
                RowBox[{"s", ",", "Number"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ts", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
               RowBox[{"Read", "[", 
                RowBox[{"s", ",", "Number"}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "xsecstations"}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Skip", "[", 
            RowBox[{"s", ",", "String", ",", 
             RowBox[{"totalstations", "+", "1", "-", "xsecstations"}]}], 
            "]"}], ";"}], 
          RowBox[{"(*", 
           RowBox[{"<", 
            RowBox[{
             RowBox[{
              RowBox[{"--", " ", "Replace"}], " ", "with", " ", "the", " ", 
              "total", " ", "number", " ", "of", " ", "stations"}], " ", "-", 
             " ", 
             RowBox[{
             "the", " ", "number", " ", "of", " ", "stations", " ", "before", 
              " ", "the", " ", "target", " ", "xsection"}]}]}], " ", "*)"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "timesteps"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"wseoutpath", ",", "ts"}], "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "this", " ", "section", " ", "calculates", " ", "the", " ", 
          "average", " ", "WSE", " ", "at", " ", "each", " ", "timestep"}], 
         "*)"}], "\n", 
        RowBox[{"WSEtimeseries", "=", 
         RowBox[{"Transpose", "[", "ts", "]"}]}], ";", "\n", "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"deletelist", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"WSEtimeseries", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
                RowBox[{"-", "999"}]}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"deletelist", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"deletelist", ",", 
                   RowBox[{"{", "j", "}"}]}], "]"}]}], ";"}]}], "\n", "\t\t", 
              "]"}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"WSEtimeseries", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";",
            "\n", "\t", 
           RowBox[{
            RowBox[{"WSEtimeseries", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"WSEtimeseries", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "deletelist"}], "]"}]}], 
           ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "WSEtimeseries", "]"}]}], "}"}]}], "]"}], 
        ";", "\n", "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"WSEtimeseries", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"WSEtimeseries", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "NaN"}], ";"}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"WSEtimeseries", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"Median", "[", 
                RowBox[{"WSEtimeseries", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";"}]}], "\n", "\t",
             "]"}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "WSEtimeseries", "]"}]}], "}"}]}], "]"}], 
        ";", "\n", "\n", 
        RowBox[{"Export", "[", 
         RowBox[{"avgWSEoutpath", ",", "WSEtimeseries"}], "]"}], ";", "\n", 
        RowBox[{"\"\<median WSE timeseries at DS boundary\>\"", "\n", "\n", 
         RowBox[{"Throw", "[", 
          RowBox[{"{", 
           RowBox[{
           "headerinfo", ",", "lastx", ",", "lasty", ",", "lastz", ",", 
            "WSEtimeseries"}], "}"}], "]"}]}], ";"}]}], "\n", "]"}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "module"}], "*)"}], "\n", "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"relevant", " ", "stored", " ", 
    RowBox[{"variables", ":", " ", "\n", "\n", 
     RowBox[{"WSEtimeseries", "\n", "ts", "\n", "stationBathys"}]}]}], "*)"}],
   "\n", "\n", "\n", "\n", "\n", "\n"}]], "Code",
 CellChangeTimes->{{3.637401699870002*^9, 3.637401798847663*^9}, {
   3.6374020676620383`*^9, 3.6374022021327295`*^9}, {3.637402284567445*^9, 
   3.637402286115533*^9}, {3.6374023914745593`*^9, 3.6374024180290785`*^9}, {
   3.6374027544273195`*^9, 3.637402964885357*^9}, {3.6374030168303275`*^9, 
   3.637403127516659*^9}, {3.637404617327871*^9, 3.637404621242095*^9}, {
   3.6374048439438324`*^9, 3.637404847536038*^9}, {3.640087787481122*^9, 
   3.6400878045791464`*^9}, {3.640087847016206*^9, 3.6400878538197155`*^9}, {
   3.6400878886277647`*^9, 3.640087909123294*^9}, {3.6400880317619677`*^9, 
   3.640088050145994*^9}, {3.6401471821383743`*^9, 3.640147185975981*^9}, {
   3.6401474613238173`*^9, 3.640147464325989*^9}, {3.6402020819356585`*^9, 
   3.6402022248118305`*^9}, {3.6402022695893917`*^9, 
   3.6402022946258235`*^9}, {3.640202389545253*^9, 3.6402024917000957`*^9}, {
   3.6402348481132016`*^9, 3.640234860405905*^9}, {3.6403329966980486`*^9, 
   3.6403330073646584`*^9}, {3.640417918343439*^9, 3.6404179271574545`*^9}, {
   3.6459826994192076`*^9, 3.645982699689208*^9}, {3.645986971804756*^9, 
   3.645986996664791*^9}, {3.6459870379048486`*^9, 3.6459870433148565`*^9}, {
   3.6459871397115364`*^9, 3.645987202978792*^9}, {3.6459872705745735`*^9, 
   3.6459872772945833`*^9}, {3.6459873145846353`*^9, 3.645987320734644*^9}, {
   3.6459873545146914`*^9, 3.645987357234695*^9}, {3.6459874026247587`*^9, 
   3.6459874471048207`*^9}, {3.6462723947100472`*^9, 
   3.6462723980100517`*^9}, {3.6462724428601146`*^9, 
   3.6462724752701597`*^9}, {3.646272647590401*^9, 3.646272656840414*^9}, {
   3.646272692940465*^9, 3.646272696120469*^9}, {3.6462727436905355`*^9, 
   3.646272788870599*^9}, {3.646272983800872*^9, 3.6462730241409283`*^9}, 
   3.646273234511223*^9, {3.64627348232378*^9, 3.6462735751939096`*^9}, {
   3.6462737010940857`*^9, 3.6462738441142864`*^9}, {3.6462739749844694`*^9, 
   3.646274074644609*^9}, {3.646274158954727*^9, 3.646274176684752*^9}, {
   3.6462742128648024`*^9, 3.646274219644812*^9}, {3.646274313974944*^9, 
   3.6462743871350465`*^9}, {3.64627451132522*^9, 3.6462745157252264`*^9}, {
   3.646275512368622*^9, 3.646275530378647*^9}, {3.6462788214157495`*^9, 
   3.6462788243657537`*^9}, {3.646278867955815*^9, 3.6462788690858164`*^9}, {
   3.6462791585562215`*^9, 3.6462791685162354`*^9}, {3.648269298372551*^9, 
   3.6482693195187607`*^9}, {3.648269404162602*^9, 3.648269426308869*^9}, 
   3.648270160001834*^9, 3.6482727121687455`*^9, {3.6482727597694683`*^9, 
   3.6482729528275104`*^9}, {3.6482729911627035`*^9, 
   3.6482729940618687`*^9}, {3.6482730262897124`*^9, 
   3.6482732421540594`*^9}, {3.648281574131621*^9, 3.648281628957757*^9}, {
   3.648281765243552*^9, 3.6482818118252163`*^9}, {3.648285049455398*^9, 
   3.648285052773588*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["anglesAndMagsClockwiseFromNorth",
  FontWeight->"Bold"],
 " - Takes u,v data and converts to magnitude/angle"
}], "Section",
 CellChangeTimes->{{3.6483646298819375`*^9, 3.648364644277761*^9}, 
   3.64837193561263*^9, {3.648372302942054*^9, 3.6483723200396843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"angle", " ", "between", " ", "v1", " ", "and", " ", "v2"}], " ",
      "=", " ", 
     RowBox[{"arccos", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{"v1", ",", "v2"}], "]"}], " ", "/", " ", 
        RowBox[{"Abs", "[", "v1", "]"}]}], "*", 
       RowBox[{"Abs", "[", "v2", "]"}]}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"with", " ", "sign", " ", "of", " ", 
      RowBox[{"det", ".", " ", "\n", "determining"}], " ", "if", " ", "the", 
      " ", "angle", " ", "is", " ", "clockwise", " ", 
      RowBox[{"(", "+", ")"}], " ", "or", " ", "counter"}], "-", 
     RowBox[{"clockwise", 
      RowBox[{"(", "-", ")"}]}]}]}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"method", " ", "1"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"ARcCos", "[", "dot", "]"}], "\n", "NOT", " ", "CURRENTLY", " ", 
     RowBox[{
      RowBox[{"FUNCTIONAL", "!!"}], "!!"}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"windstrength", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"uxs", "^", "2"}], "+", 
        RowBox[{"vys", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"windvectors", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"uxs", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
         RowBox[{"vys", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nstations"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"windDotOrigin", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"windvectors", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "originVector"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nstations"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"windDetOrigin", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Det", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"windvectors", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "originVector"}], 
         "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nstations"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"internalAngle", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"windDotOrigin", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
         RowBox[{"windstrength", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nstations"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"clockwiseAngle", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nstations"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"windDetOrigin", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"clockwiseAngle", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"2", "*", "Pi"}], "-", 
               RowBox[{"internalAngle", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"clockwiseAngle", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"internalAngle", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nstations"}], "}"}]}], "]"}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}], ";", "\n", 
    "\[IndentingNewLine]", "\n", 
    RowBox[{"clockwiseAngleRad", "=", "clockwiseAngle"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"clockwiseAngleDeg", "=", 
     RowBox[{"clockwiseAngle", "*", 
      RowBox[{"180", "/", "Pi"}]}]}], ";"}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"method", " ", "2"}], " ", "-", " ", "\n", 
      RowBox[{
      "w", " ", "is", " ", "wind", " ", "vector", "\n", "n", " ", "is", " ", 
       "northing", " ", "vector", " ", 
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}], "\n", "cos", 
       RowBox[{"(", "theta", ")"}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"w", ".", "n"}], "/"}], "|", "w", "|", 
       RowBox[{"*", 
        RowBox[{"|", "n", "|", "\n", "theta"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"arccos", " ", 
        RowBox[{
         RowBox[{"w", ".", "n"}], " ", "/"}]}], " ", "|", "w", "|", 
       RowBox[{"*", 
        RowBox[{"|", "n", "|", "\n", 
         RowBox[{
          RowBox[{"then", " ", "apply", " ", "special", " ", "cases"}], " ", 
          "-", " ", 
          RowBox[{
          "if", " ", "easting", " ", "is", " ", "positive"}]}]}]}]}]}]}], ",",
     " ", 
    RowBox[{"angle", " ", "is", " ", 
     RowBox[{"theta", ".", "\n", "If"}], " ", "easting", " ", "is", " ", 
     "negative"}], ",", " ", 
    RowBox[{
     RowBox[{"angle", " ", "is", " ", "360"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"theta", ".", "\n", "If"}], " ", "easting", " ", "is", " ", 
      "zero", " ", "and", " ", "northing", " ", "is", " ", "zero", " ", "or", 
      " ", "positive"}]}], ",", " ", 
    RowBox[{
    "angle", " ", "is", " ", "zero", "\n", "if", " ", "easting", " ", "is", 
     " ", "zero", " ", "and", " ", "northing", " ", "is", " ", "negative"}], 
    ",", " ", 
    RowBox[{
    "angle", " ", "is", " ", "180.", " ", "\n", "\n", "Otherwise", " ", 
     "determine", " ", "the", " ", "quadrant", " ", "and", " ", "calculate", 
     " ", "the", " ", "resulting", " ", 
     RowBox[{"thetas", "."}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"anglesAndMagsClockwiseFromNorth", "[", 
     RowBox[{"us_", ",", "vs_"}], "]"}], ":=", "\n", 
    RowBox[{"Catch", "[", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "origin", ",", "L", ",", "vectors", ",", "dots", ",", "mags", ",", 
         "angles", ",", "base"}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"origin", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "us", "]"}], "!=", 
           RowBox[{"Length", "[", "vs", "]"}]}], ",", 
          RowBox[{
          "Throw", "[", 
           "\"\<Error! us and vs need to be the same length.\>\"", "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"L", "=", 
         RowBox[{"Length", "[", "us", "]"}]}], ";", "\n", 
        RowBox[{"vectors", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"us", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"vs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "L"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"dots", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vectors", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", "origin"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "L"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"mags", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ")"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "L"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"angles", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "L", "}"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"Do", "[", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[GreaterEqual]", "0"}]}], 
             ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "180"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "90"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "270"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mags", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", "\n", 
             RowBox[{
              RowBox[{"base", "=", 
               RowBox[{
                RowBox[{"ArcCos", "[", 
                 RowBox[{
                  RowBox[{"dots", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "/", 
                  RowBox[{"mags", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "*", 
                RowBox[{"180", "/", "Pi"}]}]}], ";"}]}], "\n", "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ">", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "base"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", "base"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{"360", "-", "base"}]}]}], "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"us", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"vs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ">", "0"}]}], ",", 
             RowBox[{
              RowBox[{"angles", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{"360", "-", "base"}]}]}], "]"}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "L"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Throw", "[", 
         RowBox[{"{", 
          RowBox[{"angles", ",", "mags"}], "}"}], "]"}]}]}], "\n", "]"}], 
     "\n", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.642390594002521*^9, 3.6423906482325974`*^9}, {
   3.642392386507633*^9, 3.6423924105476665`*^9}, {3.6423924742177563`*^9, 
   3.642392527967831*^9}, {3.642392857447976*^9, 3.642392886008016*^9}, {
   3.6423930300166054`*^9, 3.642393115209028*^9}, {3.642393166339099*^9, 
   3.642393168269102*^9}, 3.6423933352874765`*^9, {3.6423933774975357`*^9, 
   3.642393378307537*^9}, {3.6423934889576917`*^9, 3.6423936822312546`*^9}, {
   3.642393787981403*^9, 3.6423939095938606`*^9}, {3.6423941647046127`*^9, 
   3.6423941907646494`*^9}, {3.6423942260046988`*^9, 3.6423943092172065`*^9}, 
   3.64239875686131*^9, {3.642398838961425*^9, 3.6423990067516594`*^9}, {
   3.642399113462809*^9, 3.6423991309528337`*^9}, {3.642399170772889*^9, 
   3.642399184612909*^9}, {3.642399355472498*^9, 3.6423993857949076`*^9}, {
   3.642399512428022*^9, 3.6423995146880255`*^9}, {3.642399558658087*^9, 
   3.6423995640680943`*^9}, {3.6423995954981384`*^9, 3.642399625768181*^9}, 
   3.6423998607985096`*^9, {3.6442146928494053`*^9, 3.644214785179535*^9}, {
   3.6442149098997097`*^9, 3.6442149214197254`*^9}, {3.644214988309819*^9, 
   3.6442149890298204`*^9}, {3.648358384443719*^9, 3.648358451272541*^9}, {
   3.6483585329592133`*^9, 3.648358536148396*^9}, {3.648358771843877*^9, 
   3.648358959306599*^9}, {3.6483589929265223`*^9, 3.648359023679281*^9}, {
   3.648359057703227*^9, 3.6483590954713874`*^9}, {3.648359304642351*^9, 
   3.6483593461367245`*^9}, {3.648359386026006*^9, 3.6483595427049675`*^9}, {
   3.648359580116108*^9, 3.6483596595736523`*^9}, {3.648360328894935*^9, 
   3.6483604161839275`*^9}, {3.6483611935513906`*^9, 
   3.6483612442782917`*^9}, {3.648361303172661*^9, 3.6483613834732533`*^9}, {
   3.6483614224604836`*^9, 3.648361964805504*^9}, 3.6483621081277018`*^9, {
   3.648362791050762*^9, 3.6483628131580267`*^9}, {3.648362893997651*^9, 
   3.6483629600464287`*^9}, {3.648364656170441*^9, 3.6483646567654753`*^9}, {
   3.6585887652979217`*^9, 3.658588830050625*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ts72",
  FontWeight->"Bold"],
 " - reads fort.72 (wind velocity at stations)"
}], "Section",
 CellChangeTimes->{{3.6423903005290084`*^9, 3.6423903060290165`*^9}, {
  3.648371873139668*^9, 3.6483719255662127`*^9}, {3.648372077045464*^9, 
  3.6483720904302874`*^9}, {3.648372324984893*^9, 3.6483723339237084`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ts72", "[", "fpath_", "]"}], ":=", "\n", 
   RowBox[{"(", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "temp", ",", "filelength", ",", "nstations", ",", "ntimes", 
        ",", "timestamps", ",", "vs", ",", "uxs", ",", "vys"}], "}"}], ",", 
      "\n", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\n", 
       RowBox[{"temp", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{"s", ",", "String"}], "]"}]}], ";", "\n", 
       RowBox[{"filelength", "=", 
        RowBox[{"Length", "[", "temp", "]"}]}], ";", "\n", 
       RowBox[{"Close", "[", "s", "]"}], ";", "\n", "\n", 
       RowBox[{"s", "=", 
        RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\n", 
       RowBox[{"Read", "[", 
        RowBox[{"s", ",", "String"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Line", " ", "1"}], "*)"}], "\n", 
       RowBox[{"Read", "[", 
        RowBox[{"s", ",", "Word"}], "]"}], ";", "\n", 
       RowBox[{"nstations", "=", 
        RowBox[{"Read", "[", 
         RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"ntimes", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"filelength", "-", "2"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"nstations", "+", "1"}], ")"}]}]}], ";", "\n", 
       RowBox[{"timestamps", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "ntimes", "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"uxs", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "ntimes", "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"vys", "=", "uxs"}], ";", "\[IndentingNewLine]", 
       RowBox[{"vs", "=", "vys"}], ";", "\[IndentingNewLine]", "\n", 
       RowBox[{"Read", "[", 
        RowBox[{"s", ",", "String"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Line", " ", "2"}], "*)"}], "\n", "\[IndentingNewLine]", "\n", 
       RowBox[{"Do", "[", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"timestamps", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"Read", "[", 
            RowBox[{"s", ",", "Number"}], "]"}]}], ";", " ", "\n", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "String"}], "]"}], ";", "\n", 
          RowBox[{
           RowBox[{"vs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"ReadList", "[", 
            RowBox[{"s", ",", "Number", ",", 
             RowBox[{"3", "*", "nstations"}]}], "]"}]}], ";", " ", "\n", 
          RowBox[{
           RowBox[{"vs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"vs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "3"}], "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"uxs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"vs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"vys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"vs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ntimes"}], "}"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"Close", "[", "s", "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", "uxs", "]"}], ",", 
          RowBox[{"Transpose", "[", "vys", "]"}], ",", "nstations", ",", 
          "timestamps", ",", "ntimes"}], "}"}], "]"}], ";"}]}], "\n", "]"}], 
    ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6423891863878336`*^9, 3.642389193251074*^9}, {
   3.6423894139661937`*^9, 3.6423894261562104`*^9}, {3.64238946479286*^9, 
   3.6423895618656235`*^9}, {3.6423896211818132`*^9, 
   3.6423897442244573`*^9}, {3.6423898923695908`*^9, 
   3.6423898976795983`*^9}, {3.642390239268923*^9, 3.642390245578932*^9}, {
   3.6423929013080373`*^9, 3.6423929285780754`*^9}, {3.6423934133375854`*^9, 
   3.642393420167595*^9}, {3.6423942125046797`*^9, 3.6423942193446894`*^9}, {
   3.6424004185215597`*^9, 3.6424004188915606`*^9}, {3.642403525346205*^9, 
   3.6424035277018094`*^9}, 3.648372164490811*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ReadNBDCfile",
  FontWeight->"Bold"],
 " - reads NBDC weather station file, returns single column"
}], "Section",
 CellChangeTimes->{{3.64837217525483*^9, 3.6483721784684353`*^9}, {
  3.648372335982912*^9, 3.6483723491961355`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReadNBDCfile", "[", 
    RowBox[{
    "fpath_", ",", "headerrows_", ",", "ncolumns_", ",", "columnofinterest_", 
     ",", "format_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "table", ",", "L"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"table", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"s", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{"Length", "[", "table", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"L", "-", "headerrows"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Skip", "[", 
       RowBox[{"s", ",", "String", ",", "headerrows"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Skip", "[", 
          RowBox[{"s", ",", "Word", ",", 
           RowBox[{"columnofinterest", "-", "1"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"table", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "format"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Skip", "[", 
          RowBox[{"s", ",", "Word", ",", 
           RowBox[{"ncolumns", "-", "columnofinterest"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"L", "-", "headerrows"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "table", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6423891863878336`*^9, 3.642389193251074*^9}, {
   3.6423894139661937`*^9, 3.6423894261562104`*^9}, {3.64238946479286*^9, 
   3.6423895618656235`*^9}, {3.6423896211818132`*^9, 
   3.6423897442244573`*^9}, {3.6423898923695908`*^9, 
   3.6423898976795983`*^9}, {3.642390239268923*^9, 3.642390245578932*^9}, {
   3.6423929013080373`*^9, 3.6423929285780754`*^9}, {3.6423934133375854`*^9, 
   3.642393420167595*^9}, {3.6423942125046797`*^9, 3.6423942193446894`*^9}, {
   3.6424004185215597`*^9, 3.6424004188915606`*^9}, {3.642403525346205*^9, 
   3.6424035277018094`*^9}, 3.648372164490811*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["OBSOLETE - scatterNSmean",
  FontWeight->"Bold"],
 " - sorts data into common bins, averages the bins and applies NSE"
}], "Section",
 CellChangeTimes->{{3.6467046723307323`*^9, 3.6467046874939594`*^9}, 
   3.648364626762759*^9, {3.648371982844759*^9, 3.6483720015288515`*^9}, {
   3.6483722279839225`*^9, 3.6483722418367467`*^9}, 3.6483722732864017`*^9, {
   3.6483724386652546`*^9, 3.6483724412814045`*^9}}],

Cell["\<\
generate (using some other script) two scatters to be compared, with format \
{{t1,y1},{t2,y2}...,{tn,yn}} where tx is the xth time measurement and yx is \
the xth quantity measured (flow, stage, etc) 

The output is {nse,gaplossobs,gaplossmod,overlap,obqs,modqs}. 

\[OpenCurlyDoubleQuote]Gap\[CloseCurlyDoubleQuote] means some data did not \
overlap and was excluded. \[OpenCurlyDoubleQuote]obs\[CloseCurlyDoubleQuote] \
vs \[OpenCurlyDoubleQuote]mod\[CloseCurlyDoubleQuote] tells you if the lost \
data came from observed or model dataset. IE Gaplossmod is harmless, \
gaplossobs is bad.  Overlap is the average number of extra data entries \
averaged into each averaging bin. IE if you have 5 minute data and want the \
NSE over 15 minute intervals, overlap will be two (three 5-minute data points \
per 15-minute \[OpenCurlyDoubleQuote]bin\[CloseCurlyDoubleQuote], so two \
\[OpenCurlyDoubleQuote]overlapped\[CloseCurlyDoubleQuote] data points). \
Ideally gaplossobs, gaplossmod, and overlap will all be zero. The real best \
answer for \[OpenCurlyDoubleQuote]increment\[CloseCurlyDoubleQuote] minimizes \
the three, and the best averaged NSE will take sensitivity to \
\[OpenCurlyDoubleQuote]increment\[CloseCurlyDoubleQuote] into account. 

obqs and modqs are just the averaged timeseries for each parameter. It\
\[CloseCurlyQuote]d be good practice to plot these along with the original \
data to make sure they are representing the behavior of the system. 
\
\>", "Text",
 CellChangeTimes->{{3.645893497553027*^9, 3.6458935162360864`*^9}, {
  3.645893701516736*^9, 3.6458937417137966`*^9}, {3.6467047567424808`*^9, 
  3.6467050505065966`*^9}, {3.646705689031318*^9, 3.6467057563298364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scatterNSmean", "[", 
     RowBox[{"obscatter_", ",", "modelscatter_", ",", "timeinc_"}], "]"}], ":=",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "set", " ", "timeinc", " ", "to", " ", "the", " ", "length", " ", "of", 
      " ", "\"\<bins\>\"", " ", "to", " ", "be", " ", "used"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "L", ",", "times1", ",", "vals1", ",", "times2", ",", "vals2", ",", 
         "commonstart", ",", "commonend", ",", "bin", ",", "binstart", ",", 
         "binstop", ",", "obqs", ",", "modqs", ",", "gaps", ",", "obqm", ",", 
         "topsumsq", ",", "botsumsq", ",", "nse", ",", "overlaplist", ",", 
         "overlap", ",", " ", "gapnum", ",", "gaplossmod", ",", 
         "gaplossobs"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"let", "'"}], "s", " ", "say", " ", "we", " ", "want", " ", 
          "to", " ", "do", " ", "an", " ", "N"}], "-", 
         RowBox[{"S", " ", "calculation", " ", "on", " ", "a", " ", "15"}], 
         "-", 
         RowBox[{"minute", " ", "time", " ", 
          RowBox[{"interval", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "step", " ", "1", " ", "is", " ", "to", " ", "calculate", " ", "the", 
         " ", "extent", " ", "of", " ", "each", " ", "scatter"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"times1", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "obscatter", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vals1", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "obscatter", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"times2", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "modelscatter", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vals2", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "modelscatter", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"commonstart", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Min", "[", "times1", "]"}], ",", 
           RowBox[{"Min", "[", "times2", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"commonend", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Max", "[", "times1", "]"}], ",", 
           RowBox[{"Max", "[", "times2", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
           "step", " ", "2", " ", "is", " ", "to", " ", "find", " ", "out", 
            " ", "how", " ", "many", " ", "15"}], "-", 
           RowBox[{"minute", " ", "intervals", " ", "there", " ", "are"}]}], 
          ",", " ", 
          RowBox[{"shared", " ", "among", " ", "the", " ", "two", " ", 
           RowBox[{"scatters", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"e", ".", "g", ".", " ", 
             RowBox[{"let", "'"}]}], "s", " ", "say", " ", "the", " ", "two", 
            " ", 
            RowBox[{"timeseries", "'"}], " ", "start", " ", "at", " ", "0"}], 
           ":", 
           RowBox[{"00", " ", "and", " ", "15"}], ":", "00"}], ",", " ", 
          RowBox[{
           RowBox[{"commonstart", " ", "would", " ", "be", " ", "15"}], ":", 
           "00"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
           "then", " ", "if", " ", "commonend", " ", "is", " ", "20"}], ":", 
           "00"}], ",", " ", 
          RowBox[{"L", " ", "is", " ", "5", " ", "hours"}], ",", " ", 
          RowBox[{
           RowBox[{
           "divided", " ", "by", " ", "15", " ", "minutes", " ", "gives", " ",
             "L"}], " ", "=", " ", 
           RowBox[{"20", " ", 
            RowBox[{"bins", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"L", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"commonend", "-", "commonstart"}], ")"}], "/", 
          "timeinc"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"L", "=", 
         RowBox[{"Ceiling", "[", "L", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "bin", " ", "is", " ", "a", " ", "table", " ", "of", " ", "the", 
           " ", "observations", " ", "or", " ", "forecasts", " ", "in", " ", 
           "each", " ", "15"}], "-", 
          RowBox[{"minute", " ", "interval"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"bin", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"{", "L", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"for", " ", "each", " ", "bin"}], ",", " ", 
          RowBox[{"calculate", " ", "the", " ", "time", " ", "extents"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"binstart", "=", 
            RowBox[{"commonstart", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "*", "timeinc"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"binstop", "=", 
            RowBox[{"commonstart", "+", 
             RowBox[{"i", "*", "timeinc"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"collect", " ", 
             RowBox[{"obscatter", "'"}], "s", " ", "entries", " ", "that", 
             " ", "fit", " ", "the", " ", "bin"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"times1", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "<", "binstop"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"times1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
                    "binstart"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"bin", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"bin", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"vals1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], ";"}]}],
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "obscatter", "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"collect", " ", 
             RowBox[{"modelscatter", "'"}], "s", " ", "entries", " ", "that", 
             " ", "fit", " ", "the", " ", "bin"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"times2", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "<", "binstop"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"times2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
                    "binstart"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"bin", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"bin", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"vals2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], ";"}]}],
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "modelscatter", "]"}]}], "}"}]}], "]"}],
            ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "L"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"now", " ", "measure", " ", "each", " ", 
           RowBox[{"series", "'"}], " ", "overlap"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "sum", " ", "of", 
            " ", "the", " ", 
            RowBox[{"avg", ".", " ", "number"}], " ", "of", " ", "entries", 
            " ", "in", " ", "each", " ", "bin"}], " ", "-", "1"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"overlaplist", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"bin", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"Length", "[", 
                RowBox[{"bin", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", "2"}], 
              ">", "0"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"bin", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "+", 
              RowBox[{"Length", "[", 
               RowBox[{"bin", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", "2"}], 
             ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "bin", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"overlap", "=", 
         RowBox[{"Mean", "[", "overlaplist", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "gaps", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "gaps", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"now", " ", "replace", " ", "all", " ", 
          RowBox[{"(", "extant", ")"}], " ", "bins", " ", "with", " ", "the", 
          " ", "mean", " ", "of", " ", "the", " ", "contents", " ", "of", " ",
           "that", " ", "bin"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bin", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[NotEqual]", 
                 RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"bin", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                  RowBox[{"Mean", "[", 
                   RowBox[{"bin", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "bin", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "now", " ", "that", " ", "all", " ", "bins", " ", "are", " ", 
             "populated"}], " ", "&"}], " ", "averaged"}], ",", " ", 
          RowBox[{"delete", " ", "gaps"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"while", " ", "doing", " ", "so"}], ",", " ", 
          RowBox[{
          "track", " ", "the", " ", "number", " ", "of", " ", "actual", " ", 
           "values", " ", "that", " ", "are", " ", "deleted"}]}], "*)"}], 
        "\n", "\[IndentingNewLine]", 
        RowBox[{"obqs", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "bin", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"modqs", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "bin", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gapnum", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"remove", " ", "gaps"}], " ", "-", " ", 
          RowBox[{"pass", " ", "1"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"gaps", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"obqs", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gaplossmod", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"modqs", "[", 
             RowBox[{"[", 
              RowBox[{"gaps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "gaps", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"obqs", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"obqs", ",", "gaps"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"modqs", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"modqs", ",", "gaps"}], "]"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"remove", " ", "gaps"}], " ", "-", " ", 
          RowBox[{"pass", " ", "2"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"gaps", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"modqs", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gaplossobs", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"obqs", "[", 
             RowBox[{"[", 
              RowBox[{"gaps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "gaps", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"obqs", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"obqs", ",", "gaps"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"modqs", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"modqs", ",", "gaps"}], "]"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"calculate", " ", "NSE"}], "*)"}], "\[IndentingNewLine]", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJztnUtu40YQholEiyy81j46gY6gZB/AmJxgDCTbABMDwVzBh/AxfAqdw6cY
oPMPC9Nos99Uvyj+H2CDoiiySP5drH6w69enfz79/dM0Tf/+gn+fPv/325cv
n7/+ecCH378+//X0Mxb+wN83/H1fVoQQQgghhBBCCCGEELKW19fXp5nT6fT2
9tbbHELq8v7+DrXLMgQ/TRPW9DVp5xyPx8vlgpvy+PiI2yHuCMsPDw+9TbsT
4OTNviQsY01He3YO3M7Ly4ssY8HUuXZNN7Lap12v13G0kWiM72R1PIMNoHns
raRxJIfn52e9fJlxfrUaPC9W318YU8SGIiQag23C4TouiHmRSV/g5LXPLwKe
FAHfiK8gAB1KQQkLJwl7mvnDgsbYv9Xg8lLwZZlmzi5OpxPi9ukHtrblmVuw
bgWF4LjOr3AU2LOIneAeD4eDOElRID6GS00RihuDHTpPXJpu9DYlbCffH6xO
PZvgysNl4S4v1i+C+dvBIZyOESuhH6eRZsUZG/iKTEEqGQNnvigdKD4Q/PsM
9sbmyoLg1uAmRt0IBLnYZhHM3wi0hMeKvR4HhXmQk/NX0o4nemgQzNczBr8y
vQquxvSRGy0nJnIfnXpbbLZwbmWDeYmK7fVQAszz/Uq0IeqCPaK3emFAVWMC
eybFEQeV3tKI2yot8wVdK+Rkl6CoYeYG4gyxplI8X9sYXIFxGlr3gGi4Y9AI
L2cH84i7wtVkFBNdH8HGKIBl25FaGiPdfAUMJckgvOnYkeqUEwpC2CTopFm/
fG1jHmfW/ZasQ8LRBk0fTpzVtKg90KHdoBTmGsMn2hrGmMDJsym+PfJ07tIU
7NN8QAbS0JrVCSVdAGF8AUZxYxZQ813AZU+sk64Y2QI5BSThLGuIJQK9VNLp
k2XDLdQ2hrFNe6DhdD+T1WKDxwf04KylanTjngkOoVvwYN7zjHxEFNFYIbWN
GWqw0B6AGrNi0RUjW8Kahwt1tnLAKogBP5Rv4VEhDGkVyTp6EaoaczweB+ls
lRdV8OTFXb4YyMqqHWS4pM0CPLub1UYUu3pkS1jzkI3vZEVXesS+aepih9hS
wrN61y3FGHnjQ95vEpOwvV72PRGG6pOSvgb7/uIc6zXuSV/8Le0A6eAmRj3M
64wsm4NJpGD6MMtRWPPYMuViYg9az4uuYRnlaC/Xw2eM7orVNpiDmpzazgos
GwDLfa0ZNeyUUXbYcxvNp9RbZZiZ/rgu8gxrXnYbLXrYQFuCq2T6WPOZ22bM
uc8YGRimtW36RlxJ5zCPcAW/PTKq1vlVVWciA3rr7V/Nt0BGMzqRmppEcaaE
1o1siWreN6TWRLR9mDGDBLFTf8T9qtchGzVGzY9CbY8Za0lQtLhuuJhDOXk1
P5jMMzJ1XrVsNtC8FOcUTA9sDiaR2MbZ0J0V2wiQSvQJYpdB9aPw2su1cRqj
Pg4kMKvnMoR14Sp79QP6WATzLeuVDTS/jtzBJPLug2gj+qvou3I+zLeWVvy8
LOa7APAYuuxjPU7QrBvabr87crPEa8koo5R4RqLxMFE9D6t5ct8sgnkIvlkj
KjVPuoAAzPdqf+2KdqLmVw+aIsRGKuZmCGrqp3YLcIrmbxw0RbZFBZUtkcFy
Tj9p9tHYMJ4nG0Xej/Z91eDo1Pw+6ThBKwTv1HYgYCgINb9Pek3QqkeR+YaW
VTVDus7lQFjAR9ZD9wMnaCU7hBO07pYB+yiLAA0nDtLjBK27os144F7g7KLD
MDhB665oM/lkX8JtMpygdTSqphqR90fGvNEFe5dwgr4x6pygdTRqpxrZz4xe
zviNE7QOSNVUI+YbRqtZMRVJF4qcLGlM8VQjKS0V0RwfLefNiBoTptccDntG
np7OwWntU42oue874KKjOT6ENkl2Eo0Jg6sanQidlGWoVCOLV7ntb6M5Ppol
2UkxJoUafoNEOY+RakTNBdDn9NJzfDRo50w3JoXwo43UYJBUI2oufb5ClJ7j
o0Ewn25M4t520k41FCOkGlFzs7/ThqwcH7WT7GQZk4K8al3IOpJB91Qjan7K
Ox8c55wcH1PlJDtZxqSA0sFqbC/6phpRH+e4M8nK8ZE7FUkuxROOwNq+l33P
XLumGlH+seJRqzadcMSc5Zu0p2OqERXU/B0nHKHm+9Ix1Yjya/6+E44wtulI
31Qjyl+H3XTCkeis+KzD9uLaO9WI7NNXjjaacCRlVnzJ3VDbZmLTPdWIijnt
zSUcSZwVP9ATR+pxHiDViMrxeL4cH2qwhCMps+JjPYdWNmacVCM4SmILxiYS
jiTOip/bzkNuZKhUI8qTKNZmKwlHorPiy9jj2hYSk9FSjaRXSzeRcCQKZ/PY
Crn9++mpRnxZxtIZKuFIlBQ/QO6e4zDZgWtjploje6ZlTNKXNu8wkk1wNnLt
3Stbib5IM1L6yLYLgredPMtIOpIi+S5lL8M87vLUCCGEEEIIIYQQQgghhBAi
/A+MhOtV
           "], {{0, 77}, {252, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->{236., Automatic},
         ImageSizeRaw->{252, 77},
         PlotRange->{{0, 252}, {0, 77}}], ";", "\[IndentingNewLine]", 
        RowBox[{"obqs", "=", 
         RowBox[{"Flatten", "[", "obqs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"modqs", "=", 
         RowBox[{"Flatten", "[", "modqs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"obqm", "=", 
         RowBox[{"Mean", "[", "obqs", "]"}]}], ";", "\n", 
        RowBox[{"topsumsq", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"obqs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"modqs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "obqs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"botsumsq", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"obqs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", "obqm"}], ")"}], "^", 
            "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "obqs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"nse", "=", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", "topsumsq", ")"}], "/", 
           RowBox[{"(", "botsumsq", ")"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Throw", "[", 
         RowBox[{"{", 
          RowBox[{
          "nse", ",", "gaplossobs", ",", "gaplossmod", ",", "overlap", ",", 
           "obqs", ",", "modqs"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Code",
 CellChangeTimes->{{3.644452645108388*^9, 3.6444526693184214`*^9}, {
   3.6444528640556717`*^9, 3.644452910165736*^9}, {3.644452985125841*^9, 
   3.644453014705882*^9}, {3.644453540354283*^9, 3.644453626971451*^9}, {
   3.644454127774703*^9, 3.6444542997182045`*^9}, {3.644454497077565*^9, 
   3.6444545102907887`*^9}, {3.6444545534676476`*^9, 3.644454620258792*^9}, {
   3.6444551854965844`*^9, 3.6444552169306393`*^9}, {3.6444552631074743`*^9, 
   3.6444553065223503`*^9}, {3.6444554641483383`*^9, 
   3.6444555229604416`*^9}, {3.644455553787096*^9, 3.644455786552392*^9}, {
   3.644455824850459*^9, 3.644455850091304*^9}, {3.644455881525359*^9, 
   3.644455938496659*^9}, {3.644456723357558*^9, 3.6444567267583637`*^9}, {
   3.6444568957856607`*^9, 3.6444570612239513`*^9}, {3.6444588878122025`*^9, 
   3.6444590158728275`*^9}, {3.6444591018133783`*^9, 
   3.6444591246830187`*^9}, {3.64445982681175*^9, 3.6444598337679186`*^9}, {
   3.644460700857738*^9, 3.6444608206704674`*^9}, {3.64446085318151*^9, 
   3.6444608631936293`*^9}, {3.64446089641696*^9, 3.6444609026569705`*^9}, {
   3.644460935175428*^9, 3.6444610162846055`*^9}, {3.6444610778616695`*^9, 
   3.6444611045809884`*^9}, {3.6444611985711536`*^9, 3.644461198929954*^9}, {
   3.6444618065546293`*^9, 3.6444618123578396`*^9}, {3.6444621849889975`*^9, 
   3.644462244362702*^9}, {3.644464269604657*^9, 3.6444643290363274`*^9}, {
   3.6444647687336264`*^9, 3.6444647705041113`*^9}, {3.6444648351369305`*^9, 
   3.6444648511022177`*^9}, {3.6444648913159027`*^9, 
   3.6444649775381937`*^9}, {3.644465446332243*^9, 3.6444655030455885`*^9}, {
   3.644465573570323*^9, 3.644465614130027*^9}, {3.644465657883473*^9, 
   3.644465727820101*^9}, {3.6444657915086346`*^9, 3.6444658476850977`*^9}, {
   3.6444694545147405`*^9, 3.6444694619715533`*^9}, {3.6444705855579214`*^9, 
   3.644470598256344*^9}, {3.6444709718498726`*^9, 3.6444709751098766`*^9}, {
   3.644471024349946*^9, 3.6444711603801365`*^9}, {3.6444712448402543`*^9, 
   3.6444713097703457`*^9}, {3.644471480465011*^9, 3.644471487843824*^9}, {
   3.6444715579815474`*^9, 3.644471573347574*^9}, {3.6444719401419926`*^9, 
   3.644471997385066*^9}, {3.6444720332714324`*^9, 3.6444720477273264`*^9}, {
   3.644472131944652*^9, 3.644472220587053*^9}, {3.6444723588499446`*^9, 
   3.6444724685579233`*^9}, {3.6444726960282536`*^9, 3.644472821968237*^9}, {
   3.6444732234482594`*^9, 3.6444732244683175`*^9}, {3.6444732563042283`*^9, 
   3.6444732563666286`*^9}, {3.6446903542794795`*^9, 
   3.6446903587194858`*^9}, {3.646704147207009*^9, 3.6467041496406136`*^9}, {
   3.6467047128128033`*^9, 3.6467047525772734`*^9}, {3.647259935021819*^9, 
   3.6472599353138356`*^9}, 3.6472600515574846`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"this", " ", "is", " ", "a", " ", "simple", " ", "example"}], ",",
     " ", 
    RowBox[{
    "showing", " ", "how", " ", "the", " ", "function", " ", "works", " ", 
     "and", " ", "a", " ", "few", " ", "good", " ", "\"\<due diligence\>\"", 
     " ", 
     RowBox[{"steps", ".", " ", "Try"}], " ", "varying", " ", "increment", 
     " ", "to", " ", "see", " ", "how", " ", "the", " ", "model", " ", "fit", 
     " ", "changes"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"obset", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "10", ",", "0.12"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modset", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"y", "+", "4.6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "10", ",", "0.21"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"increment", "=", "0.21"}], ";"}], "\[IndentingNewLine]", 
   "\"\<original datasets:\>\"", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"obset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", "modset", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"scatterNSmean", "[", 
      RowBox[{"obset", ",", "modset", ",", "increment"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<NSE: \>\"", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{"result", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<gaploss in observed: \>\"", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{"result", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<gaploss in modeled: \>\"", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{"result", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<overlap: \>\"", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{"N", "[", 
       RowBox[{"result", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<observed data vs. representation after averaging:\>\"", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"obset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "increment"}], "+", 
            RowBox[{"increment", "/", "2"}]}], ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"5", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"result", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<model data vs. representation after averaging:\>\"", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"modset", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "increment"}], "+", 
            RowBox[{"increment", "/", "2"}]}], ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"6", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"result", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Code",
 CellChangeTimes->{{3.64670506395382*^9, 3.646705363302746*^9}, {
   3.646705412193232*^9, 3.6467056518408527`*^9}, {3.646705708702953*^9, 
   3.646705721572975*^9}, {3.646705760307843*^9, 3.6467059498013763`*^9}, {
   3.647259941386183*^9, 3.6472599416932006`*^9}, 3.6472600459681644`*^9}],

Cell[BoxData["\<\"original datasets:\"\>"], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.7208192946301155`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxdU3tQVFUYR5DXCu0Cy5vFXZhkCY0QMkzk+wRMDScBkzCYiQgEMicHR6eQ
LBMSYZAhDAPSjA2nRiAII0DlGGqI8tqQAClgd3ktC3vBWDF8ENxz/uqbubOz
d8/+vt/ryBI+jEoyNjIyenPpWf78/9S7Z+ki65ugfTQo/3B5E9DvHXD1RrSX
4EAHCHoVBzcLeuGU4fbGH3P/ZL8PQoDPpuA7eX+DPz8a2Lul3DHPRs3Oj0NT
kL+60nkUVOniqm2qSTiq03dI7o2z/+tBHh8fpNwwCdv5A7OwqVF6ZjFwiuH9
Azf3uJSFdk8Df9zdAC+1hHXWLeoZ/jxY55YMmDVy8FAel99seATqpB0tWYsc
27cAPsLsav9ODtr4eQKz9teON3tzbP8z2GryfkKhjR6i+BdGeKnhtbnKnCnG
ZwVav92ZUVMyCZv5hcY4+vGY3/XtE4yfCZYqbxgSz42C9/J6+UrMDBlVHypT
M76meHG/4pW2W4OwzCZdbIanJf0tCT29jL855opeXRuY1wU0BQuM7ak7EChq
ZnossC3j5P1Z1yJYRsvSWaLVeyYq5ZoGQvUJsPgbYYTx1buExrMKP/oipz0Y
egjVa4WTypnQLVF/kSVyS4DWaKgz3XjsmIpQ/c+holbonFY4Qnh6VUKsCVrc
q4gbJ9QPEVYGRpp1dWpJO48nwj7brqEHGh2h/thg+CN5UWLBNMO3waLPbQ3z
Sj2hftmi4khImeg7ju2zRVHoEcfLjzlC/bNDo2CrkjPDHNtvh3ckbeYOERyh
fooxKGp98s6devL9sjyFGPuk2TjXN0Wov/b48guGgcTHk6SYH3s8bLr+bEbj
BKF+O2CqZ1jpSfcxks8TdMDL4nd3yfw0hPrviKVXph7IFoYID5fliK0tXpIw
t35C83DC62XVObMqJTnKAzqh+hMn79N3bxKajxMKVsodLrhcJDy9g86YkTdR
u668luXljD8LS4SXzFthHz8ueMJS6xs+08366YJnzW/PRtsNAC83zhVrKnfd
i9EOA83TFYU7Wr/9TTDC+umGemmN/TvqMdZnN1zVqnm+MUkLvH3bJPhL/cLT
glwd0DwkKL4Frs/Cp1l/3dEsTZWSe0HP+u+OK1R+i7szOdbn1ej762drbeY4
oHmsxtAeeZaXnmP9leIHV5I7KtI4xkeK+54EVCWf0AP1V4rGIyhr9ZwG2hcp
lsyv6xyK0bG+y7Chu2L/Vm8tu18yzHhqmWp2bgyo/zJM1fywJ/OahvGX4aeH
TkXu/mqY3Q8PLPC12rAm/j7T44H/uqZkZgd0A83HA38qnTmektnC9HmgSfcb
XOSX1ew+eWDs+eK8hJAK1j9P1NbZW7wV8TvLzxMV6T6xD8//wfroiYOFVjF+
yn5C8/TE6Ne/rnsxapj8B2OleKM=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQOneiO12bft2f+wSmSd+8NT9stme9x8+GmHPYR/
y/7DjYXtpxIu22vG9B/6qvHEXm1J+pEnq+5D5V/Z3xBhWpzq8dT+7BkQ+GD/
LqEn6cvpl1D1X+x75Y5uj9B9a9/6OnCHXOt3e8P+X309bu+h+n/Z93lkxHz9
/97eluv64gLbf/Z2Eedn5wa+h5rH4CD3dGvRAqe39tUg5VVMDg7PpudtfgUz
n8WB5Y2LplP+U3uQbq7rrA6e/787b2d6ALWP3eHc9K3ztI5ctjcGA06HvVJH
Il0m7YLaz+Xwc1fWDSbx3ftBpsX08zi8LVX+9uTx5f0Q9/A5sEheilIXfLAf
bNxrfof5wsxHF1U/3Q9xn4BDr6huWOWXl/uXgKxfLOjw5Yr7jljPt/sh7hVy
SHxiVngt5P3+IJD2QGGH4zp30x//f78f4n4RB7bG4lkMzu/3Q2JD1CFWRGJF
ldrb/RD/iDowXN9UJnjo5X6QaSLrxBwS9lnwv7V+uh/iP3EHjW+utx703t8P
Ni5GwsGhMs3yl8Pl/RD/Sjrsv6lSxJa3Yz/YO1xSDluLZ0Uts9oL9b+Uw1S1
LsfFaVfswc7bIe3wernys4k+D+wh4SHjUPdQKblm3VP7NDCQdThguJWvTeYV
NL7kHB5K3ua7nfLWHuxdEXkHC9OlBv1J7+0h4SXv8ENC08L2PzS+ExUc1rx8
foLJBBa/Cg7bedSunuV8C7HfQtFhwUxj3R8zXtpDwlPR4euMrBmmHE8h7uFX
cnBNnsx4UPQ+ND0oOTC/Xrm4YO8liPueKTnktkkkhHtus4eEt7IDvx1b+aHY
/ZD43KvssPCXIQ/zyyv7ARx1cEE=
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.959999999999999}, {-0.999475522827284, 
    0.9999417202299663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.720819294657687*^9}],

Cell[BoxData["\<\"NSE: 0.951418\"\>"], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.720819294676237*^9}],

Cell[BoxData["\<\"gaploss in observed: 0\"\>"], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.7208192946782427`*^9}],

Cell[BoxData["\<\"gaploss in modeled: 0\"\>"], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.720819294679245*^9}],

Cell[BoxData["\<\"overlap: 0.765957\"\>"], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.720819294680248*^9}],

Cell[BoxData["\<\"observed data vs. representation after averaging:\"\>"], \
"Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.7208192946812506`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.016666666666666666`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxdU3tQVFUYR5DXCu0Cy5vFXZhkCY0QMkzk+wRMDScBkzCYiQgEMicHR6eQ
LBMSYZAhDAPSjA2nRiAII0DlGGqI8tqQAClgd3ktC3vBWDF8ENxz/uqbubOz
d8/+vt/ryBI+jEoyNjIyenPpWf78/9S7Z+ki65ugfTQo/3B5E9DvHXD1RrSX
4EAHCHoVBzcLeuGU4fbGH3P/ZL8PQoDPpuA7eX+DPz8a2Lul3DHPRs3Oj0NT
kL+60nkUVOniqm2qSTiq03dI7o2z/+tBHh8fpNwwCdv5A7OwqVF6ZjFwiuH9
Azf3uJSFdk8Df9zdAC+1hHXWLeoZ/jxY55YMmDVy8FAel99seATqpB0tWYsc
27cAPsLsav9ODtr4eQKz9teON3tzbP8z2GryfkKhjR6i+BdGeKnhtbnKnCnG
ZwVav92ZUVMyCZv5hcY4+vGY3/XtE4yfCZYqbxgSz42C9/J6+UrMDBlVHypT
M76meHG/4pW2W4OwzCZdbIanJf0tCT29jL855opeXRuY1wU0BQuM7ak7EChq
ZnossC3j5P1Z1yJYRsvSWaLVeyYq5ZoGQvUJsPgbYYTx1buExrMKP/oipz0Y
egjVa4WTypnQLVF/kSVyS4DWaKgz3XjsmIpQ/c+holbonFY4Qnh6VUKsCVrc
q4gbJ9QPEVYGRpp1dWpJO48nwj7brqEHGh2h/thg+CN5UWLBNMO3waLPbQ3z
Sj2hftmi4khImeg7ju2zRVHoEcfLjzlC/bNDo2CrkjPDHNtvh3ckbeYOERyh
fooxKGp98s6devL9sjyFGPuk2TjXN0Wov/b48guGgcTHk6SYH3s8bLr+bEbj
BKF+O2CqZ1jpSfcxks8TdMDL4nd3yfw0hPrviKVXph7IFoYID5fliK0tXpIw
t35C83DC62XVObMqJTnKAzqh+hMn79N3bxKajxMKVsodLrhcJDy9g86YkTdR
u668luXljD8LS4SXzFthHz8ueMJS6xs+08366YJnzW/PRtsNAC83zhVrKnfd
i9EOA83TFYU7Wr/9TTDC+umGemmN/TvqMdZnN1zVqnm+MUkLvH3bJPhL/cLT
glwd0DwkKL4Frs/Cp1l/3dEsTZWSe0HP+u+OK1R+i7szOdbn1ej762drbeY4
oHmsxtAeeZaXnmP9leIHV5I7KtI4xkeK+54EVCWf0AP1V4rGIyhr9ZwG2hcp
lsyv6xyK0bG+y7Chu2L/Vm8tu18yzHhqmWp2bgyo/zJM1fywJ/OahvGX4aeH
TkXu/mqY3Q8PLPC12rAm/j7T44H/uqZkZgd0A83HA38qnTmektnC9HmgSfcb
XOSX1ew+eWDs+eK8hJAK1j9P1NbZW7wV8TvLzxMV6T6xD8//wfroiYOFVjF+
yn5C8/TE6Ne/rnsxapj8B2OleKM=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtUn9Ik1EUXTM1l2XOqc3Nuc+FlFYWWmygvlsUGabk+sd0VFpaoKYWls1R
Qg6lwJkFVv4oMjM1pUDCLeyhZmIoNTcTBX9MXPHp5meikSaa7/s68Hh/XO65
95xzqbQcdTqfx+OFbzzy27Si1hM2ExqwRxny61vRHo2ha2m3FbWFmUL8bYNo
oJ9gEmkzUyWqrEmkn01sl+l/oo9REVMtYjuKFgzX5UbPocH6Bv1NVxoVEjrt
AuKVBlZRbk5EqoLhJSRrzBka1zAogsUymko/2atfZxCZpjGsorKKYHGhjkEs
/ew6KjiX1CxPcKKXpL1uEyzTycPteTRSk3KiC1SZu5cu1dgRj4Ur7NWlrL/h
2xCZLmp1A89KD238QSti5Wi2wOIn98b3ljbErisQgOdFF5s5xIhZuvatkBba
t/KszIwzWGyDmaC10dqGCczKEXlBaEGJUfDHjlm/UndAizLR7dtXGhtJv9Ib
KvSrpmaTA5eTcV5CqNY1xRWrGHyZ0P0QQil0Ju2aY3AMWaDDB74E9rv7nWaw
L+F/JIJ7qrEzzyuc2EH0Z/rCUOVD4/wojbuJPUf9YHu1Ot/aMI2fPtmA2B+q
PjgWqJUJnEfsmfeHY4ccloA7QziWLNi7E6Zvv9h/WG3CQURerRiUYb2L8uxO
9HuDris/AO560OFx8xYu31MS0L2LiN98fZzzWyGFtciO5PIbdi7PFSlMAuP9
qmCG898cCKIeJFmLc3L38loGxY0ebTlChsujKAhUn61J0l//8wyTA52SECP4
O8fdQ6Uc+NNA9SmciNXHp6ApPbtGeGSGy+8qBddyz54/vs+OWL0jFMTeN2Rl
9Ixx93c8GJYlV4pLIy2I1f82GA64Pr71YABzeUsVUCTTNTMXOjg/ShQA7tUj
Psrv+B9kBmhN
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.959999999999999}, {-0.999475522827284, 
    0.9999417202299663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.720819294710829*^9}],

Cell[BoxData["\<\"model data vs. representation after averaging:\"\>"], \
"Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.7208192947138367`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQOneiO12bft2f+wSmSd+8NT9stme9x8+GmHPYR/
y/7DjYXtpxIu22vG9B/6qvHEXm1J+pEnq+5D5V/Z3xBhWpzq8dT+7BkQ+GD/
LqEn6cvpl1D1X+x75Y5uj9B9a9/6OnCHXOt3e8P+X309bu+h+n/Z93lkxHz9
/97eluv64gLbf/Z2Eedn5wa+h5rH4CD3dGvRAqe39tUg5VVMDg7PpudtfgUz
n8WB5Y2LplP+U3uQbq7rrA6e/787b2d6ALWP3eHc9K3ztI5ctjcGA06HvVJH
Il0m7YLaz+Xwc1fWDSbx3ftBpsX08zi8LVX+9uTx5f0Q9/A5sEheilIXfLAf
bNxrfof5wsxHF1U/3Q9xn4BDr6huWOWXl/uXgKxfLOjw5Yr7jljPt/sh7hVy
SHxiVngt5P3+IJD2QGGH4zp30x//f78f4n4RB7bG4lkMzu/3Q2JD1CFWRGJF
ldrb/RD/iDowXN9UJnjo5X6QaSLrxBwS9lnwv7V+uh/iP3EHjW+utx703t8P
Ni5GwsGhMs3yl8Pl/RD/Sjrsv6lSxJa3Yz/YO1xSDluLZ0Uts9oL9b+Uw1S1
LsfFaVfswc7bIe3wernys4k+D+wh4SHjUPdQKblm3VP7NDCQdThguJWvTeYV
NL7kHB5K3ua7nfLWHuxdEXkHC9OlBv1J7+0h4SXv8ENC08L2PzS+ExUc1rx8
foLJBBa/Cg7bedSunuV8C7HfQtFhwUxj3R8zXtpDwlPR4euMrBmmHE8h7uFX
cnBNnsx4UPQ+ND0oOTC/Xrm4YO8liPueKTnktkkkhHtus4eEt7IDvx1b+aHY
/ZD43KvssPCXIQ/zyyv7ARx1cEE=
      "]]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtUm1Ik1EUntOWrXKpW262pnOxNJMSM1ah9+RHTvCPEqUyYWpqGGoqFmpE
/VAhnOsTv0CtmVmERDFdlt1aimFZ5Cw1CTd0ypyvE3GmEqzd9+2By/1xOM85
z/McaU5JWh6bxWIdcT/yW6r4PUmWfjSiyQjf3vsWh6m0RmfoOOpqVU5ZVg1o
9AuBGa1MPqwbUZtQjT3VIKlZQPLOgsG5ZzMohjuhuxyzjCb5bF2e0oqqCV3V
KlpW1+esfbYhUuVOOJFGMtSXHkGhKBqbKFK71VB/xoHINJX2L2pQXlQ5XQ5E
09tdKDb9W2tRqgN1knadB0is+rKOOAqlkXKqJ8B8Y/GrRRti0dgGXksJYXEl
VkSm83s4kOz6E9/HNiNajsobvjbq2w4NmhC9LpcLA4GDGQl3+xFNZ9gJm/2F
k+yANzifxm6gKmTrc7MmTMvh88BLNJZ50NeMab+y90C7v+fQo2orfk36Fb6g
EUScq1yz4dtkHM8P1saTDFnJFC4gdPN+kD13vPTnWQeOJQsM+MPw4d8Fsy4H
FhD++3zg3CxvYcU78BLRf0kAWXxhd5Wcwh+JPXF7gTXx8oqv0YZbmt0QBYD6
nYJHnbLiUmLPSgCErif+MmtmsJIsOCwEqMw/sQUmHETktYkATx0o4xQb8Lqb
zlgRCPrylsyukwNMvin74IH81mld/jjjt0wM9iey+TspZibPLTFct4TkXuux
Mv5/3w/vI/U+teJFRN9LtwQsommf6QsUk8eNIFBEPz6qzfmfZ3gwbAjDFDHu
fGn7G4PhuW3hE/uYA9H62FLo2yX/MbqDYvIrlkJHc1TERpMN0XqnpOBsKmyK
9rYy95cYAom59zw+CGYQrf9FCHjan7p9HWPyFsugqFaoPp/ci2g/6mTAi+Vc
NWZh/A/tJGhQ
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.87}, {-0.9999863651841218, 0.9999949269133752}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6472600596519475`*^9, 3.647684679354306*^9, 3.647764284071664*^9, 
   3.648827035235423*^9, 3.651368179730337*^9, 3.651407915907755*^9, 
   3.6514100254228826`*^9, 3.651411331442977*^9, 3.6514122453427854`*^9, 
   3.651417837677404*^9, 3.651418655510841*^9, 3.651894616798083*^9, 
   3.6536699468675976`*^9, 3.6536722805530767`*^9, 3.6538822866250257`*^9, 
   3.6538852301696463`*^9, 3.653885799799227*^9, 3.653886201770219*^9, 
   3.653937381136136*^9, 3.655008371060975*^9, 3.655051682457821*^9, 
   3.655053915867638*^9, 3.656687122673953*^9, 3.6568708004369783`*^9, 
   3.656871998822076*^9, 3.6585885151186123`*^9, 3.6586125810361304`*^9, 
   3.658640997209216*^9, 3.658641035306182*^9, 3.658948924381877*^9, 
   3.6592114962789555`*^9, 3.6592148583227196`*^9, 3.6602770122992396`*^9, {
   3.6605341647748404`*^9, 3.660534165607888*^9}, 3.6605348673890276`*^9, 
   3.66054223149023*^9, 3.6605808837221365`*^9, 3.6612646892599783`*^9, 
   3.6621077955797253`*^9, 3.662150537986652*^9, 3.6629494375129986`*^9, 
   3.662958119462578*^9, 3.6635528712460265`*^9, 3.663604483487795*^9, 
   3.6636083897528515`*^9, 3.663609231813014*^9, 3.6636096218553233`*^9, 
   3.6636119470479245`*^9, 3.6638250798086395`*^9, 3.663849965043662*^9, 
   3.66409573019954*^9, 3.6640968962622347`*^9, 3.6641560318117876`*^9, 
   3.664157373682448*^9, 3.664177087921421*^9, 3.6647930961201253`*^9, 
   3.6648061078933563`*^9, 3.6648836021487885`*^9, {3.6650027682401443`*^9, 
   3.665002771071306*^9}, 3.6653741943367343`*^9, 3.665454162348737*^9, 
   3.66553381538663*^9, 3.6680218442156935`*^9, 3.6681826419082775`*^9, 
   3.668184517453516*^9, 3.6682790136787415`*^9, 3.6682853273372874`*^9, 
   3.6682876240120134`*^9, 3.6684727811466093`*^9, 3.668559003921915*^9, 
   3.6690826660195*^9, 3.6691318335776634`*^9, 3.6695038506390963`*^9, 
   3.6696570190245624`*^9, 3.669750269811177*^9, 3.6702156542406936`*^9, 
   3.670230036146428*^9, 3.670263890641926*^9, 3.670264906310941*^9, 
   3.6702655978877954`*^9, 3.6702658583293314`*^9, 3.670575307663806*^9, 
   3.6706302450720463`*^9, {3.6706335579665327`*^9, 3.6706335796767745`*^9}, 
   3.6706478495509644`*^9, 3.670652044256888*^9, 3.670675898230257*^9, 
   3.670676000690118*^9, 3.670727414773835*^9, 3.670737573571885*^9, 
   3.6707432087081966`*^9, 3.6714577736818423`*^9, 3.671463468769787*^9, 
   3.6714976793579535`*^9, 3.6729238329591618`*^9, 3.6742511639379177`*^9, 
   3.6744277564713893`*^9, 3.674430426609023*^9, 3.674432738828578*^9, 
   3.6755655481887026`*^9, 3.6762421798413277`*^9, 3.676244004451524*^9, 
   3.6771980657509766`*^9, 3.680733425704701*^9, 3.681424354804561*^9, 
   3.681425667412818*^9, 3.6816907784676094`*^9, 3.6819429295523252`*^9, 
   3.6820142319954643`*^9, 3.6820154933516026`*^9, 3.682024629791854*^9, 
   3.682906751408205*^9, 3.682909716097417*^9, {3.6829731779299774`*^9, 
   3.6829731965356445`*^9}, 3.6829765205587997`*^9, 3.683497674870678*^9, 
   3.683503280063091*^9, 3.684548127447613*^9, 3.684705014824919*^9, 
   3.68471408522316*^9, 3.685490827880843*^9, 3.6856422869668508`*^9, 
   3.685659484439184*^9, 3.6866197619469814`*^9, 3.6866205999650526`*^9, 
   3.68745172415815*^9, 3.68895506929062*^9, 3.6916292929642315`*^9, 
   3.691721479152423*^9, 3.6918400175956745`*^9, 3.691840058771913*^9, 
   3.6920272164365*^9, 3.6921200098003235`*^9, 3.6929213748685207`*^9, 
   3.6943882552173257`*^9, 3.6944772358959303`*^9, 3.695688801342485*^9, 
   3.7132461028972487`*^9, 3.716849338541337*^9, {3.717000398001259*^9, 
   3.71700039876921*^9}, 3.7194818127978706`*^9, 3.719579094576796*^9, 
   3.7195792124944906`*^9, 3.7195961892783637`*^9, {3.720268529500079*^9, 
   3.7202685467850447`*^9}, 3.7206449254752345`*^9, 3.7207258864685173`*^9, 
   3.720747974307279*^9, 3.72081680259649*^9, 3.720818321719189*^9, 
   3.7208192947439375`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Import NOS data",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.6512518660626707`*^9, 3.651251897457466*^9}}],

Cell["\<\
This function queries the NOS website for tidal station information, then \
turn that information into an x/y scatter dataset where X is the absolute \
time and Y is the tidal elevation at that station.
The basic one is NOSimportmonth, which grabs a maximum of 31 days\
\[CloseCurlyQuote] data. 

Inputs include
stationnum - \[OpenCurlyDoubleQuote]nnnnnnnn\[CloseCurlyDoubleQuote] (Full \
NOS station number (7 digits)) as string or int)
startdate - \[OpenCurlyDoubleQuote]YYYYMMDD\[CloseCurlyDoubleQuote] (8 digit \
number, as string or integer)
enddate - \[OpenCurlyDoubleQuote]YYYYMMDD\[CloseCurlyDoubleQuote] (8 digit \
number, as string or integer)\
\>", "Text",
 CellChangeTimes->{{3.65125190433986*^9, 3.6512519570528755`*^9}, {
   3.651255350186951*^9, 3.65125540349*^9}, {3.651277206077037*^9, 
   3.651277245077267*^9}, 3.665001468210787*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NOSimportmonth", "[", 
    RowBox[{"stationnum_", ",", "startdate_", ",", "enddate_"}], "]"}], ":=", 
   "\n", 
   RowBox[{"Catch", "[", "\n", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"impath", ",", "imp", ",", "xy", ",", "times", ",", "vals"}], 
        "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"impath", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<http://tidesandcurrents.noaa.gov/api/datagetter?product=water_\
level&application=NOS.COOPS.TAC.WL&begin_date=\>\"", ",", 
           RowBox[{"ToString", "[", "startdate", "]"}], ",", 
           "\"\<&end_date=\>\"", ",", 
           RowBox[{"ToString", "[", "enddate", "]"}], ",", 
           "\"\<&datum=MSL&station=\>\"", ",", 
           RowBox[{"ToString", "[", "stationnum", "]"}], ",", 
           "\"\<&time_zone=GMT&units=metric&interval=&format=csv\>\""}], 
          "]"}]}], ";", "\n", 
        RowBox[{"imp", "=", 
         RowBox[{"Import", "[", "impath", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "imp", "]"}], "\[Equal]", "0"}], ",", "\n", 
          RowBox[{"Throw", "[", 
           RowBox[{"{", "}"}], "]"}], ",", "\n", 
          RowBox[{
           RowBox[{"imp", "=", 
            RowBox[{"imp", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"Length", "[", "imp", "]"}]}], "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"strip", " ", "header"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"imp", "=", 
            RowBox[{"Transpose", "[", "imp", "]"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"1", " ", "date", " ", "column"}], ",", " ", 
             RowBox[{"1", " ", "data", " ", "column"}]}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"times", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"imp", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"imp", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "create", " ", "time", " ", "column", " ", "from", " ", "date", 
             " ", "column"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"vals", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"imp", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"imp", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           ";", " ", 
           RowBox[{"(*", 
            RowBox[{"create", " ", "value", " ", "column"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"xy", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"{", 
               RowBox[{"times", ",", "vals"}], "}"}], "]"}], "]"}]}], ";", 
           " ", 
           RowBox[{"(*", 
            RowBox[{"make", " ", 
             RowBox[{"time", "/", "value"}], " ", "scatter"}], "*)"}], "\n", 
           RowBox[{"Throw", "[", "xy", "]"}], ";"}]}], "\n", "]"}], ";"}]}], 
      "\n", "]"}], ";"}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.651255210763977*^9, 3.651255305873417*^9}, {
  3.6512770763906193`*^9, 3.6512771011360345`*^9}, {3.651277187517975*^9, 
  3.651277202030805*^9}, {3.651415741403102*^9, 3.6514157424021587`*^9}, {
  3.6707271877058477`*^9, 3.6707271898299685`*^9}, {3.6707272727767134`*^9, 
  3.6707273247236843`*^9}, {3.6707273627798615`*^9, 3.67072740857248*^9}}],

Cell["\<\
This next, more useful function, generalizes the process by breaking any \
range into 31-day bites and importing their information, then concatenating \
the data into a single set. Be warned - this many calls to download data can \
take a while. It requires NOSimportmonth[] and daycount[] functions, as \
defined above\
\>", "Text",
 CellChangeTimes->{{3.6512554324836583`*^9, 3.65125547411504*^9}, {
  3.651367312573626*^9, 3.651367323322045*^9}, {3.651367684532014*^9, 
  3.651367704869177*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NOSimportrange", "[", 
    RowBox[{
    "stationnum_", ",", "startyear_", ",", "startmonth_", ",", "startdate_", 
     ",", "endyear_", ",", "endmonth_", ",", "enddate_"}], "]"}], ":=", "\n", 
   RowBox[{"Catch", "[", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "monthstrings", ",", "daystrings", ",", "completeyears", ",", 
        "completemonths1", ",", "completemonths2", ",", "incompletemonths", 
        ",", "incompleteyears", ",", "tstable"}], "}"}], ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Example", " ", "Inputs"}], "*)"}], "\n", 
      RowBox[{"(*", "\n", 
       RowBox[{
        RowBox[{"startyear", "=", "2012"}], ";", "\n", 
        RowBox[{"startmonth", "=", "5"}], ";", "\n", 
        RowBox[{"startdate", "=", "17"}], ";", "\n", "\n", 
        RowBox[{"endyear", "=", "2016"}], ";", "\n", 
        RowBox[{"endmonth", "=", "10"}], ";", "\n", 
        RowBox[{"enddate", "=", "17"}], ";", "\n", 
        RowBox[{"stationnum", "=", "8410140"}], ";"}], "\n", "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"example", " ", "inputs", " ", "2"}], " ", "-", " ", 
        "floyd"}], "*)"}], "\n", 
      RowBox[{"(*", "\n", 
       RowBox[{
        RowBox[{"stationnum", "=", "8410140"}], ";", "\n", 
        RowBox[{"startyear", "=", "1999"}], ";", "\n", 
        RowBox[{"startmonth", "=", "8"}], ";", "\n", 
        RowBox[{"startdate", "=", "11"}], ";", "\n", 
        RowBox[{"endyear", "=", "1999"}], ";", "\n", 
        RowBox[{"endmonth", "=", "10"}], ";", "\n", 
        RowBox[{"enddate", "=", "16"}], ";"}], "\n", "*)"}], "\n", "\n", 
      RowBox[{
       RowBox[{"monthstrings", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"daystrings", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "31"}], "}"}]}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
        "this", " ", "is", " ", "a", " ", "cheesy", " ", "way", " ", "of", 
         " ", "ensuring", " ", "that", " ", "\"\<1\>\"", " ", "becomes", " ", 
         "\"\<01\>\"", " ", "while", " ", "\"\<10\>\"", " ", "stays", " ", 
         "\"\<10\>\"", " ", "for", " ", "months", " ", "and", " ", "days"}], 
        "*)"}], "\n", 
       RowBox[{"Do", "[", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"monthstrings", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<0\>\"", ",", 
             RowBox[{"monthstrings", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"daystrings", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<0\>\"", ",", 
             RowBox[{"daystrings", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}], ";", "\n", "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"startdate", "=", "\"\<20130917\>\""}], ";", "\n", 
         RowBox[{"enddate", "=", "\"\<20140917\>\""}], ";"}], "*)"}], "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"step", " ", "1"}], " ", "-", " ", 
         RowBox[{
         "break", " ", "target", " ", "interval", " ", "into", " ", "31", " ",
           "day", " ", "sections", " ", 
          RowBox[{"(", 
           RowBox[{
           "NOS", " ", "website", " ", "only", " ", "allows", " ", "queries", 
            " ", "of", " ", "length", " ", "31", " ", "days", " ", "or", " ", 
            "less"}]}]}]}], "*)"}], "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{"Plan", " ", "-", " ", "\n", 
         RowBox[{
         "1.", " ", "figure", " ", "out", " ", "if", " ", "any", " ", 
          "complete", " ", "years", " ", "need", " ", "to", " ", "be", " ", 
          "collected", "\n", "2.", " ", "figure", " ", "out", " ", "if", " ", 
          "any", " ", "complete", " ", "months", " ", "in", " ", "incomplete",
           " ", "years", " ", "need", " ", "to", " ", "be", " ", "collected", 
          "\n", "3.", " ", "collect", " ", "incomplete", " ", "months", " ", 
          "\"\<im\>\"", "\n", "4.", " ", "collect", " ", "complete", " ", 
          "months", " ", "\"\<cm\>\"", "\n", "5.", " ", "collect", " ", 
          "complete", " ", "years", " ", "\"\<cy\>\""}]}], "\n", "*)"}], "\n",
        "\n", 
       RowBox[{"(*", "1", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"endyear", "-", "startyear"}], ">", "1"}], ",", "\n", 
         RowBox[{"completeyears", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"startyear", "+", "i"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"endyear", "-", "startyear", "-", "1"}]}], "}"}]}], 
           "]"}]}]}], "]"}], ";", "\n", 
       RowBox[{"incompleteyears", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"{", 
          RowBox[{"startyear", ",", "endyear"}], "}"}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"(*", "2", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "incompleteyears", "]"}], "\[Equal]", "1"}], 
         ",", " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"there", "'"}], "s", " ", "one", " ", "incomplete", " ", 
            "year"}], ",", " ", 
           RowBox[{
           "meaning", " ", "incomplete", " ", "months", " ", "run", " ", 
            "from", " ", "startmonth", " ", "to", " ", "endmonth"}]}], "*)"}],
          "\n", 
         RowBox[{"completemonths1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"startmonth", "+", "1"}], ",", 
              RowBox[{"endmonth", "-", "1"}]}], "}"}]}], "]"}]}], ",", "\n", 
         RowBox[{
          RowBox[{"completemonths1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"startmonth", "+", "1"}], ",", "12"}], "}"}]}], 
            "]"}]}], ";", "\n", 
          RowBox[{"completemonths2", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"endmonth", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "\n", 
        "]"}], ";", "\n", "\n", "\n", 
       RowBox[{"(*", "3", "*)"}], "\n", 
       RowBox[{"incompletemonths", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"{", 
          RowBox[{"startmonth", ",", "endmonth"}], "}"}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"order", " ", "-", " ", "incompletemonth1"}], ",", " ", 
         "completemonths1", ",", " ", "completeyears", ",", " ", 
         "completemonths2", ",", " ", "incompletemonth2"}], "*)"}], "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{"allocate", " ", "space", " ", "for", " ", "each"}], "*)"}], 
       "\n", 
       RowBox[{"tstable", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "incompletemonths", "]"}], "+", 
              RowBox[{"Length", "[", "completemonths1", "]"}], "+", 
              RowBox[{"12", "*", 
               RowBox[{"Length", "[", "completeyears", "]"}]}], "+", 
              RowBox[{"Length", "[", "completemonths2", "]"}]}], ")"}]}], 
           "}"}]}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{"get", " ", "first", " ", "incomplete", " ", "month"}], 
        "*)"}], "\n", 
       RowBox[{
        RowBox[{"tstable", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{"NOSimportmonth", "[", 
         RowBox[{"stationnum", ",", "\n", "\t", 
          RowBox[{"StringJoin", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "startyear", "]"}], ",", "\n", "\t\t", 
            RowBox[{"monthstrings", "[", 
             RowBox[{"[", "startmonth", "]"}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"daystrings", "[", 
             RowBox[{"[", "startdate", "]"}], "]"}]}], "]"}], "\n", "\t", ",",
           "\n", "\t", 
          RowBox[{"StringJoin", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "startyear", "]"}], ",", "\n", "\t\t", 
            RowBox[{"monthstrings", "[", 
             RowBox[{"[", "startmonth", "]"}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"daystrings", "[", 
             RowBox[{"[", 
              RowBox[{"daycount", "[", 
               RowBox[{"startyear", ",", "startmonth"}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "\n", "\t", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"incomplete", " ", "month", " ", "1"}], "*)"}], "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "first", " ", "string", " ", "of", " ", "complete", " ", 
         "months", " ", "in", " ", "the", " ", "first", " ", "incomplete", 
         " ", "year"}], "*)"}], "\n", 
       RowBox[{
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tstable", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "i"}], "]"}], "]"}], "=", 
            RowBox[{"NOSimportmonth", "[", 
             RowBox[{"stationnum", ",", "\n", "\t\t", 
              RowBox[{"StringJoin", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "startyear", "]"}], ",", 
                RowBox[{"monthstrings", "[", 
                 RowBox[{"[", 
                  RowBox[{"completemonths1", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
                "\"\<01\>\""}], "]"}], ",", "\n", "\t\t", 
              RowBox[{"StringJoin", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "startyear", "]"}], ",", 
                RowBox[{"monthstrings", "[", 
                 RowBox[{"[", 
                  RowBox[{"completemonths1", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"daycount", "[", 
                  RowBox[{"startyear", ",", 
                   RowBox[{"completemonths1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}],
              "\n", "\t", "]"}]}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "completemonths1", "]"}]}], "}"}]}], "]"}],
         "                    ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"complete", " ", "months", " ", "1"}], ",", " ", 
          RowBox[{"start", " ", "day"}]}], " ", "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "get", " ", "all", " ", "the", " ", "complete", " ", "years"}], 
         "*)"}], "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"tstable", "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", 
                 RowBox[{"Length", "[", "completemonths1", "]"}], "+", 
                 RowBox[{"12", "*", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}], "]"}], "]"}],
               "=", 
              RowBox[{"NOSimportmonth", "[", 
               RowBox[{"stationnum", ",", "\n", "\t\t", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"completeyears", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"monthstrings", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<01\>\""}], "]"}],
                 ",", "\n", "\t\t", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"completeyears", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"monthstrings", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"daycount", "[", 
                    RowBox[{
                    RowBox[{"completeyears", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "j"}], "]"}], 
                   "]"}]}], "]"}]}], "\n", "\t", "]"}]}], "\n", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], ";"}], "\n",
           ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "completeyears", "]"}]}], "}"}]}], "]"}]}],
        ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "get", " ", "the", " ", "complete", " ", "months", " ", "in", " ", 
          "the", " ", "second", " ", "incomplete", " ", "year"}], ",", " ", 
         RowBox[{"if", " ", "it", " ", "exists"}]}], "*)"}], "\n", 
       RowBox[{"Do", "[", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"tstable", "[", 
            RowBox[{"[", 
             RowBox[{"1", "+", 
              RowBox[{"Length", "[", "completemonths1", "]"}], "+", 
              RowBox[{"12", "*", 
               RowBox[{"Length", "[", "completeyears", "]"}]}], "+", "i"}], 
             "]"}], "]"}], "=", 
           RowBox[{"NOSimportmonth", "[", 
            RowBox[{"stationnum", ",", "\n", "\t\t", 
             RowBox[{"StringJoin", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "endyear", "]"}], ",", 
               RowBox[{"monthstrings", "[", 
                RowBox[{"[", 
                 RowBox[{"completemonths2", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               "\"\<01\>\""}], "]"}], ",", "\n", "\t\t", 
             RowBox[{"StringJoin", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "endyear", "]"}], ",", 
               RowBox[{"monthstrings", "[", 
                RowBox[{"[", 
                 RowBox[{"completemonths2", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"daycount", "[", 
                 RowBox[{"startyear", ",", 
                  RowBox[{"completemonths2", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
            "\n", "\t", "]"}]}], ";"}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "completemonths2", "]"}]}], "}"}]}], "]"}], 
       ";", "    ", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "the", " ", "second", " ", "incomplete", " ", "month", 
         " ", 
         RowBox[{"(", 
          RowBox[{"the", " ", "end", " ", "month"}], ")"}]}], " ", "*)"}], 
       "\n", 
       RowBox[{
        RowBox[{"tstable", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "tstable", "]"}], "]"}], "]"}], "=", 
        RowBox[{"NOSimportmonth", "[", 
         RowBox[{"stationnum", ",", "\n", "\t", 
          RowBox[{"StringJoin", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "endyear", "]"}], ",", "\n", "\t\t", 
            RowBox[{"monthstrings", "[", 
             RowBox[{"[", "endmonth", "]"}], "]"}], ",", "\n", "\t\t", 
            "\"\<01\>\""}], "]"}], "\n", "\t", ",", "\n", "\t", 
          RowBox[{"StringJoin", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"ToString", "[", "endyear", "]"}], ",", "\n", "\t\t", 
            RowBox[{"monthstrings", "[", 
             RowBox[{"[", "endmonth", "]"}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"daystrings", "[", 
             RowBox[{"[", "enddate", "]"}], "]"}]}], "]"}]}], "\n", "\t", 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"incomplete", " ", "month", " ", "1"}], "*)"}], "  ", "\n", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{"Concatenate", " ", "them", " ", "all"}], "*)"}], "\n", 
       RowBox[{"tstable", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "tstable", "]"}], ",", "2"}], "]"}]}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "tstable", "]"}], "<", "2"}], ",", 
         RowBox[{"tstable", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "999"}]}], "}"}], "}"}]}]}], "]"}], ";", "\n", 
       RowBox[{"Throw", "[", "tstable", "]"}]}]}], "\n", "]"}], 
    RowBox[{"(*", 
     RowBox[{"end", " ", "block"}], "*)"}], "\n", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"end", " ", "catch"}], "*)"}], "\n"}]], "Code",
 CellChangeTimes->{{3.651251963378237*^9, 3.6512519824423275`*^9}, 
   3.651252142221466*^9, {3.6512536671206856`*^9, 3.651253667393701*^9}, {
   3.6512537855514593`*^9, 3.651253828264902*^9}, {3.651254026975268*^9, 
   3.6512540300094414`*^9}, {3.6512542888142443`*^9, 3.651254314734727*^9}, {
   3.6512544252460475`*^9, 3.651254573506528*^9}, {3.651254782075457*^9, 
   3.651254840731812*^9}, {3.6512548815671473`*^9, 3.6512552026115103`*^9}, {
   3.6512554886398706`*^9, 3.6512555590478973`*^9}, {3.6512558285633125`*^9, 
   3.6512558659834533`*^9}, {3.651255930695154*^9, 3.651255961575921*^9}, {
   3.651256054677246*^9, 3.6512561890139294`*^9}, {3.6512562954890194`*^9, 
   3.651256492781304*^9}, {3.6512565293683968`*^9, 3.651256630044155*^9}, {
   3.651256685992355*^9, 3.65125683678898*^9}, {3.651256976601977*^9, 
   3.65125707700272*^9}, {3.651257107344455*^9, 3.6512571972285957`*^9}, {
   3.6512767142139034`*^9, 3.6512770041424866`*^9}, {3.6512770367753534`*^9, 
   3.6512770491090584`*^9}, {3.6512771052302685`*^9, 
   3.6512771466986403`*^9}, {3.6512772606871605`*^9, 3.651277262219248*^9}, {
   3.6513673482820883`*^9, 3.6513675083539696`*^9}, {3.6513675515845346`*^9, 
   3.6513675736255684`*^9}, {3.651367638119359*^9, 3.6513676679800673`*^9}, {
   3.6513677403602066`*^9, 3.651367792958215*^9}, {3.651409320401844*^9, 
   3.651409329044259*^9}, {3.651409410460802*^9, 3.651409413986408*^9}, {
   3.6514094902941427`*^9, 3.6514095298246117`*^9}, 3.6514095840659075`*^9, {
   3.651409698351708*^9, 3.651409712079732*^9}, {3.651411325780167*^9, 
   3.6514113281981716`*^9}, {3.6514114023670235`*^9, 3.651411404830164*^9}, {
   3.6514122028433547`*^9, 3.651412232795068*^9}, {3.6514132611961675`*^9, 
   3.6514132623193693`*^9}, {3.7195969535220037`*^9, 3.7195969756626215`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["axisdate",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.6512518660626707`*^9, 3.651251897457466*^9}, {
  3.6536636094896574`*^9, 3.653663611119751*^9}}],

Cell["\<\
Simple function to provide axis labels every \[OpenCurlyDoubleQuote]lines\
\[CloseCurlyDoubleQuote] days - e.g. 7 is weekly - starts axis labels 1/2 \
week after xmin.
xmin,xmax - absolute time (in seconds)\
\>", "Text",
 CellChangeTimes->{{3.653663639378367*^9, 3.6536636619566584`*^9}, {
  3.653664798695112*^9, 3.6536648468991966`*^9}, {3.658594897455661*^9, 
  3.6585949050120935`*^9}}],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"axisdate", "[", 
      RowBox[{"xmin_", ",", "xmax_", ",", "lines_"}], "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"time", "+", 
          RowBox[{"60", "*", "60", "*", "12", "*", "lines"}]}], ",", 
         RowBox[{"DateString", "[", 
          RowBox[{
           RowBox[{"time", "+", 
            RowBox[{"60", "*", "60", "*", "12", "*", "lines"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<MonthShort\>\"", ",", "\"\</\>\"", ",", "\"\<DayShort\>\""}],
             "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"time", ",", "xmin", ",", "xmax", ",", 
         RowBox[{"(", 
          RowBox[{"60", "*", "60", "*", "24", "*", "lines"}], ")"}]}], 
        "}"}]}], "]"}]}], ";"}], "\n", "\n"}]}]], "Code",
 CellChangeTimes->{{3.6536636278407073`*^9, 3.65366363418707*^9}, {
   3.6536647795850787`*^9, 3.653664781535082*^9}, {3.653665063911178*^9, 
   3.653665068513186*^9}, {3.65859487121316*^9, 3.658594892351369*^9}, 
   3.6636096092956047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["scatterplot",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.6512518660626707`*^9, 3.651251897457466*^9}, {
  3.6536636094896574`*^9, 3.653663611119751*^9}, {3.6536640097089243`*^9, 
  3.653664017395341*^9}}],

Cell["\<\
My default plot for a {time, value} scatter dataset
\
\>", "Text",
 CellChangeTimes->{{3.6536640227409515`*^9, 3.6536640324753685`*^9}}],

Cell[BoxData[
 RowBox[{"\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"scatterplot", "[", 
     RowBox[{
     "scatter_", ",", "xstart_", ",", "xend_", ",", "ystart_", ",", "yend_", 
      ",", "ylab_", ",", "xlab_", ",", "title_", ",", "daylines_", ",", 
      "joined_", ",", "color_"}], "]"}], ":=", "\n", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"scatter", ",", "\n", 
      RowBox[{"Joined", "\[Rule]", "joined"}], ",", "\n", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xstart", ",", "xend"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ystart", ",", "yend"}], "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"Frame", "->", "True"}], ",", "\n", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}], ",", "\n", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"axisdate", "[", 
            RowBox[{"xstart", ",", "xend", ",", "daylines"}], "]"}], ",", 
           "None"}], "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ylab", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xlab", ",", "title"}], "}"}]}], "}"}]}], ",", "\n", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"time", "+", 
            RowBox[{"60", "*", "60", "*", "12", "*", "daylines"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"time", ",", "xstart", ",", "xend", ",", 
             RowBox[{"60", "*", "60", "*", "24", "*", "daylines"}]}], "}"}]}],
           "]"}], ",", "Automatic"}], "}"}]}], ",", "\n", 
      RowBox[{"BaseStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "14"}], ",", 
         RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}]}], "}"}]}], 
      ",", "\n", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "\n", "]"}]}], 
   "\n"}]}]], "Code",
 CellChangeTimes->{{3.6536640480098276`*^9, 3.653664155802422*^9}, {
   3.653664735421401*^9, 3.653664751364629*^9}, {3.6536654053361793`*^9, 
   3.6536654157413974`*^9}, {3.653672290661894*^9, 3.6536722921438966`*^9}, {
   3.65388604357417*^9, 3.6538860624952526`*^9}, {3.6550543872145977`*^9, 
   3.655054401143394*^9}, {3.6585895205361185`*^9, 3.6585895996196423`*^9}, {
   3.6585943160054035`*^9, 3.6585943418298807`*^9}, {3.6585946134644175`*^9, 
   3.658594662011194*^9}, 3.6585947087528677`*^9, {3.658594798692012*^9, 
   3.65859484866387*^9}, {3.6585949126545305`*^9, 3.658594913761594*^9}, {
   3.6585950757468586`*^9, 3.658595107289663*^9}, {3.658595872701442*^9, 
   3.6585959718661137`*^9}, {3.6585976538873196`*^9, 
   3.6585976761955957`*^9}, {3.659219184738177*^9, 3.65921929476647*^9}, {
   3.659221689465439*^9, 3.6592217720861645`*^9}, {3.65922182130898*^9, 
   3.659221826244262*^9}, {3.664177250298709*^9, 3.6641772674626904`*^9}, {
   3.6702658513405194`*^9, 3.670265853462123*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6585951365753374`*^9, 3.658595171147315*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadMax", "Section",
 CellChangeTimes->{{3.6605320378001842`*^9, 3.6605320408473587`*^9}, 
   3.6605322476811886`*^9}],

Cell["\<\
reads maxele file
returns list of nodal maxeles and times of occurrence\
\>", "Text",
 CellChangeTimes->{{3.662966127701623*^9, 3.6629661331819363`*^9}, {
  3.6629661850409026`*^9, 3.662966190567219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReadMaxAll", "[", "fpath_", "]"}], ":=", "\n", 
    RowBox[{"Catch", "[", "\n", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "s", ",", "junk", ",", "np", ",", "maxel", ",", "maxeltime"}], "}"}],
         ",", "\n", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{"OpenRead", "[", "fpath", "]"}]}], ";", "\n", 
         RowBox[{"junk", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "String"}], "]"}]}], ";", "\n", 
         RowBox[{"junk", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"np", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\n", 
         RowBox[{"maxel", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<NAN\>\"", ",", 
            RowBox[{"{", "np", "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"maxeltime", "=", "maxel"}], ";", "\n", "\n", 
         RowBox[{"junk", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "String"}], "]"}]}], ";", "\n", 
         RowBox[{"junk", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"s", ",", "String"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"Do", "[", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"junk", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"maxel", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "Number"}], "]"}]}], ";"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "np"}], "}"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Do", "[", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"junk", "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"maxeltime", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", 
             RowBox[{"Read", "[", 
              RowBox[{"s", ",", "Number"}], "]"}]}], ";"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "np"}], "}"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Throw", "[", 
          RowBox[{"{", 
           RowBox[{"maxel", ",", "maxeltime"}], "}"}], "]"}], ";"}]}], "\n", 
       "]"}], ";"}], "\n", "]"}]}], ";"}], "\n", "\n", "\n", "\n", "\n", "\n",
   "\n"}]], "Code",
 CellChangeTimes->{{3.6605320466696916`*^9, 3.6605320618605604`*^9}, {
  3.6605320941094055`*^9, 3.6605321451713257`*^9}, {3.660532178189214*^9, 
  3.6605323579714975`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot adcirc data vs. observed", "Section",
 CellChangeTimes->{{3.6629650433185997`*^9, 3.6629650493989477`*^9}, {
  3.6640853109350157`*^9, 3.6640853118530684`*^9}}],

Cell["\<\
storm = {irene}
station = {rock_springs,grimesland,greenville}\
\>", "Text",
 CellChangeTimes->{{3.662965079290657*^9, 3.6629651065112143`*^9}}],

Cell["", "Text",
 CellChangeTimes->{3.6629650663029146`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"hurricane", " ", "irene"}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"plotgauge", "[", 
      RowBox[{"storm_", ",", "station_"}], "]"}], ":=", "\n", 
     RowBox[{"Catch", "[", "\n", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "modelpeak", ",", "dateerror", ",", "stageerror", ",", 
           "observedpeak", ",", "obpath", ",", "stagesfeet", ",", "dates", 
           ",", "absolutetimes", ",", "end", ",", "site", ",", "title", ",", 
           "gaugeadjust", ",", "rsobs", ",", "obscatter", ",", 
           "adcircscatter", ",", "fpath", ",", "headerrows", ",", "totalcols",
            ",", "stagecol", ",", "timecol", ",", "datecol", ",", "rsadcirc", 
           ",", "stagesmspinup", ",", "stagesmhurricane", ",", 
           "stagesmspindown", ",", "stagesm", ",", "start", ",", "times", ",",
            "start1", ",", "start2"}], "}"}], ",", "\n", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"storm", "\[Equal]", "\"\<irene\>\""}], "\[Or]", 
              RowBox[{"storm", "\[Equal]", "\"\<irene_norivers\>\""}], 
              "\[Or]", 
              RowBox[{"storm", "\[Equal]", "\"\<irene_coarsegrid\>\""}]}], 
             ",", "\n", 
             RowBox[{
              RowBox[{"start1", "=", 
               RowBox[{
               "AbsoluteTime", "[", "\"\<July 6, 2011 00:00\>\"", "]"}]}], 
              ";", "\n", 
              RowBox[{"start2", "=", 
               RowBox[{"AbsoluteTime", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<8/10/2011\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}],
                    "}"}]}], "}"}], "]"}]}], ";", "\n", 
              RowBox[{"end", "=", 
               RowBox[{"start2", "+", 
                RowBox[{"(", 
                 RowBox[{"24", "*", "60", "*", "60", "*", "50"}], ")"}]}]}], 
              ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"station", "\[Equal]", "\"\<rock_springs\>\""}], ",", 
             "\n", 
             RowBox[{
              RowBox[{"headerrows", "=", "0"}], ";", "\n", 
              RowBox[{"totalcols", "=", "3"}], ";", "\n", 
              RowBox[{"stagecol", "=", "3"}], ";", "\n", 
              RowBox[{"timecol", "=", "2"}], ";", "\n", 
              RowBox[{"datecol", "=", "1"}], ";", "\n", 
              RowBox[{"site", "=", "\"\<02083893\>\""}], ";", "\n", 
              RowBox[{"gaugeadjust", "=", "0"}], ";", "\n", 
              RowBox[{"title", "=", "\"\<Rock Springs 02083893\>\""}], 
              ";"}]}], "\n", "]"}], ";", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"station", "\[Equal]", "\"\<tarboro\>\""}], ",", "\n", 
             RowBox[{
              RowBox[{"headerrows", "=", "27"}], ";", "\n", 
              RowBox[{"totalcols", "=", "7"}], ";", "\n", 
              RowBox[{"stagecol", "=", "6"}], ";", "\n", 
              RowBox[{"timecol", "=", "4"}], ";", "\n", 
              RowBox[{"datecol", "=", "3"}], ";", "\n", 
              RowBox[{"site", "=", "\"\<02083500\>\""}], ";", "\n", 
              RowBox[{"gaugeadjust", "=", "9.32"}], ";", "\n", 
              RowBox[{"title", "=", "\"\<Tarboro 02083500\>\""}]}]}], "\n", 
            "]"}], ";", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"station", "\[Equal]", "\"\<pamlico\>\""}], ",", "\n", 
             RowBox[{
              RowBox[{"headerrows", "=", "27"}], ";", "\n", 
              RowBox[{"totalcols", "=", "7"}], ";", "\n", 
              RowBox[{"stagecol", "=", "6"}], ";", "\n", 
              RowBox[{"timecol", "=", "4"}], ";", "\n", 
              RowBox[{"datecol", "=", "3"}], ";", "\n", 
              RowBox[{"site", "=", "\"\<02084472\>\""}], ";", "\n", 
              RowBox[{"gaugeadjust", "=", 
               RowBox[{"-", "1"}]}], ";", "\n", 
              RowBox[{
              "title", "=", "\"\<Pamlico At Washington 02084472\>\""}]}]}], 
            "\n", "]"}], ";", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"station", "\[Equal]", "\"\<greenville\>\""}], ",", "\n", 
             RowBox[{
              RowBox[{"headerrows", "=", "27"}], ";", "\n", 
              RowBox[{"totalcols", "=", "9"}], ";", "\n", 
              RowBox[{"stagecol", "=", "6"}], ";", "\n", 
              RowBox[{"timecol", "=", "4"}], ";", "\n", 
              RowBox[{"datecol", "=", "3"}], ";", "\n", 
              RowBox[{"site", "=", "\"\<02084000\>\""}], ";", "\n", 
              RowBox[{"gaugeadjust", "=", 
               RowBox[{"-", "3.54"}]}], ";", "\n", 
              RowBox[{"title", "=", "\"\<Greenville 02084000\>\""}], ";"}]}], 
            "\n", "]"}], ";", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"station", "\[Equal]", "\"\<grimesland\>\""}], ",", "\n", 
             RowBox[{
              RowBox[{"headerrows", "=", "0"}], ";", "\n", 
              RowBox[{"totalcols", "=", "3"}], ";", "\n", 
              RowBox[{"stagecol", "=", "3"}], ";", "\n", 
              RowBox[{"timecol", "=", "2"}], ";", "\n", 
              RowBox[{"datecol", "=", "1"}], ";", "\n", 
              RowBox[{"site", "=", "\"\<02084173\>\""}], ";", "\n", 
              RowBox[{"gaugeadjust", "=", "0"}], ";", "\n", 
              RowBox[{"title", "=", "\"\<Grimesland 02084172\>\""}], ";"}]}], 
            "\n", "]"}], ";", "\n", "\n", 
           RowBox[{"obpath", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{
             "\"\<D:\\\\Dropbox\\\\\>\"", ",", "storm", ",", 
              "\"\<\\\\observed stage\\\\\>\"", ",", "site", ",", 
              "\"\<.txt\>\""}], "]"}]}], ";", "\n", "\n", 
           RowBox[{"stagesfeet", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
             "obpath", ",", "headerrows", ",", "totalcols", ",", "stagecol", 
              ",", "Number"}], "]"}]}], ";", "\n", 
           RowBox[{"times", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
             "obpath", ",", "headerrows", ",", "totalcols", ",", "timecol", 
              ",", "Word"}], "]"}]}], ";", "\n", 
           RowBox[{"dates", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
             "obpath", ",", "headerrows", ",", "totalcols", ",", "datecol", 
              ",", "Word"}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"remove", " ", "junk", " ", "zero", " ", "values"}], 
            "*)"}], "\n", 
           RowBox[{"junk", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"times", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"stagesfeet", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"stagesfeet", ",", "junk"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"times", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"times", ",", "junk"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dates", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"dates", ",", "junk"}], "]"}]}], ";", "\n", "\n", 
           RowBox[{"absolutetimes", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                 RowBox[{"dates", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "\"\< \>\"", ",", 
                 RowBox[{"times", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], 
           ";", "\n", 
           RowBox[{"obscatter", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"{", 
               RowBox[{"absolutetimes", ",", 
                RowBox[{"stagesfeet", "+", "gaugeadjust"}]}], "}"}], "]"}], 
             "]"}]}], ";", "\n", "\n", "\n", "\n", 
           RowBox[{"stagesmspinup", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{
               "\"\<D:\\\\Dropbox\\\\\>\"", ",", "storm", ",", 
                "\"\<\\\\spinup\\\\\>\"", ",", "station", ",", 
                "\"\<_wse_median_spinup.txt\>\""}], "]"}], ",", "0", ",", "1",
               ",", "1", ",", "Number"}], "]"}]}], ";", "\n", 
           RowBox[{"stagesmhurricane", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{
               "\"\<D:\\\\Dropbox\\\\\>\"", ",", "storm", ",", 
                "\"\<\\\\hurricane\\\\\>\"", ",", "station", ",", 
                "\"\<_wse_median_hurricane.txt\>\""}], "]"}], ",", "0", ",", 
              "1", ",", "1", ",", "Number"}], "]"}]}], ";", "\n", 
           RowBox[{"stagesmspindown", "=", 
            RowBox[{"ReadUSGSQfile", "[", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{
               "\"\<D:\\\\Dropbox\\\\\>\"", ",", "storm", ",", 
                "\"\<\\\\spindown\\\\\>\"", ",", "station", ",", 
                "\"\<_wse_median_spindown.txt\>\""}], "]"}], ",", "0", ",", 
              "1", ",", "1", ",", "Number"}], "]"}]}], ";", "\n", 
           RowBox[{"stagesm", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
              "stagesmspinup", ",", "stagesmhurricane", ",", 
               "stagesmspindown"}], "}"}], "]"}]}], ";", "\n", "\n", "\n", 
           RowBox[{"times", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"start1", "+", 
               RowBox[{"300", "*", "i"}], "-", 
               RowBox[{"(", 
                RowBox[{"5", "*", "60", "*", "60"}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "stagesm", "]"}], "-", "1"}]}], 
               "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"corrected", " ", "by", " ", "5", "*", "60", "*", "60"}],
              " ", "=", " ", 
             RowBox[{
              RowBox[{
              "5", " ", "hours", " ", "worth", " ", "of", " ", "seconds"}], 
              " ", "-", " ", 
              RowBox[{
              "because", " ", "the", " ", "adcirc", " ", "results", " ", 
               "are", " ", "in", " ", "GMT", " ", "and", " ", "the", " ", 
               "stations", " ", "are", " ", "in", " ", "eastern", " ", "time",
                " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"GMT", "+", "5"}], ":", "00"}], ")"}]}]}]}], "*)"}], 
           "\n", "\n", "\n", 
           RowBox[{"adcircscatter", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"{", 
               RowBox[{"times", ",", 
                RowBox[{"stagesm", "*", "3.28084"}]}], "}"}], "]"}], "]"}]}], 
           ";", "\n", "\n", "\n", "\n", "\n", 
           RowBox[{"rsobs", "=", 
            RowBox[{"scatterplot", "[", 
             RowBox[{"obscatter", ",", "start2", ",", "end", ",", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"{", 
                 RowBox[{"stagesfeet", ",", 
                  RowBox[{"stagesm", "*", "3.28084"}]}], "}"}], "]"}], "-", 
               "1"}], ",", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{"stagesfeet", ",", 
                  RowBox[{"stagesm", "*", "3.28084"}]}], "}"}], "]"}], "+", 
               "1"}], ",", "\"\<ft above MSL\>\"", ",", "\"\<Date, GMT\>\"", 
              ",", "title", ",", "7", ",", "False", ",", "Black"}], "]"}]}], 
           ";", "\n", 
           RowBox[{"rsadcirc", "=", 
            RowBox[{"scatterplot", "[", 
             RowBox[{"adcircscatter", ",", "start2", ",", "end", ",", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"{", 
                 RowBox[{"stagesfeet", ",", 
                  RowBox[{"stagesm", "*", "3.28084"}]}], "}"}], "]"}], "-", 
               "1"}], ",", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{"stagesfeet", ",", 
                  RowBox[{"stagesm", "*", "3.28084"}]}], "}"}], "]"}], "+", 
               "1"}], ",", "\"\<ft above MSL\>\"", ",", "\"\<Date, GMT\>\"", 
              ",", "title", ",", "7", ",", "True", ",", "Blue"}], "]"}]}], 
           ";", "\n", "\n", 
           RowBox[{"modelpeak", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"times", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Position", "[", 
                    RowBox[{"stagesm", ",", 
                    RowBox[{"Max", "[", "stagesm", "]"}]}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "//", 
               "DateString"}], ",", 
              RowBox[{
               RowBox[{"Max", "[", "stagesm", "]"}], "*", "3.28084"}]}], 
             "}"}]}], ";", "\n", 
           RowBox[{"observedpeak", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"absolutetimes", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Position", "[", 
                    RowBox[{"stagesfeet", ",", 
                    RowBox[{"Max", "[", "stagesfeet", "]"}]}], "]"}], "]"}], 
                  "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "//", 
               "DateString"}], ",", 
              RowBox[{
               RowBox[{"Max", "[", "stagesfeet", "]"}], "+", 
               "gaugeadjust"}]}], "}"}]}], ";", "\n", 
           RowBox[{"dateerror", "=", 
            RowBox[{
             RowBox[{"AbsoluteTime", "[", 
              RowBox[{"modelpeak", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
             RowBox[{"AbsoluteTime", "[", 
              RowBox[{"observedpeak", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
           RowBox[{"stageerror", "=", 
            RowBox[{
             RowBox[{"modelpeak", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"observedpeak", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "\n", "\n", "\n",
            "\n", "\n", 
           RowBox[{"Throw", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Show", "[", 
               RowBox[{"rsobs", ",", "rsadcirc"}], "]"}], ",", "modelpeak", 
              ",", "observedpeak", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"dateerror", "/", 
                   RowBox[{"(", 
                    RowBox[{"60", "*", "60"}], ")"}]}], ",", "2"}], "]"}], 
                ",", "stageerror"}], "}"}], ",", "obscatter", ",", 
              "adcircscatter"}], "}"}], "]"}], ";"}], ")"}]}], "\n", "]"}], 
       ";"}], "\n", "]"}]}], ";"}], "\n"}]}]], "Code",
 CellChangeTimes->{
  3.6629650569313784`*^9, {3.6629651101144204`*^9, 3.6629651111824813`*^9}, {
   3.662965171370924*^9, 3.6629652296322565`*^9}, {3.6629652606160283`*^9, 
   3.662965277936019*^9}, {3.662965337452423*^9, 3.6629653415966606`*^9}, 
   3.6629655412650805`*^9, {3.662965605159735*^9, 3.6629656202035956`*^9}, {
   3.662965718127197*^9, 3.6629657342441187`*^9}, {3.662966084795169*^9, 
   3.6629660887073927`*^9}, {3.6629662112083993`*^9, 
   3.6629662142685747`*^9}, {3.6629663642641535`*^9, 3.662966453874279*^9}, {
   3.662966581643587*^9, 3.662966654176736*^9}, 3.6629667234656987`*^9, {
   3.6629746210354137`*^9, 3.6629747601093683`*^9}, {3.6629747916221704`*^9, 
   3.6629747916461725`*^9}, {3.663560007623204*^9, 3.6635600173677616`*^9}, {
   3.663560055057917*^9, 3.6635601224127693`*^9}, {3.6636066792843876`*^9, 
   3.663606682528573*^9}, {3.663608320771906*^9, 3.6636083621182704`*^9}, {
   3.6636092260406837`*^9, 3.6636092281908073`*^9}, {3.6636119373943725`*^9, 
   3.663611940604556*^9}, {3.6638248711287036`*^9, 3.6638250590254507`*^9}, {
   3.6638251629415593`*^9, 3.6638252205525312`*^9}, {3.663825303123129*^9, 
   3.6638253069947634`*^9}, {3.663825340175497*^9, 3.663825343573734*^9}, {
   3.663825398332655*^9, 3.6638254001872735`*^9}, {3.663825556640991*^9, 
   3.663825574862565*^9}, {3.6638258153522835`*^9, 3.663825898486495*^9}, {
   3.6638260461279297`*^9, 3.663826075407014*^9}, {3.663855303056979*^9, 
   3.663855322639099*^9}, {3.663855539781519*^9, 3.6638555462408886`*^9}, {
   3.66479308658558*^9, 3.6647930866015806`*^9}, {3.6690846863642426`*^9, 
   3.6690847260821495`*^9}, 3.669084761604046*^9, {3.6702282807730265`*^9, 
   3.6702282958908916`*^9}, {3.6702284859307613`*^9, 
   3.6702284902640095`*^9}, {3.670228533586487*^9, 3.6702285557247534`*^9}, 
   3.670230079583913*^9, {3.6829765151065807`*^9, 3.6829765151180997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6629665950863557`*^9, 3.6629666028067975`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.662966603236822*^9, 3.663552871644049*^9, 3.663604483780812*^9, 
   3.663608390062869*^9, 3.6636092320820293`*^9, 3.6636096221053376`*^9, 
   3.663611947391944*^9, 3.6638250800126514`*^9, 3.663849965385682*^9, 
   3.6640957313376045`*^9, 3.664096896981276*^9, 3.664156032107395*^9, 
   3.664157374170476*^9, 3.6641770883514457`*^9, 3.664793096522148*^9, 
   3.6648061083283815`*^9, 3.664883602439805*^9, 3.6650027713213205`*^9, 
   3.665374194740758*^9, 3.665454162713758*^9, 3.665533815750651*^9, 
   3.668021845183895*^9, 3.668182642617297*^9, 3.668184518142555*^9, 
   3.66827901470576*^9, 3.6682853278692884`*^9, 3.66828762504743*^9, 
   3.6684727818616505`*^9, 3.668559004946974*^9, 3.669082666472901*^9, 
   3.6691318345604653`*^9, 3.66950385193517*^9, 3.669657019617364*^9, 
   3.6697502703311777`*^9, 3.6702156553527575`*^9, 3.6702300373584976`*^9, 
   3.6702638915467277`*^9, 3.6702649069505424`*^9, 3.670265598730197*^9, 
   3.6702658590001326`*^9, 3.670575309046885*^9, 3.670630246458125*^9, {
   3.6706335590515947`*^9, 3.67063358048182*^9}, 3.6706478509120426`*^9, 
   3.6706520449599285`*^9, 3.670675899915354*^9, 3.6706760016931753`*^9, 
   3.670727415837896*^9, 3.6707375763790455`*^9, 3.6707432094272375`*^9, 
   3.671457773915843*^9, 3.671463469081787*^9, 3.67149767972197*^9, 
   3.672923833707963*^9, 3.6742511641350403`*^9, 3.6744277566368203`*^9, 
   3.67443042680755*^9, 3.674432739040613*^9, 3.6755655485075526`*^9, 
   3.676242180016358*^9, 3.676244004634925*^9, 3.6771980659340253`*^9, 
   3.6807334259484634`*^9, 3.6814243549900537`*^9, 3.681425667605631*^9, 
   3.681690778634059*^9, 3.681942929739837*^9, 3.6820142321899595`*^9, 
   3.682015493533085*^9, 3.6820246300836687`*^9, 3.6829067515737047`*^9, 
   3.682909716361814*^9, {3.6829731781064386`*^9, 3.682973196708193*^9}, 
   3.682976520759059*^9, 3.683497675206354*^9, 3.683503280263199*^9, 
   3.684548127633826*^9, 3.6847050150645337`*^9, 3.684714085820772*^9, 
   3.6854908280839906`*^9, 3.685642287155445*^9, 3.685659485098097*^9, 
   3.6866197622808795`*^9, 3.6866206002117395`*^9, 3.68745172433696*^9, 
   3.6889550694968324`*^9, 3.691629293185416*^9, 3.6917214793212395`*^9, 
   3.691840017798806*^9, 3.6918400589906917`*^9, 3.6920272166084175`*^9, 
   3.692120010011899*^9, 3.6929213750719304`*^9, 3.694388255379608*^9, 
   3.6944772360843215`*^9, 3.6956888015612297`*^9, 3.713246103329827*^9, 
   3.7168493388671756`*^9, 3.717000398950232*^9, 3.7194818129697647`*^9, 
   3.7195790947599*^9, 3.719579212656471*^9, 3.7195961895765343`*^9, {
   3.720268529694569*^9, 3.720268546946493*^9}, 3.7206449256727595`*^9, 
   3.7207258866483994`*^9, 3.7207479745104256`*^9, 3.720816802781004*^9, 
   3.720818321909426*^9, 3.720819294818288*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", "2", ",", 
     "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"test", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Position", "[", 
      RowBox[{"test", ",", 
       RowBox[{"Max", "[", "test", "]"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6638252579456854`*^9, 3.6638252882733765`*^9}, {
  3.663825328285982*^9, 3.6638253360264587`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.663825272804434*^9, 3.6638252885697775`*^9}, {
   3.6638253288475833`*^9, 3.663825336338459*^9}, 3.663849965397683*^9, 
   3.6640957313676066`*^9, 3.6640968970082774`*^9, 3.664156032117396*^9, 
   3.6641573741834764`*^9, 3.664177088365446*^9, 3.664793096534149*^9, 
   3.664806108338382*^9, 3.6648836025218096`*^9, 3.665002771331321*^9, 
   3.665374194751758*^9, 3.665454162727759*^9, 3.665533815764652*^9, 
   3.6680218452150955`*^9, 3.668182642640297*^9, 3.668184518165557*^9, 
   3.66827901474576*^9, 3.668285327889289*^9, 3.66828762507863*^9, 
   3.668472781874651*^9, 3.668559004982976*^9, 3.669082666472901*^9, 
   3.669131834576065*^9, 3.669503851956171*^9, 3.6696570196329637`*^9, 
   3.6697502703511777`*^9, 3.6702156553977594`*^9, 3.6702300373965*^9, 
   3.6702638915623274`*^9, 3.670264906966142*^9, 3.6702655989017973`*^9, 
   3.670265859031333*^9, 3.670575309066886*^9, 3.6706302465161285`*^9, {
   3.670633559097597*^9, 3.6706335805008216`*^9}, 3.670647850956045*^9, 
   3.67065204498193*^9, 3.6706759000343604`*^9, 3.6706760017311773`*^9, 
   3.6707274158828983`*^9, 3.670737576424048*^9, 3.6707432094552393`*^9, 
   3.671457773915843*^9, 3.6714634690973873`*^9, 3.67149767973197*^9, 
   3.672923833707963*^9, 3.6742511641420603`*^9, 3.674427756642362*^9, 
   3.674430426818078*^9, 3.6744327390496364`*^9, 3.675565548517576*^9, 
   3.6762421800243793`*^9, 3.676244004641185*^9, 3.6771980659400377`*^9, 
   3.680733425957488*^9, 3.681424354998041*^9, 3.681425667620946*^9, 
   3.6816907786611233`*^9, 3.681942929739837*^9, 3.682014232197981*^9, 
   3.682015493544115*^9, 3.6820246300887117`*^9, 3.682906751578216*^9, 
   3.682909716369336*^9, {3.682973178113457*^9, 3.6829731967206793`*^9}, 
   3.6829765207661676`*^9, 3.683497675210865*^9, 3.6835032802712207`*^9, 
   3.684548127639842*^9, 3.68470501507055*^9, 3.68471408583381*^9, 
   3.6854908280839906`*^9, 3.6856422871624565`*^9, 3.6856594851161275`*^9, 
   3.686619762291499*^9, 3.6866206002227726`*^9, 3.6874517243576183`*^9, 
   3.688955069511489*^9, 3.6916292931859183`*^9, 3.6917214793368416`*^9, 
   3.6918400178144193`*^9, 3.6918400589906917`*^9, 3.6920272166240196`*^9, 
   3.692120010023864*^9, 3.6929213750819707`*^9, 3.6943882553836455`*^9, 
   3.6944772360978584`*^9, 3.6956888015612297`*^9, 3.7132461033468723`*^9, 
   3.716849338875705*^9, 3.717000398959757*^9, 3.7194818129853616`*^9, 
   3.719579094766985*^9, 3.7195792126625204`*^9, 3.719596189585763*^9, {
   3.7202685297067137`*^9, 3.720268546952488*^9}, 3.7206449256787767`*^9, 
   3.7207258866579247`*^9, 3.720747974526052*^9, 3.7208168027899966`*^9, 
   3.7208183219188128`*^9, 3.7208192948288155`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot hec-ras data vs. observed", "Section",
 CellChangeTimes->{{3.6629650433185997`*^9, 3.6629650493989477`*^9}, {
  3.6640853109350157`*^9, 3.6640853118530684`*^9}, {3.664085357379672*^9, 
  3.6640853582037196`*^9}}],

Cell["\<\
usnames={\[OpenCurlyDoubleQuote]adcirc_combo\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_stage\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]rdhm_flow\[CloseCurlyDoubleQuote]};
dsnames={\[OpenCurlyDoubleQuote]adcirc_combo\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_stage\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]stage_0\[CloseCurlyDoubleQuote]};
sitenames={\[OpenCurlyDoubleQuote]greenville\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]rock_springs\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]grimesland\[CloseCurlyDoubleQuote]};
floworstage={\[OpenCurlyDoubleQuote]flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]stage\[CloseCurlyDoubleQuote]};
obs={True,False,\[CloseCurlyDoubleQuote]only\[CloseCurlyDoubleQuote]};\
\>", "Text",
 CellChangeTimes->{{3.662965079290657*^9, 3.6629651065112143`*^9}, {
  3.6641018211669235`*^9, 3.6641018424441404`*^9}, {3.670266289448941*^9, 
  3.670266320768196*^9}}],

Cell[BoxData[
 RowBox[{"\n", "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hecplot", "[", 
      RowBox[{
      "eventname_", ",", "usname_", ",", "dsname_", ",", "sitename_", ",", 
       "floworstage_", ",", "obs_", ",", "color_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "obstagedeletelist", ",", "hecstagedeletelist", ",", 
           "obflowdeletelist", ",", "hecflowdeletelist", ",", "na", ",", 
           "obscatter", ",", "check", ",", "checkds", ",", "checkevent", ",", 
           "checkfunction", ",", "checksite", ",", "checkus", ",", "data", 
           ",", "db", ",", "dsbc", ",", "grab", ",", "end", ",", "event", ",",
            "foldername", ",", "hecdataraw", ",", "hecdeletelist", ",", 
           "hecflows", ",", "hecflowscatter", ",", "hecstages", ",", 
           "hecstagescatter", ",", "hectimes", ",", "makescatter", ",", 
           "masterdb", ",", "model", ",", "modplot", ",", "modscatter", ",", 
           "obdataraw", ",", "obdeletelist", ",", "obflows", ",", 
           "obflowscatter", ",", "obplot", ",", "obscheck", ",", "obsdataraw",
            ",", "obstages", ",", "obstagescatter", ",", "obtimes", ",", 
           "parameter", ",", "planid", ",", "s", ",", "site", ",", "start", 
           ",", "title", ",", "units", ",", "usbc"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eventname", "==", "\"\<floyd\>\""}], ",", "\n", 
            RowBox[{"foldername", "=", "\"\<Floyd\>\""}], ",", "\n", 
            RowBox[{"foldername", "=", "eventname"}]}], "]"}], ";", "\n", 
          "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"loop", " ", "over", " ", "DS", " ", "BCs"}], "*)"}], "\n", 
          RowBox[{"s", "=", 
           RowBox[{"OpenRead", "[", 
            RowBox[{"StringJoin", "[", 
             RowBox[{
             "\"\<D:\\\\Dropbox\\\\\>\"", ",", "foldername", ",", 
              "\"\<\\\\hec-ras results\\\\master_results_db.csv\>\""}], "]"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"masterdb", "=", 
           RowBox[{"ReadList", "[", 
            RowBox[{"s", ",", "\"\<Word\>\""}], "]"}]}], ";", "\n", 
          RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eventname", "\[Equal]", "\"\<irene\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"start", "=", 
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<8/10/2011\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                  "}"}]}], "}"}], "]"}]}], ";", "\n", 
             RowBox[{"end", "=", 
              RowBox[{"start", "+", 
               RowBox[{"(", 
                RowBox[{"24", "*", "60", "*", "60", "*", "50"}], ")"}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"title", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eventname", "\[Equal]", "\"\<floyd\>\""}], "\[Or]", 
             RowBox[{"eventname", "\[Equal]", "\"\<Floyd\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"start", "=", 
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<9/01/1999\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                  "}"}]}], "}"}], "]"}]}], ";", "\n", 
             RowBox[{"end", "=", 
              RowBox[{"start", "+", 
               RowBox[{"(", 
                RowBox[{"24", "*", "60", "*", "60", "*", "45"}], ")"}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"title", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eventname", "\[Equal]", "\"\<isabel\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"start", "=", 
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<9/01/2003\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                  "}"}]}], "}"}], "]"}]}], ";", "\n", 
             RowBox[{"end", "=", 
              RowBox[{"start", "+", 
               RowBox[{"(", 
                RowBox[{"24", "*", "60", "*", "60", "*", "45"}], ")"}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"title", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eventname", "\[Equal]", "\"\<april2003\>\""}], "\[Or]", 
             RowBox[{
             "eventname", "\[Equal]", "\"\<april2003_norivers\>\""}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"start", "=", 
              RowBox[{"AbsoluteTime", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<3/16/2003\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                  "}"}]}], "}"}], "]"}]}], ";", "\n", 
             RowBox[{"end", "=", 
              RowBox[{"start", "+", 
               RowBox[{"(", 
                RowBox[{"24", "*", "60", "*", "60", "*", "59"}], ")"}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"title", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", 
          "\[IndentingNewLine]", "\n", "\n", 
          RowBox[{
           RowBox[{"grab", "[", 
            RowBox[{"data_", ",", "check_"}], "]"}], ":=", 
           "\[IndentingNewLine]", 
           RowBox[{"Catch", "[", "\[IndentingNewLine]", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "test", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"test", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"data", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", "check"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"test", "=", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"test", ",", "0", ",", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Throw", "[", "test", "]"}], ";"}]}], "]"}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\n", "\n", 
          RowBox[{
           RowBox[{"db", "[", "index_", "]"}], ":=", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"masterdb", "[", 
              RowBox[{"[", "index", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}],
           ";", "\n", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"checkfunction", "[", 
            RowBox[{"vector_", ",", "value_"}], "]"}], ":=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vector", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "value"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "vector", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\n", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"makescatter", "[", 
            RowBox[{"set1_", ",", "set2_"}], "]"}], ":=", 
           RowBox[{"Catch", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"temp", ",", "deletelist"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"temp", "=", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{"{", 
                    RowBox[{"set1", ",", "set2"}], "}"}], "]"}], "]"}]}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"deletelist", "=", 
                 RowBox[{"Position", "[", 
                  RowBox[{"set2", ",", "\"\<na\>\""}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"temp", "=", 
                 RowBox[{"Delete", "[", 
                  RowBox[{"temp", ",", "deletelist"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"temp", "=", 
                 RowBox[{"ToExpression", "[", "temp", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Throw", "[", "temp", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
            "]"}]}], ";", "\[IndentingNewLine]", "\n", 
          RowBox[{"event", "=", 
           RowBox[{"db", "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"planid", "=", 
           RowBox[{"db", "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"model", "=", 
           RowBox[{"db", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"usbc", "=", 
           RowBox[{"db", "[", "4", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dsbc", "=", 
           RowBox[{"db", "[", "5", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"site", "=", 
           RowBox[{"db", "[", "6", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"parameter", "=", 
           RowBox[{"db", "[", "7", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"units", "=", 
           RowBox[{"db", "[", "8", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"data", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"db", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "9", ",", 
               RowBox[{"Length", "[", "masterdb", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\n", 
          RowBox[{"checkevent", "=", 
           RowBox[{"checkfunction", "[", 
            RowBox[{"event", ",", "eventname"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"checkus", "=", 
           RowBox[{"checkfunction", "[", 
            RowBox[{"usbc", ",", "usname"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"checkds", "=", 
           RowBox[{"checkfunction", "[", 
            RowBox[{"dsbc", ",", "dsname"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"checksite", "=", 
           RowBox[{"checkfunction", "[", 
            RowBox[{"site", ",", "sitename"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"check", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"checkus", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[And]", 
                RowBox[{"checkds", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "\[And]", 
              RowBox[{"checksite", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "checkus", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"check", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"check", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"False", "\[Rule]", "0"}], ",", 
               RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"make", " ", "entry", " ", "into", " ", "2", 
            RowBox[{"(", 
             RowBox[{"time", "/", "data"}], ")"}], " ", "*", " ", "3", " ", 
            RowBox[{"(", 
             RowBox[{"gauge", ",", "hec", ",", "adcirc"}], ")"}], " ", 
            "vector", " ", "of", " ", "chosen", " ", "results"}], "*)"}], 
          "\n", 
          RowBox[{"hecdataraw", "=", 
           RowBox[{"grab", "[", 
            RowBox[{"data", ",", "check"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"hectimes", "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", "24", "*", "60", 
            "*", "60"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
           "convert", " ", "from", " ", "absolute", " ", "days", " ", "to", 
            " ", "absolute", " ", "seconds"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"hectimes", "=", 
           RowBox[{"hectimes", "-", 
            RowBox[{"2", "*", "60", "*", "60", "*", "24"}]}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{"ah", ",", " ", 
            RowBox[{"excel", "."}]}], "*)"}], "\n", "\n", 
          RowBox[{"hecstages", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"hecflows", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
          "\n", "\[IndentingNewLine]", 
          RowBox[{"obscheck", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"model", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
              "\"\<observed\>\""}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "model", "]"}]}], "}"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"check", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"checksite", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[And]", 
              RowBox[{"obscheck", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "checkus", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"check", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"check", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"False", "\[Rule]", "0"}], ",", 
               RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\n", 
          RowBox[{"obdataraw", "=", 
           RowBox[{"grab", "[", 
            RowBox[{"data", ",", "check"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"obtimes", "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", "24", "*", "60", 
            "*", "60"}]}], ";", "\n", 
          RowBox[{"obtimes", "=", 
           RowBox[{"obtimes", "-", 
            RowBox[{"2", "*", "60", "*", "60", "*", "24"}]}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
           "subtract", " ", "out", " ", "two", " ", "days", " ", "because", 
            " ", "excel", " ", "is", " ", "stupid"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"obstages", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
          "\n", 
          RowBox[{"obflows", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
          "\n", "\[IndentingNewLine]", 
          RowBox[{"obdeletelist", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"obtimes", ",", 
             RowBox[{
              RowBox[{"-", "172800"}], "+", 
              RowBox[{"86400", "na"}]}]}], "]"}]}], ";", "\n", 
          RowBox[{"obflowdeletelist", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"obdeletelist", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"obflows", ",", "na"}], "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"obflowdeletelist", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", "obflowdeletelist", "]"}], "]"}], ",", 
             "1"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"obstagedeletelist", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"obdeletelist", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"obstages", ",", "na"}], "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"obstagedeletelist", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", "obstagedeletelist", "]"}], "]"}], ",", 
             "1"}], "]"}]}], ";", "\n", "\n", "\n", "\n", 
          RowBox[{"obstages", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"obstages", ",", "obstagedeletelist"}], "]"}]}], ";", 
          "\n", "\n", "\n", 
          RowBox[{"hecdeletelist", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"hectimes", ",", 
             RowBox[{
              RowBox[{"-", "172800"}], "+", 
              RowBox[{"86400", "na"}]}]}], "]"}]}], ";", "\n", 
          RowBox[{"hecflowdeletelist", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"hecdeletelist", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"hecflows", ",", "na"}], "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"hecflowdeletelist", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", "hecflowdeletelist", "]"}], "]"}], ",", 
             "1"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"hecstagedeletelist", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"hecdeletelist", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"hecstages", ",", "na"}], "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"hecstagedeletelist", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", "hecstagedeletelist", "]"}], "]"}], ",",
              "1"}], "]"}]}], ";", "\n", "\n", "\n", "\n", "\n", "\n", 
          RowBox[{"hecstages", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"hecstages", ",", "hecstagedeletelist"}], "]"}]}], ";", 
          "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"floworstage", "\[Equal]", "\"\<flow\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"obflows", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "//", "ToExpression"}]}], ";",
              "\n", 
             RowBox[{"obflows", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"obflows", ",", "obflowdeletelist"}], "]"}]}], ";", 
             "\n", 
             RowBox[{"hecflows", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"hecflows", ",", "hecflowdeletelist"}], "]"}]}], ";", 
             "\n", 
             RowBox[{"obtimes", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"obtimes", ",", "obflowdeletelist"}], "]"}]}], ";", 
             "\n", 
             RowBox[{"hectimes", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"hectimes", ",", "hecflowdeletelist"}], "]"}]}], ";"}],
             "\n", ",", "\n", 
            RowBox[{
             RowBox[{"obtimes", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"obtimes", ",", "obstagedeletelist"}], "]"}]}], ";", 
             "\n", 
             RowBox[{"hectimes", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"hectimes", ",", "hecstagedeletelist"}], "]"}]}], ";", 
             "\n", 
             RowBox[{"obstagescatter", "=", 
              RowBox[{"makescatter", "[", 
               RowBox[{"obtimes", ",", "obstages"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"hecstagescatter", "=", 
              RowBox[{"makescatter", "[", 
               RowBox[{"hectimes", ",", "hecstages"}], "]"}]}], ";"}]}], "\n",
            "]"}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
           "since", " ", "stations", " ", "2", " ", "and", " ", "3", " ", 
            RowBox[{"don", "'"}], "t", " ", "have", " ", "flow", " ", 
            "data"}], "*)"}], "\[IndentingNewLine]", "\n", "\n", "\n", 
          "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "obflows", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"obflowscatter", "=", 
              RowBox[{"makescatter", "[", 
               RowBox[{"obtimes", ",", "obflows"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"hecflowscatter", "=", 
              RowBox[{"makescatter", "[", 
               RowBox[{"hectimes", ",", "hecflows"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\n", "\[IndentingNewLine]", 
          "\n", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"floworstage", "\[Equal]", "\"\<flow\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"obscatter", "=", "obflowscatter"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"modscatter", "=", "hecflowscatter"}], ";", "\n", 
             RowBox[{"obplot", "=", 
              RowBox[{"scatterplot", "[", 
               RowBox[{"obscatter", ",", "start", ",", "end", ",", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{"obflows", ",", "hecflows"}], "}"}], "]"}], "-", 
                 "1000"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"obflows", ",", "hecflows"}], "}"}], "+", "1000"}],
                  "]"}], ",", "\"\<cfs\>\"", ",", "\"\<Date, GMT\>\"", ",", 
                "title", ",", "7", ",", "False", ",", "Black"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"modplot", "=", 
              RowBox[{"scatterplot", "[", 
               RowBox[{"modscatter", ",", "start", ",", "end", ",", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{"obflows", ",", "hecflows"}], "}"}], "]"}], "-", 
                 "1000"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"obflows", ",", "hecflows"}], "}"}], "+", "1000"}],
                  "]"}], ",", "\"\<cfs\>\"", ",", "\"\<Date, GMT\>\"", ",", 
                "title", ",", "7", ",", "True", ",", "color"}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"obscatter", "=", "obstagescatter"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"modscatter", "=", "hecstagescatter"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"obplot", "=", 
              RowBox[{"scatterplot", "[", 
               RowBox[{"obscatter", ",", "start", ",", "end", ",", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{"obstages", ",", "hecstages"}], "}"}], "]"}], "-", 
                 "1"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"obstages", ",", "hecstages"}], "}"}], "+", "1"}], 
                 "]"}], ",", "\"\<ft above MSL\>\"", ",", "\"\<Date, GMT\>\"",
                 ",", "title", ",", "7", ",", "False", ",", "Black"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"modplot", "=", 
              RowBox[{"scatterplot", "[", 
               RowBox[{"modscatter", ",", "start", ",", "end", ",", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"{", 
                   RowBox[{"obstages", ",", "hecstages"}], "}"}], "]"}], "-", 
                 "1"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"obstages", ",", "hecstages"}], "}"}], "+", "1"}], 
                 "]"}], ",", "\"\<ft above MSL\>\"", ",", "\"\<Date, GMT\>\"",
                 ",", "title", ",", "7", ",", "True", ",", "color"}], "]"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"grabthing", "=", "hecflows"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"obs", "\[Equal]", "\"\<only\>\""}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"Throw", "[", "obplot", "]"}], ";"}]}], "\n", "]"}], ";",
           "\n", 
          RowBox[{"(*", 
           RowBox[{"Else", " ", "if"}], "*)"}], "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"obs", "\[Equal]", "True"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"Throw", "[", 
              RowBox[{"Show", "[", 
               RowBox[{"obplot", ",", "modplot"}], "]"}], "]"}], ";"}]}], 
           "\n", "]"}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"obs", "\[Equal]", "False"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Throw", "[", "modplot", "]"}], ";"}]}], "\n", "]"}]}]}],
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "if", " ", "data", " ", "are", " ", "rows", " ", "in", " ", "a", 
           " ", "database"}], ",", " ", 
          RowBox[{
           RowBox[{
           "and", " ", "check", " ", "is", " ", "a", " ", "vector", " ", "of",
             " ", "0", " ", 
            RowBox[{"(", 
             RowBox[{"for", " ", "exclude"}], ")"}], " ", "and", " ", "1", 
            RowBox[{"(", " ", 
             RowBox[{"for", " ", "include"}], ")"}], " ", "of", " ", 
            "length"}], " ", "=", " ", 
           RowBox[{"length", " ", "of", " ", "row"}]}], ",", " ", 
          RowBox[{
          "\"\<Grab\>\"", " ", "returns", " ", "data", " ", "of", " ", 
           "interest"}]}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Code",
 CellChangeTimes->{
  3.6629650569313784`*^9, {3.6629651101144204`*^9, 3.6629651111824813`*^9}, {
   3.662965171370924*^9, 3.6629652296322565`*^9}, {3.6629652606160283`*^9, 
   3.662965277936019*^9}, {3.662965337452423*^9, 3.6629653415966606`*^9}, 
   3.6629655412650805`*^9, {3.662965605159735*^9, 3.6629656202035956`*^9}, {
   3.662965718127197*^9, 3.6629657342441187`*^9}, {3.662966084795169*^9, 
   3.6629660887073927`*^9}, {3.6629662112083993`*^9, 
   3.6629662142685747`*^9}, {3.6629663642641535`*^9, 3.662966453874279*^9}, {
   3.662966581643587*^9, 3.662966654176736*^9}, 3.6629667234656987`*^9, {
   3.6629746210354137`*^9, 3.6629747601093683`*^9}, {3.6629747916221704`*^9, 
   3.6629747916461725`*^9}, {3.663560007623204*^9, 3.6635600173677616`*^9}, {
   3.663560055057917*^9, 3.6635601224127693`*^9}, {3.6636066792843876`*^9, 
   3.663606682528573*^9}, {3.663608320771906*^9, 3.6636083621182704`*^9}, {
   3.6636092260406837`*^9, 3.6636092281908073`*^9}, {3.6636119373943725`*^9, 
   3.663611940604556*^9}, {3.6638248711287036`*^9, 3.6638250590254507`*^9}, {
   3.6638251629415593`*^9, 3.6638252205525312`*^9}, {3.663825303123129*^9, 
   3.6638253069947634`*^9}, {3.663825340175497*^9, 3.663825343573734*^9}, {
   3.663825398332655*^9, 3.6638254001872735`*^9}, {3.663825556640991*^9, 
   3.663825574862565*^9}, {3.6638258153522835`*^9, 3.663825898486495*^9}, {
   3.6638260461279297`*^9, 3.663826075407014*^9}, {3.663855303056979*^9, 
   3.663855322639099*^9}, {3.663855539781519*^9, 3.6638555462408886`*^9}, 
   3.6640853536324577`*^9, 3.6641018030868893`*^9, {3.664101887286705*^9, 
   3.664101887389711*^9}, {3.664156042729704*^9, 3.664156043384905*^9}, {
   3.664156095443012*^9, 3.6641561062713113`*^9}, {3.6641561568625975`*^9, 
   3.6641561724523535`*^9}, {3.6641563390707855`*^9, 
   3.6641563880014687`*^9}, {3.664156573430912*^9, 3.664156619090357*^9}, {
   3.664156761484937*^9, 3.664156835157151*^9}, {3.664156985945984*^9, 
   3.664157058962762*^9}, {3.664168558776582*^9, 3.664168583668006*^9}, {
   3.664170906023837*^9, 3.6641709145673256`*^9}, {3.664171029962926*^9, 
   3.6641710356862535`*^9}, 3.6641726177567425`*^9, {3.6641768608124313`*^9, 
   3.6641769008677225`*^9}, {3.664176954549793*^9, 3.664176971219746*^9}, {
   3.6641770016704884`*^9, 3.6641770190734835`*^9}, {3.664177059906819*^9, 
   3.664177065098116*^9}, 3.6647930865495777`*^9, {3.664820603773754*^9, 
   3.664820652274528*^9}, {3.6648208967765126`*^9, 3.6648209359027505`*^9}, 
   3.664821509805576*^9, {3.6655338439232626`*^9, 3.665533844368288*^9}, {
   3.6680239326442738`*^9, 3.668023939083642*^9}, 3.6682876166997986`*^9, {
   3.6690843467729278`*^9, 3.66908438693342*^9}, {3.6690865810260983`*^9, 
   3.6690865939961224`*^9}, {3.6690874547446747`*^9, 
   3.6690874982502112`*^9}, {3.6690876325280056`*^9, 
   3.6690876375874147`*^9}, {3.6690877664257708`*^9, 3.669087789979842*^9}, {
   3.6690879126813993`*^9, 3.669087913009*^9}, {3.669088009982046*^9, 
   3.6690881007385316`*^9}, 3.6690881330254116`*^9, {3.669088396338525*^9, 
   3.6690883984767284`*^9}, {3.669088593746488*^9, 3.6690886077965174`*^9}, {
   3.669088657132434*^9, 3.6690886681494894`*^9}, {3.6690887359250603`*^9, 
   3.66908873961687*^9}, {3.6690888459475756`*^9, 3.669088850841402*^9}, {
   3.6702298535999875`*^9, 3.670229891862176*^9}, {3.670264038234702*^9, 
   3.6702640678266687`*^9}, {3.6702650000903068`*^9, 
   3.6702650034911127`*^9}, {3.6702650790800686`*^9, 
   3.6702650816682897`*^9}, {3.6702651145581474`*^9, 
   3.6702651387687902`*^9}, {3.670266214169409*^9, 3.6702662370702496`*^9}, {
   3.670266268862505*^9, 3.6702662775617204`*^9}, {3.6702663270238075`*^9, 
   3.670266378133898*^9}, {3.6705752756969776`*^9, 3.6705752944860525`*^9}, {
   3.670739938869172*^9, 3.6707399423393707`*^9}, {3.6707401870073647`*^9, 
   3.6707401927846956`*^9}, {3.6707419059266815`*^9, 3.670741922884651*^9}, {
   3.6707420375422096`*^9, 3.6707420385222654`*^9}, {3.670742079836629*^9, 
   3.6707420806166735`*^9}, {3.6707422285111322`*^9, 
   3.6707422665983105`*^9}, {3.6707432021148195`*^9, 
   3.6707432030648737`*^9}, {3.670743395041854*^9, 3.6707434037743535`*^9}, {
   3.670743543863366*^9, 3.6707435729790316`*^9}, {3.670745664455657*^9, 
   3.670745671765075*^9}, {3.6707463994496965`*^9, 3.670746404793002*^9}, {
   3.6707466116468334`*^9, 3.67074661753417*^9}, {3.670746956120536*^9, 
   3.6707469950127606`*^9}, {3.670747051593997*^9, 3.6707470550341935`*^9}, {
   3.6707473819218903`*^9, 3.670747390149361*^9}, 3.670747608719863*^9, {
   3.670747773177269*^9, 3.670747789224187*^9}, {3.6707480541703405`*^9, 
   3.6707480738454666`*^9}, {3.6714633621105933`*^9, 3.671463365895404*^9}, {
   3.6714634585341687`*^9, 3.6714634609073734`*^9}, 3.682976515128628*^9, {
   3.683503299098586*^9, 3.6835033037977037`*^9}, {3.684548511380758*^9, 
   3.684548517740808*^9}, {3.6847051327376957`*^9, 3.6847051624437485`*^9}, {
   3.6847052025427785`*^9, 3.684705204464867*^9}, {3.68470532550922*^9, 
   3.684705356449993*^9}, {3.6847053920893316`*^9, 3.68470540365305*^9}, {
   3.684705585324993*^9, 3.6847055904036865`*^9}, {3.691721493344552*^9, 
   3.691721523010745*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.670265152236614*^9, 3.6702651551070185`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["hecpeaks", "Section",
 CellChangeTimes->{{3.6680253001347356`*^9, 3.668025301133793*^9}}],

Cell[BoxData[Cell["\<\
usnames={\[OpenCurlyDoubleQuote]adcirc_combo\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_stage\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]rdhm_flow\[CloseCurlyDoubleQuote]};
dsnames={\[OpenCurlyDoubleQuote]adcirc_combo\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]adcirc_stage\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]stage_0\[CloseCurlyDoubleQuote]};
sitenames={\[OpenCurlyDoubleQuote]greenville\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]rock_springs\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]grimesland\[CloseCurlyDoubleQuote]};
floworstage={\[OpenCurlyDoubleQuote]flow\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]stage\[CloseCurlyDoubleQuote]};\
\>", "Text",
  CellChangeTimes->{{3.662965079290657*^9, 3.6629651065112143`*^9}, {
   3.6641018211669235`*^9, 3.6641018424441404`*^9}}]], "Text",
 CellChangeTimes->{{3.66802515894666*^9, 3.668025218123045*^9}, 
   3.6680252796755657`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trial", "=", 
   RowBox[{"hecpeaks", "[", 
    RowBox[{
    "\"\<irene\>\"", ",", "\"\<adcirc_stage\>\"", ",", "\"\<adcirc_stage\>\"",
      ",", "\"\<greenville\>\"", ",", "\"\<stage\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.66802515894666*^9, 3.668025218123045*^9}, {
  3.6680253122824306`*^9, 3.6680253168196898`*^9}, {3.6680254072498627`*^9, 
  3.6680254101410275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trial", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"trial", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668025413081196*^9, 3.668025414321267*^9}, {
  3.6680254495862837`*^9, 3.6680254514903927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\<\"adcirc_stage\"\>"}], "+", "\<\"irene\"\>"}]], "Output",
 CellChangeTimes->{{3.668025447669174*^9, 3.6680254517674084`*^9}, 
   3.668182642841299*^9, 3.66818454374702*^9, 3.668279014910761*^9, 
   3.6682853534189463`*^9, 3.6682876489608274`*^9, 3.6684727820866632`*^9, 
   3.6685590052879934`*^9, 3.669082666550901*^9, 3.6691318348880663`*^9, 
   3.669503852224187*^9, 3.669657019804564*^9, 3.6697502704811783`*^9, 
   3.67021565575278*^9, 3.670230037729519*^9, 3.6702638917807283`*^9, 
   3.6702649071689425`*^9, 3.670265599057798*^9, 3.670265886808283*^9, 
   3.670575309206894*^9, 3.6706302471671658`*^9, 3.6706335806438293`*^9, 
   3.6706478515060763`*^9, 3.6706520451189375`*^9, 3.670675900500387*^9, 
   3.6706760340150237`*^9, 3.670727443078454*^9, 3.6707376007424393`*^9, 
   3.670743233038588*^9, 3.671457773993843*^9, 3.6714634770534015`*^9, 
   3.671497679861972*^9, 3.6729238338795633`*^9, 3.6742511642127466`*^9, 
   3.674427756706004*^9, 3.67443042689779*^9, 3.6744327399067492`*^9, 
   3.6755655486037774`*^9, 3.6762421801078625`*^9, 3.676244004713381*^9, 
   3.677198066012577*^9, 3.6807334260656853`*^9, 3.681424355065828*^9, 
   3.6814256684298744`*^9, 3.68169077935196*^9, 3.681942929817954*^9, 
   3.682014232968029*^9, 3.682015494152734*^9, 3.682024630749731*^9, 
   3.682906751746189*^9, 3.6829097164388776`*^9, {3.682973178177984*^9, 
   3.6829731974466133`*^9}, 3.6829765213673277`*^9, 3.6834976752804627`*^9, 
   3.68350328563509*^9, 3.6845481277068825`*^9, 3.684705015143772*^9, 
   3.6847140859166913`*^9, 3.6854908281707153`*^9, 3.685642303259146*^9, 
   3.6856594856082897`*^9, 3.686619762369452*^9, 3.686620600312463*^9, 
   3.687451724516813*^9, 3.6889550696899633`*^9, 3.691629293285865*^9, 
   3.691720016451098*^9, 3.691721479387232*^9, 3.6918400178612986`*^9, 
   3.691840073785803*^9, 3.6920272167021837`*^9, 3.6921200100800085`*^9, 
   3.692921375248295*^9, 3.6943882555552487`*^9, 3.694477267289716*^9, 
   3.6956888017331314`*^9, 3.7132461034309273`*^9, 3.7168493389541416`*^9, 
   3.7170004171261888`*^9, 3.719481813047868*^9, 3.7195790948416553`*^9, 
   3.71957923081291*^9, 3.719596189670498*^9, 3.7202685298740487`*^9, 
   3.7202685637270713`*^9, 3.720644947835696*^9, 3.720725886829661*^9, 
   3.7207479746042128`*^9, 3.7208168210171967`*^9, 3.720818340052803*^9, 
   3.720819294879925*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hecpeakerrors", "[", 
     RowBox[{
     "eventname_", ",", "usname_", ",", "dsname_", ",", "sitename_", ",", 
      "floworstage_"}], "]"}], ":=", "\n", 
    RowBox[{"Catch", "[", "\n", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "s", "}"}], ",", "\n", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{"hecpeaks", "[", 
           RowBox[{
           "eventname", ",", "usname", ",", "dsname", ",", "sitename", ",", 
            "floworstage"}], "]"}]}], ";", "\n", 
         RowBox[{"Throw", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"s", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\n", "]"}], ";"}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hecpeaks", "[", 
    RowBox[{
    "eventname_", ",", "usname_", ",", "dsname_", ",", "sitename_", ",", 
     "floworstage_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Catch", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "obstagepeak", ",", "hecstagepeak", ",", "obflowpeak", ",", 
         "hecflowpeak", ",", "check", ",", "checkds", ",", "obs", ",", 
         "checkevent", ",", "checkfunction", ",", "checksite", ",", "checkus",
          ",", "data", ",", "db", ",", "dsbc", ",", "grab", ",", "end", ",", 
         "event", ",", "foldername", ",", "hecdataraw", ",", "hecdeletelist", 
         ",", "hecflows", ",", "hecflowscatter", ",", "hecstages", ",", 
         "hecstagescatter", ",", "hectimes", ",", "makescatter", ",", 
         "masterdb", ",", "model", ",", "modplot", ",", "modscatter", ",", 
         "obdataraw", ",", "obdeletelist", ",", "obflows", ",", 
         "obflowscatter", ",", "obplot", ",", "obscheck", ",", "obsdataraw", 
         ",", "obstages", ",", "obstagescatter", ",", "obtimes", ",", 
         "parameter", ",", "planid", ",", "s", ",", "site", ",", "start", ",",
          "title", ",", "units", ",", "usbc"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"foldername", "=", "eventname"}], ";", "\[IndentingNewLine]", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sitename", "\[Equal]", "\"\<25100\>\""}], "\[Or]", 
           RowBox[{"sitename", "\[Equal]", "\"\<26100\>\""}]}], ",", "\n", 
          RowBox[{"obs", "=", "False"}], ",", "\n", 
          RowBox[{"obs", "=", "True"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"eventname", "\[Equal]", "\"\<Floyd_Washington\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"start", "=", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<9/20/1999\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                "}"}]}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"end", "=", 
            RowBox[{"start", "+", 
             RowBox[{"(", 
              RowBox[{"24", "*", "60", "*", "60", "*", "21"}], ")"}]}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"title", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}], 
           ";", "\n", 
           RowBox[{"foldername", "=", "\"\<Floyd\>\""}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\n", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"loop", " ", "over", " ", "DS", " ", "BCs"}], "*)"}], "\n", 
        RowBox[{"s", "=", 
         RowBox[{"OpenRead", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
           "\"\<D:\\\\Dropbox\\\\\>\"", ",", "foldername", ",", 
            "\"\<\\\\hec-ras results\\\\master_results_db.csv\>\""}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"masterdb", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"s", ",", "\"\<Word\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"eventname", "\[Equal]", "\"\<irene\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"start", "=", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<8/10/2011\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                "}"}]}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"end", "=", 
            RowBox[{"start", "+", 
             RowBox[{"(", 
              RowBox[{"24", "*", "60", "*", "60", "*", "50"}], ")"}]}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"title", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eventname", "\[Equal]", "\"\<floyd\>\""}], "\[Or]", 
           RowBox[{"eventname", "\[Equal]", "\"\<Floyd\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"start", "=", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<9/01/1999\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                "}"}]}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"end", "=", 
            RowBox[{"start", "+", 
             RowBox[{"(", 
              RowBox[{"24", "*", "60", "*", "60", "*", "45"}], ")"}]}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"title", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"eventname", "\[Equal]", "\"\<april2003\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"start", "=", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<4/01/2003\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", "\"\<Year\>\""}], 
                "}"}]}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"end", "=", 
            RowBox[{"start", "+", 
             RowBox[{"(", 
              RowBox[{"24", "*", "60", "*", "60", "*", "30"}], ")"}]}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"title", "=", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"usname", ",", "\"\< / \>\"", ",", "dsname"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", "\n", "\n",
         "\n", 
        RowBox[{
         RowBox[{"grab", "[", 
          RowBox[{"data_", ",", "check_"}], "]"}], ":=", 
         "\[IndentingNewLine]", 
         RowBox[{"Catch", "[", "\[IndentingNewLine]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "test", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"test", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"data", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", "check"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"test", "=", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"test", ",", "0", ",", "2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Throw", "[", "test", "]"}], ";"}]}], "]"}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\n", "\n", 
        RowBox[{
         RowBox[{"db", "[", "index_", "]"}], ":=", 
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"masterdb", "[", 
            RowBox[{"[", "index", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\n", 
        RowBox[{
         RowBox[{"checkfunction", "[", 
          RowBox[{"vector_", ",", "value_"}], "]"}], ":=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "value"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "vector", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{
         RowBox[{"makescatter", "[", 
          RowBox[{"set1_", ",", "set2_"}], "]"}], ":=", 
         RowBox[{"Catch", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", ",", "deletelist"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{"{", 
                  RowBox[{"set1", ",", "set2"}], "}"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"deletelist", "=", 
               RowBox[{"Position", "[", 
                RowBox[{"set2", ",", "\"\<na\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"temp", "=", 
               RowBox[{"Delete", "[", 
                RowBox[{"temp", ",", "deletelist"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"temp", "=", 
               RowBox[{"ToExpression", "[", "temp", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Throw", "[", "temp", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\n", "\[IndentingNewLine]", 
        RowBox[{"event", "=", 
         RowBox[{"db", "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"planid", "=", 
         RowBox[{"db", "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"model", "=", 
         RowBox[{"db", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"usbc", "=", 
         RowBox[{"db", "[", "4", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dsbc", "=", 
         RowBox[{"db", "[", "5", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"site", "=", 
         RowBox[{"db", "[", "6", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"parameter", "=", 
         RowBox[{"db", "[", "7", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"units", "=", 
         RowBox[{"db", "[", "8", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"db", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "9", ",", 
             RowBox[{"Length", "[", "masterdb", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"checkevent", "=", 
         RowBox[{"checkfunction", "[", 
          RowBox[{"event", ",", "eventname"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"checkus", "=", 
         RowBox[{"checkfunction", "[", 
          RowBox[{"usbc", ",", "usname"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"checkds", "=", 
         RowBox[{"checkfunction", "[", 
          RowBox[{"dsbc", ",", "dsname"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"checksite", "=", 
         RowBox[{"checkfunction", "[", 
          RowBox[{"site", ",", "sitename"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"check", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"checkus", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[And]", 
              RowBox[{"checkds", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "\[And]", 
            RowBox[{"checksite", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "checkus", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"check", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"check", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"False", "\[Rule]", "0"}], ",", 
             RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"make", " ", "entry", " ", "into", " ", "2", 
          RowBox[{"(", 
           RowBox[{"time", "/", "data"}], ")"}], " ", "*", " ", "3", " ", 
          RowBox[{"(", 
           RowBox[{"gauge", ",", "hec", ",", "adcirc"}], ")"}], " ", "vector",
           " ", "of", " ", "chosen", " ", "results"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"hecdataraw", "=", 
         RowBox[{"grab", "[", 
          RowBox[{"data", ",", "check"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hectimes", "=", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", "24", "*", "60", "*", 
          "60"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "convert", " ", "from", " ", "absolute", " ", "days", " ", "to", " ",
           "absolute", " ", "seconds"}], "*)"}], "\[IndentingNewLine]", "\n", 
        "\n", "\n", 
        RowBox[{"hecstages", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"hecflows", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "hecdataraw", "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
        "\n", "\n", "\[IndentingNewLine]", "\n", "\n", "\n", "\n", "\n", 
        RowBox[{"obscheck", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"model", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "\"\<observed\>\""}],
            ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "model", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"check", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"checksite", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[And]", 
            RowBox[{"obscheck", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "checkus", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"check", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"check", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"False", "\[Rule]", "0"}], ",", 
             RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"obdataraw", "=", 
         RowBox[{"grab", "[", 
          RowBox[{"data", ",", "check"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"obtimes", "=", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", "24", "*", "60", "*", 
          "60"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"obstages", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
        "\n", 
        RowBox[{"obflows", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "obdataraw", "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "//", "ToExpression"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"obdeletelist", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"obtimes", ",", 
           RowBox[{"86400", "na"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"floworstage", "\[Equal]", "\"\<stage\>\""}], ",", "\n", 
          RowBox[{
           RowBox[{"obdeletelist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"obdeletelist", ",", 
              RowBox[{"Position", "[", 
               RowBox[{"obstages", ",", "na"}], "]"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"floworstage", "\[Equal]", "\"\<flow\>\""}], ",", "\n", 
          RowBox[{
           RowBox[{"obdeletelist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"obdeletelist", ",", 
              RowBox[{"Position", "[", 
               RowBox[{"obflows", ",", "na"}], "]"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"obdeletelist", "=", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Union", "[", 
            RowBox[{"Flatten", "[", "obdeletelist", "]"}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"obtimes", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"obtimes", ",", "obdeletelist"}], "]"}]}], ";", "\n", 
        RowBox[{"obstages", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"obstages", ",", "obdeletelist"}], "]"}]}], ";", "\n", 
        RowBox[{"obflows", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"obflows", ",", "obdeletelist"}], "]"}]}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"hecdeletelist", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"hectimes", ",", 
           RowBox[{"86400", "na"}]}], "]"}]}], ";", "\n", 
        RowBox[{"hecdeletelist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"hecdeletelist", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"hecstages", ",", "na"}], "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"hecdeletelist", "=", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Union", "[", 
            RowBox[{"Flatten", "[", "hecdeletelist", "]"}], "]"}], ",", "1"}],
           "]"}]}], ";", "\n", 
        RowBox[{"hectimes", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"hectimes", ",", "hecdeletelist"}], "]"}]}], ";", "\n", 
        RowBox[{"hecstages", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"hecstages", ",", "hecdeletelist"}], "]"}]}], ";", "\n", 
        RowBox[{"hecflows", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"hecflows", ",", "hecdeletelist"}], "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
         "this", " ", "bit", " ", "trims", " ", "off", " ", "the", " ", 
          "data", " ", "that", " ", "occurs", " ", "prior", " ", "to", " ", 
          "the", " ", "start", " ", "date", " ", "and", " ", "after", " ", 
          "the", " ", "end", " ", "date"}], "*)"}], "\n", 
        RowBox[{"junkstart", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"hectimes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "<", "start"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "hectimes", "]"}]}], "}"}]}], "]"}], 
              "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "hectimes", "]"}]}], "}"}]}], "]"}], 
           "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "True"}]}], ";", "\n", 
        RowBox[{"junkend", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"hectimes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ">", "end"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "hectimes", "]"}]}], "}"}]}], "]"}], 
              "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "hectimes", "]"}]}], "}"}]}], "]"}], 
           "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", "True"}]}], ";", "\n", 
        RowBox[{"keepcount", "=", 
         RowBox[{"Length", "[", "hectimes", "]"}]}], ";", "\n", 
        RowBox[{"hecstages", "=", 
         RowBox[{"hecstages", "[", 
          RowBox[{"[", 
           RowBox[{"junkstart", ";;", 
            RowBox[{"keepcount", "-", "junkend"}]}], "]"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"hecflows", "=", 
         RowBox[{"hecflows", "[", 
          RowBox[{"[", 
           RowBox[{"junkstart", ";;", 
            RowBox[{"keepcount", "-", "junkend"}]}], "]"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"hectimes", "=", 
         RowBox[{"hectimes", "[", 
          RowBox[{"[", 
           RowBox[{"junkstart", ";;", 
            RowBox[{"keepcount", "-", "junkend"}]}], "]"}], "]"}]}], ";", 
        "\n", "\n", "\n", "\n", 
        RowBox[{"obstagescatter", "=", 
         RowBox[{"makescatter", "[", 
          RowBox[{"obtimes", ",", "obstages"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"hecstagescatter", "=", 
         RowBox[{"makescatter", "[", 
          RowBox[{"hectimes", ",", "hecstages"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"obstagepeak", " ", "=", " ", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"obstages", ",", " ", 
            RowBox[{"Max", "[", "obstages", "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"obstagepeak", " ", "=", " ", 
         RowBox[{"obstagescatter", "[", 
          RowBox[{"[", "obstagepeak", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"hecstagepeak", " ", "=", " ", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"hecstages", ",", " ", 
            RowBox[{"Max", "[", "hecstages", "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"hecstagepeak", " ", "=", " ", 
         RowBox[{"hecstagescatter", "[", 
          RowBox[{"[", "hecstagepeak", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "obflows", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"obflowscatter", "=", 
            RowBox[{"makescatter", "[", 
             RowBox[{"obtimes", ",", "obflows"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"hecflowscatter", "=", 
            RowBox[{"makescatter", "[", 
             RowBox[{"hectimes", ",", "hecflows"}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"ADDED", " ", 
             RowBox[{"3", "/", "26"}]}], "*)"}], "\n", 
           RowBox[{"obflowpeak", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"obflows", ",", 
               RowBox[{"Max", "[", "obflows", "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"obflowpeak", "=", 
            RowBox[{"obflowscatter", "[", 
             RowBox[{"[", "obflowpeak", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"hecflowpeak", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"hecflows", ",", 
               RowBox[{"Max", "[", "hecflows", "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"hecflowpeak", "=", 
            RowBox[{"hecflowscatter", "[", 
             RowBox[{"[", "hecflowpeak", "]"}], "]"}]}], ";"}]}], "\n", "]"}],
         ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"floworstage", "\[Equal]", "\"\<flow\>\""}], ",", "\n", 
          RowBox[{"Throw", "[", 
           RowBox[{"{", 
            RowBox[{"obflowpeak", ",", "hecflowpeak"}], "}"}], "]"}], ",", 
          "\n", 
          RowBox[{"Throw", "[", 
           RowBox[{"{", 
            RowBox[{"obstagepeak", ",", "hecstagepeak"}], "}"}], "]"}]}], 
         "\n", "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "if", " ", "data", " ", "are", " ", "rows", " ", "in", " ", "a", " ", 
         "database"}], ",", " ", 
        RowBox[{
         RowBox[{
         "and", " ", "check", " ", "is", " ", "a", " ", "vector", " ", "of", 
          " ", "0", " ", 
          RowBox[{"(", 
           RowBox[{"for", " ", "exclude"}], ")"}], " ", "and", " ", "1", 
          RowBox[{"(", " ", 
           RowBox[{"for", " ", "include"}], ")"}], " ", "of", " ", "length"}],
          " ", "=", " ", 
         RowBox[{"length", " ", "of", " ", "row"}]}], ",", " ", 
        RowBox[{
        "\"\<Grab\>\"", " ", "returns", " ", "data", " ", "of", " ", 
         "interest"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
       "]"}], ";"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.6680245036131773`*^9, 3.668024585851881*^9}, {
   3.6680246566559305`*^9, 3.6680246727348504`*^9}, {3.6680247122831125`*^9, 
   3.6680247447879715`*^9}, {3.668024778708912*^9, 3.6680247793259473`*^9}, {
   3.66802499546831*^9, 3.66802511278302*^9}, {3.6680253356617675`*^9, 
   3.6680253508226347`*^9}, {3.6681845300992393`*^9, 3.668184626503753*^9}, {
   3.668281556089412*^9, 3.668281564666429*^9}, {3.668282164926803*^9, 
   3.6682821678179684`*^9}, {3.668282454507366*^9, 3.668282568807904*^9}, {
   3.6682829360370283`*^9, 3.668282941983838*^9}, {3.6682830753612165`*^9, 
   3.668283128896268*^9}, {3.6682831914692764`*^9, 3.6682832017361116`*^9}, {
   3.6682840544378405`*^9, 3.66828407098587*^9}, {3.6707477830458336`*^9, 
   3.670747785467972*^9}, 3.682976515137151*^9, {3.683502647738138*^9, 
   3.6835026812760963`*^9}, {3.6835027262359104`*^9, 3.683502726598091*^9}, {
   3.683502763967738*^9, 3.683502764996667*^9}, {3.6835032710916214`*^9, 
   3.6835032753529377`*^9}, {3.691720562520198*^9, 3.6917206070390873`*^9}, {
   3.69172100903139*^9, 3.691721029491263*^9}, {3.6917211969165754`*^9, 
   3.691721206054309*^9}, {3.691721338242004*^9, 3.6917213857303305`*^9}, {
   3.6917214605114493`*^9, 3.6917214619122057`*^9}, {3.691722053622097*^9, 
   3.6917221672681637`*^9}, {3.691723283887659*^9, 3.6917232921196046`*^9}, {
   3.69172376398365*^9, 3.6917237786047564`*^9}, {3.691724044370247*^9, 
   3.691724067683856*^9}, 3.6917242879626923`*^9, {3.691786143268339*^9, 
   3.6917862185933676`*^9}, {3.691786343186973*^9, 3.6917863462810774`*^9}, {
   3.691786787937137*^9, 3.6917867892029*^9}, {3.6917871739650784`*^9, 
   3.6917871808720646`*^9}, {3.691787289839966*^9, 3.6917872984033813`*^9}, {
   3.691787376466877*^9, 3.6917874163526807`*^9}, {3.691787483425828*^9, 
   3.6917875237738285`*^9}, {3.691787556451748*^9, 3.691787632694213*^9}, 
   3.6917881528220863`*^9, {3.6917884573056602`*^9, 3.691788463446904*^9}, {
   3.6917885935740814`*^9, 3.691788625444379*^9}, {3.691788674433961*^9, 
   3.69178867604351*^9}, {3.6918400474738235`*^9, 3.6918400508648243`*^9}, {
   3.7168598488041983`*^9, 3.7168598724572*^9}, {3.7168629445147996`*^9, 
   3.7168629450639315`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 132, 2, 36, "Input"],
Cell[715, 26, 396, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148, 37, 145, 1, 84, "Section"],
Cell[1296, 40, 165, 4, 58, "Text"],
Cell[1464, 46, 1380, 35, 240, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2881, 86, 104, 1, 84, "Section"],
Cell[2988, 89, 682, 17, 284, "Text"],
Cell[3673, 108, 2856, 68, 380, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6566, 181, 85, 1, 122, "Title"],
Cell[6654, 184, 86, 1, 66, "Subtitle"],
Cell[6743, 187, 92, 1, 36, "Input"],
Cell[CellGroupData[{
Cell[6860, 192, 291, 7, 84, "Section"],
Cell[7154, 201, 382, 7, 58, "Text"],
Cell[7539, 210, 541, 14, 59, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8117, 229, 308, 7, 84, "Section"],
Cell[8428, 238, 6649, 117, 108, "Input"],
Cell[15080, 357, 1744, 47, 160, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16861, 409, 371, 7, 134, "Section"],
Cell[17235, 418, 1252, 20, 308, "Text"],
Cell[18490, 440, 2376, 58, 440, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20903, 503, 103, 1, 84, "Section"],
Cell[21009, 506, 304, 5, 58, "Text"],
Cell[21316, 513, 6607, 159, 840, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27960, 677, 509, 10, 134, "Section"],
Cell[28472, 689, 463, 11, 171, "Text"],
Cell[28938, 702, 9004, 226, 920, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37979, 933, 420, 8, 134, "Section"],
Cell[38402, 943, 717, 12, 81, "Text"],
Cell[39122, 957, 1239, 24, 244, "Input"],
Cell[40364, 983, 4328, 95, 820, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44729, 1083, 309, 7, 134, "Section"],
Cell[45041, 1092, 1574, 26, 352, "Text"],
Cell[46618, 1120, 8001, 172, 753, "Code"],
Cell[CellGroupData[{
Cell[54644, 1296, 3763, 93, 480, "Code"],
Cell[58410, 1391, 4060, 56, 36, "Output"],
Cell[62473, 1449, 4071, 56, 36, "Output"],
Cell[66547, 1507, 7329, 123, 274, "Output"],
Cell[73879, 1632, 4405, 65, 26, "Message"],
Cell[78287, 1699, 4066, 56, 36, "Output"],
Cell[82356, 1757, 4101, 57, 36, "Output"],
Cell[86460, 1816, 7319, 122, 271, "Output"],
Cell[93782, 1940, 4098, 56, 36, "Output"],
Cell[97883, 1998, 7886, 132, 274, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105818, 2136, 403, 8, 134, "Section"],
Cell[106224, 2146, 354, 6, 58, "Text"],
Cell[106581, 2154, 1506, 38, 280, "Code"],
Cell[CellGroupData[{
Cell[108112, 2196, 3191, 87, 280, "Code"],
Cell[111306, 2285, 9090, 153, 274, "Output"],
Cell[120399, 2440, 4009, 57, 36, "Output"],
Cell[124411, 2499, 3938, 55, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128398, 2560, 471, 9, 134, "Section"],
Cell[128872, 2571, 2515, 46, 736, "Text"],
Cell[131390, 2619, 18657, 409, 2680, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150084, 3033, 292, 6, 134, "Section"],
Cell[150379, 3041, 16452, 412, 2147483647, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[166868, 3458, 339, 7, 66, "Section"],
Cell[167210, 3467, 4679, 110, 2147483647, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[171926, 3582, 258, 6, 116, "Section"],
Cell[172187, 3590, 2893, 65, 440, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175117, 3660, 436, 8, 134, "Section"],
Cell[175556, 3670, 1710, 28, 352, "Text"],
Cell[177269, 3700, 24616, 533, 2113, "Code"],
Cell[CellGroupData[{
Cell[201910, 4237, 5096, 130, 440, "Code"],
Cell[207009, 4369, 3898, 54, 36, "Output"],
Cell[210910, 4425, 7157, 121, 274, "Output"],
Cell[218070, 4548, 3891, 54, 36, "Output"],
Cell[221964, 4604, 3902, 54, 36, "Output"],
Cell[225869, 4660, 3899, 54, 36, "Output"],
Cell[229771, 4716, 3895, 54, 36, "Output"],
Cell[233669, 4772, 3931, 55, 36, "Output"],
Cell[237603, 4829, 7196, 122, 274, "Output"],
Cell[244802, 4953, 3928, 55, 36, "Output"],
Cell[248733, 5010, 6632, 112, 271, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255414, 5128, 143, 2, 84, "Section"],
Cell[255560, 5132, 862, 17, 194, "Text"],
Cell[256425, 5151, 4172, 96, 420, "Code"],
Cell[260600, 5249, 508, 9, 81, "Text"],
Cell[261111, 5260, 19374, 430, 2600, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280522, 5695, 187, 3, 84, "Section"],
Cell[280712, 5700, 400, 8, 58, "Text"],
Cell[281115, 5710, 1148, 29, 120, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282300, 5744, 241, 4, 84, "Section"],
Cell[282544, 5750, 146, 4, 58, "Text"],
Cell[282693, 5756, 3171, 70, 360, "Code"],
Cell[285867, 5828, 94, 1, 36, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285998, 5834, 124, 2, 84, "Section"],
Cell[286125, 5838, 214, 5, 58, "Text"],
Cell[286342, 5845, 2808, 71, 720, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289187, 5921, 171, 2, 84, "Section"],
Cell[289361, 5925, 154, 4, 58, "Text"],
Cell[289518, 5931, 60, 1, 35, "Text"],
Cell[289581, 5934, 17739, 372, 2360, "Code"],
Cell[CellGroupData[{
Cell[307345, 6310, 275, 8, 36, "Input"],
Cell[307623, 6320, 2780, 39, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310440, 6364, 590, 16, 60, "Input"],
Cell[311033, 6382, 2694, 37, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313776, 6425, 223, 3, 84, "Section"],
Cell[314002, 6430, 1092, 18, 126, "Text"],
Cell[315097, 6450, 33865, 709, 3820, "Code"],
Cell[348965, 7161, 94, 1, 36, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349096, 7167, 95, 1, 84, "Section"],
Cell[349194, 7170, 1090, 18, 104, "Text"],
Cell[350287, 7190, 426, 10, 36, "Input"],
Cell[CellGroupData[{
Cell[350738, 7204, 280, 7, 36, "Input"],
Cell[351021, 7213, 2377, 34, 36, "Output"]
}, Open  ]],
Cell[353413, 7250, 28611, 651, 3500, "Code"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
