(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    273086,       5018]
NotebookOptionsPosition[    269230,       4902]
NotebookOutlinePosition[    269573,       4917]
CellTagsIndexPosition[    269530,       4914]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This workbook reads and exports NOS observed time/elevation datasets for a \
given list of stations, and also compares them to modeled results from ADCIRC.\
\>", "Text",
 CellChangeTimes->{{3.651410082628584*^9, 3.651410127821863*^9}}],

Cell[CellGroupData[{

Cell["Read Station Locations", "Title",
 CellChangeTimes->{{3.6462723596799984`*^9, 3.646272363950004*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Read", " ", "15", " ", "for", " ", "station", " ", "locations"}], 
   "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{"storm", "=", "\"\<irene\>\""}], " ", 
   RowBox[{"(*", 
    RowBox[{"\"\<irene\>\"", " ", "or", " ", "\"\<floyd\>\""}], "*)"}], "\n", 
   RowBox[{"stepname", "=", "\"\<spinup\>\""}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<spindown\>\"", " ", "or", " ", "\"\<hurricane\>\"", " ", "or", " ", 
     "\"\<spinup\>\""}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"storm", "\[Equal]", "\"\<floyd\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
         "\"\<C:\\\\Users\\\\Sam\\\\dropbox\\\\floyd\\\\\>\"", ",", 
          "stepname", ",", "\"\<\\\\\>\""}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"storm", "==", "\"\<irene\>\""}], ",", "\n", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
         "\"\<C:\\\\Users\\\\Sam\\\\dropbox\\\\irene\\\\\>\"", ",", 
          "stepname", ",", "\"\<\\\\\>\""}], "]"}]}], ";"}]}], "\n", "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"fpath15", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"r", ",", "\"\<fort.15\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s15", "=", 
     RowBox[{"OpenRead", "[", "fpath15", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"raw", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"s15", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Close", "[", "s15", "]"}], ";"}], "\[IndentingNewLine]", 
   "\"\<Use this scroll bar to find the line # of first + last stations \
('start' & 'end')\>\"", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"raw", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "raw", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.637401699870002*^9, 3.637401798847663*^9}, {
   3.6374020676620383`*^9, 3.6374022021327295`*^9}, {3.637402284567445*^9, 
   3.637402286115533*^9}, {3.6374023914745593`*^9, 3.6374024180290785`*^9}, {
   3.6374027544273195`*^9, 3.637402857197197*^9}, {3.637402898778576*^9, 
   3.6374029004296703`*^9}, 3.640234818675518*^9, {3.6403107893600936`*^9, 
   3.640310822467987*^9}, {3.6403117030112696`*^9, 3.6403117039993267`*^9}, {
   3.6403340389816637`*^9, 3.640334064540126*^9}, {3.640334121068359*^9, 
   3.6403341213653755`*^9}, {3.6403355130809774`*^9, 
   3.6403355131899834`*^9}, {3.6404178731879597`*^9, 3.640417874061561*^9}, {
   3.640419254093585*^9, 3.640419280347087*^9}, {3.6407570104246335`*^9, 
   3.6407570104776363`*^9}, {3.6407594110779715`*^9, 3.640759411733173*^9}, {
   3.645986889953107*^9, 3.6459868955924296`*^9}, {3.6459869367547073`*^9, 
   3.6459869377747087`*^9}, 3.64627534703839*^9, {3.6495458447865944`*^9, 
   3.649545856455415*^9}, {3.650261356076185*^9, 3.650261361645395*^9}, {
   3.650262918407652*^9, 3.650262919359254*^9}, {3.6502704415739036`*^9, 
   3.650270442447505*^9}, {3.65027156422193*^9, 3.6502715651649313`*^9}, {
   3.650272397448048*^9, 3.6502723984776497`*^9}, {3.6502726431182795`*^9, 
   3.650272647845088*^9}, {3.650274527588791*^9, 3.6502745282283916`*^9}, {
   3.6507191949233007`*^9, 3.6507191995575657`*^9}, {3.650723554458277*^9, 
   3.6507235603706875`*^9}, {3.650724064945306*^9, 3.6507240727677526`*^9}, {
   3.6507253820761847`*^9, 3.650725382778186*^9}, {3.6507255388876605`*^9, 
   3.6507255469684744`*^9}, {3.650725721329981*^9, 3.650725726072389*^9}, {
   3.6508079619129148`*^9, 3.650808024712003*^9}, {3.6508082610389733`*^9, 
   3.6508082666698895`*^9}, {3.6508083866304655`*^9, 3.650808396105007*^9}, {
   3.65142159094156*^9, 3.6514216081465435`*^9}, {3.6514218450810957`*^9, 
   3.6514218957339926`*^9}, {3.6514220296046495`*^9, 
   3.6514220361650248`*^9}, {3.6514221148925276`*^9, 
   3.6514221220899396`*^9}, {3.651422312034226*^9, 3.6514223180246363`*^9}, {
   3.651425757870994*^9, 3.6514257635340056`*^9}, {3.658612832104909*^9, 
   3.658612877797441*^9}, 3.6586129269711413`*^9, {3.6586130490258255`*^9, 
   3.6586130500398273`*^9}, {3.658613104817054*^9, 3.658613174309653*^9}, {
   3.658616300257167*^9, 3.6586163335500927`*^9}, {3.658618006503778*^9, 
   3.6586180227725334`*^9}, {3.658618291624934*^9, 3.658618324402644*^9}, {
   3.6649919139977455`*^9, 3.6649919140133457`*^9}, {3.665002315156229*^9, 
   3.6650023195484805`*^9}}],

Cell[BoxData["\<\"floyd\"\>"], "Output",
 CellChangeTimes->{{3.640298306712908*^9, 3.6402983328117533`*^9}, 
   3.640310831887526*^9, 3.640311710268685*^9, 3.6403145583275547`*^9, 
   3.6403328963993115`*^9, 3.640333015330114*^9, {3.640334042825884*^9, 
   3.640334065074156*^9}, 3.6403341221754217`*^9, 3.640417880602973*^9, 
   3.640418623380884*^9, {3.6404192556706753`*^9, 3.640419280706107*^9}, 
   3.640756996643845*^9, 3.640757422075178*^9, 3.6407593147166023`*^9, 
   3.6407594137299767`*^9, 3.6459826878491917`*^9, 3.6459869067280664`*^9, 
   3.6459869385547094`*^9, 3.645987293794606*^9, 3.64598733239466*^9, 
   3.6459889139268303`*^9, 3.6460656436716423`*^9, 3.6460659471496906`*^9, 
   3.646071826385786*^9, 3.646072909807561*^9, {3.646102370529183*^9, 
   3.646102397213068*^9}, 3.646103763029987*^9, 3.6461522565840597`*^9, 
   3.6462723727100163`*^9, 3.6462754850085835`*^9, 3.6462755334586515`*^9, 
   3.6463316605705404`*^9, 3.646391948661725*^9, 3.6464124827403965`*^9, 
   3.646492577277417*^9, 3.646500673707877*^9, 3.646500927155916*^9, 
   3.6465009827670975`*^9, 3.649545863475427*^9, 3.6495459478715754`*^9, 
   3.650252128915803*^9, 3.6502613624721966`*^9, 3.6502614008170633`*^9, {
   3.6502629199676547`*^9, 3.6502629553641167`*^9}, {3.6502634267008944`*^9, 
   3.650263429540099*^9}, 3.6502704476735144`*^9, 3.6502705526772985`*^9, 
   3.6502715734879484`*^9, 3.6502724040156593`*^9, 3.6502727080455933`*^9, 
   3.6502790160912027`*^9, 3.6507192085410795`*^9, 3.650723236377082*^9, 
   3.650723566938299*^9, 3.6507240753318996`*^9, 3.650725387114994*^9, 
   3.650725549511279*^9, 3.650725729457595*^9, 3.6508080305830116`*^9, 
   3.6508082688226933`*^9, 3.6508083987201567`*^9, 3.651368214219021*^9, 
   3.6514080464267836`*^9, 3.6514097539970055`*^9, 3.6514100737209682`*^9, 
   3.651417859846043*^9, 3.6514187231369596`*^9, 3.6514218110061464`*^9, 
   3.651421854317624*^9, 3.6514219470849295`*^9, 3.6514220402532587`*^9, 
   3.6514221258991575`*^9, 3.6514223202554407`*^9, 3.6514229158644867`*^9, 
   3.6514256616143703`*^9, 3.651425764105607*^9, 3.6514258433643937`*^9, 
   3.6568708039726067`*^9, 3.656871350482153*^9, 3.6568774220464363`*^9, 
   3.65861295884195*^9, 3.6586130527372565`*^9, 3.6586132024979277`*^9}],

Cell[BoxData["\<\"spindown\"\>"], "Output",
 CellChangeTimes->{{3.640298306712908*^9, 3.6402983328117533`*^9}, 
   3.640310831887526*^9, 3.640311710268685*^9, 3.6403145583275547`*^9, 
   3.6403328963993115`*^9, 3.640333015330114*^9, {3.640334042825884*^9, 
   3.640334065074156*^9}, 3.6403341221754217`*^9, 3.640417880602973*^9, 
   3.640418623380884*^9, {3.6404192556706753`*^9, 3.640419280706107*^9}, 
   3.640756996643845*^9, 3.640757422075178*^9, 3.6407593147166023`*^9, 
   3.6407594137299767`*^9, 3.6459826878491917`*^9, 3.6459869067280664`*^9, 
   3.6459869385547094`*^9, 3.645987293794606*^9, 3.64598733239466*^9, 
   3.6459889139268303`*^9, 3.6460656436716423`*^9, 3.6460659471496906`*^9, 
   3.646071826385786*^9, 3.646072909807561*^9, {3.646102370529183*^9, 
   3.646102397213068*^9}, 3.646103763029987*^9, 3.6461522565840597`*^9, 
   3.6462723727100163`*^9, 3.6462754850085835`*^9, 3.6462755334586515`*^9, 
   3.6463316605705404`*^9, 3.646391948661725*^9, 3.6464124827403965`*^9, 
   3.646492577277417*^9, 3.646500673707877*^9, 3.646500927155916*^9, 
   3.6465009827670975`*^9, 3.649545863475427*^9, 3.6495459478715754`*^9, 
   3.650252128915803*^9, 3.6502613624721966`*^9, 3.6502614008170633`*^9, {
   3.6502629199676547`*^9, 3.6502629553641167`*^9}, {3.6502634267008944`*^9, 
   3.650263429540099*^9}, 3.6502704476735144`*^9, 3.6502705526772985`*^9, 
   3.6502715734879484`*^9, 3.6502724040156593`*^9, 3.6502727080455933`*^9, 
   3.6502790160912027`*^9, 3.6507192085410795`*^9, 3.650723236377082*^9, 
   3.650723566938299*^9, 3.6507240753318996`*^9, 3.650725387114994*^9, 
   3.650725549511279*^9, 3.650725729457595*^9, 3.6508080305830116`*^9, 
   3.6508082688226933`*^9, 3.6508083987201567`*^9, 3.651368214219021*^9, 
   3.6514080464267836`*^9, 3.6514097539970055`*^9, 3.6514100737209682`*^9, 
   3.651417859846043*^9, 3.6514187231369596`*^9, 3.6514218110061464`*^9, 
   3.651421854317624*^9, 3.6514219470849295`*^9, 3.6514220402532587`*^9, 
   3.6514221258991575`*^9, 3.6514223202554407`*^9, 3.6514229158644867`*^9, 
   3.6514256616143703`*^9, 3.651425764105607*^9, 3.6514258433643937`*^9, 
   3.6568708039726067`*^9, 3.656871350482153*^9, 3.6568774220464363`*^9, 
   3.65861295884195*^9, 3.6586130527372565`*^9, 3.6586132024979277`*^9}],

Cell[BoxData["\<\"Use this scroll bar to find the line # of first + last \
stations ('start' & 'end')\"\>"], "Output",
 CellChangeTimes->{{3.640298306712908*^9, 3.6402983328117533`*^9}, 
   3.640310831887526*^9, 3.640311710268685*^9, 3.6403145583275547`*^9, 
   3.6403328963993115`*^9, 3.640333015330114*^9, {3.640334042825884*^9, 
   3.640334065074156*^9}, 3.6403341221754217`*^9, 3.640417880602973*^9, 
   3.640418623380884*^9, {3.6404192556706753`*^9, 3.640419280706107*^9}, 
   3.640756996643845*^9, 3.640757422075178*^9, 3.6407593147166023`*^9, 
   3.6407594137299767`*^9, 3.6459826878491917`*^9, 3.6459869067280664`*^9, 
   3.6459869385547094`*^9, 3.645987293794606*^9, 3.64598733239466*^9, 
   3.6459889139268303`*^9, 3.6460656436716423`*^9, 3.6460659471496906`*^9, 
   3.646071826385786*^9, 3.646072909807561*^9, {3.646102370529183*^9, 
   3.646102397213068*^9}, 3.646103763029987*^9, 3.6461522565840597`*^9, 
   3.6462723727100163`*^9, 3.6462754850085835`*^9, 3.6462755334586515`*^9, 
   3.6463316605705404`*^9, 3.646391948661725*^9, 3.6464124827403965`*^9, 
   3.646492577277417*^9, 3.646500673707877*^9, 3.646500927155916*^9, 
   3.6465009827670975`*^9, 3.649545863475427*^9, 3.6495459478715754`*^9, 
   3.650252128915803*^9, 3.6502613624721966`*^9, 3.6502614008170633`*^9, {
   3.6502629199676547`*^9, 3.6502629553641167`*^9}, {3.6502634267008944`*^9, 
   3.650263429540099*^9}, 3.6502704476735144`*^9, 3.6502705526772985`*^9, 
   3.6502715734879484`*^9, 3.6502724040156593`*^9, 3.6502727080455933`*^9, 
   3.6502790160912027`*^9, 3.6507192085410795`*^9, 3.650723236377082*^9, 
   3.650723566938299*^9, 3.6507240753318996`*^9, 3.650725387114994*^9, 
   3.650725549511279*^9, 3.650725729457595*^9, 3.6508080305830116`*^9, 
   3.6508082688226933`*^9, 3.6508083987201567`*^9, 3.651368214219021*^9, 
   3.6514080464267836`*^9, 3.6514097539970055`*^9, 3.6514100737209682`*^9, 
   3.651417859846043*^9, 3.6514187231369596`*^9, 3.6514218110061464`*^9, 
   3.651421854317624*^9, 3.6514219470849295`*^9, 3.6514220402532587`*^9, 
   3.6514221258991575`*^9, 3.6514223202554407`*^9, 3.6514229158644867`*^9, 
   3.6514256616143703`*^9, 3.651425764105607*^9, 3.6514258433643937`*^9, 
   3.6568708039726067`*^9, 3.656871350482153*^9, 3.6568774220464363`*^9, 
   3.65861295884195*^9, 3.6586130527372565`*^9, 3.6586132024979277`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 6270, 1}}, Typeset`size$$ = {48., {2., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$18196$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$18196$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Part[$CellContext`raw, $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 6270, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{254., {51., 58.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.640298306712908*^9, 3.6402983328117533`*^9}, 
   3.640310831887526*^9, 3.640311710268685*^9, 3.6403145583275547`*^9, 
   3.6403328963993115`*^9, 3.640333015330114*^9, {3.640334042825884*^9, 
   3.640334065074156*^9}, 3.6403341221754217`*^9, 3.640417880602973*^9, 
   3.640418623380884*^9, {3.6404192556706753`*^9, 3.640419280706107*^9}, 
   3.640756996643845*^9, 3.640757422075178*^9, 3.6407593147166023`*^9, 
   3.6407594137299767`*^9, 3.6459826878491917`*^9, 3.6459869067280664`*^9, 
   3.6459869385547094`*^9, 3.645987293794606*^9, 3.64598733239466*^9, 
   3.6459889139268303`*^9, 3.6460656436716423`*^9, 3.6460659471496906`*^9, 
   3.646071826385786*^9, 3.646072909807561*^9, {3.646102370529183*^9, 
   3.646102397213068*^9}, 3.646103763029987*^9, 3.6461522565840597`*^9, 
   3.6462723727100163`*^9, 3.6462754850085835`*^9, 3.6462755334586515`*^9, 
   3.6463316605705404`*^9, 3.646391948661725*^9, 3.6464124827403965`*^9, 
   3.646492577277417*^9, 3.646500673707877*^9, 3.646500927155916*^9, 
   3.6465009827670975`*^9, 3.649545863475427*^9, 3.6495459478715754`*^9, 
   3.650252128915803*^9, 3.6502613624721966`*^9, 3.6502614008170633`*^9, {
   3.6502629199676547`*^9, 3.6502629553641167`*^9}, {3.6502634267008944`*^9, 
   3.650263429540099*^9}, 3.6502704476735144`*^9, 3.6502705526772985`*^9, 
   3.6502715734879484`*^9, 3.6502724040156593`*^9, 3.6502727080455933`*^9, 
   3.6502790160912027`*^9, 3.6507192085410795`*^9, 3.650723236377082*^9, 
   3.650723566938299*^9, 3.6507240753318996`*^9, 3.650725387114994*^9, 
   3.650725549511279*^9, 3.650725729457595*^9, 3.6508080305830116`*^9, 
   3.6508082688226933`*^9, 3.6508083987201567`*^9, 3.651368214219021*^9, 
   3.6514080464267836`*^9, 3.6514097539970055`*^9, 3.6514100737209682`*^9, 
   3.651417859846043*^9, 3.6514187231369596`*^9, 3.6514218110061464`*^9, 
   3.651421854317624*^9, 3.6514219470849295`*^9, 3.6514220402532587`*^9, 
   3.6514221258991575`*^9, 3.6514223202554407`*^9, 3.6514229158644867`*^9, 
   3.6514256616143703`*^9, 3.651425764105607*^9, 3.6514258433643937`*^9, 
   3.6568708039726067`*^9, 3.656871350482153*^9, 3.6568774220464363`*^9, 
   3.65861295884195*^9, 3.6586130527372565`*^9, 3.6586132025603275`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(raw \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664991889476886*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(raw \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664991889523686*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(raw \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6650022432931185`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(raw \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6650022433641233`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set Initialization Values", "Title",
 CellChangeTimes->{{3.6462723821200294`*^9, 3.6462723890900393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"start", " ", "&"}], " ", "end", " ", "of", " ", "the", " ", 
    "station", " ", 
    RowBox[{"list", ".", " ", "Assumes"}], " ", "the", " ", "station", " ", 
    "locations", " ", "are", " ", "the", " ", "same", " ", "for", " ", "61", 
    " ", "and", " ", "62"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"stepname", "==", "\"\<spinup\>\""}], "\[Or]", 
       RowBox[{"stepname", "==", "\"\<spindown\>\""}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"start", "=", "906"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "start", " ", "line", " ", "of", " ", "the", " ", "stations"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"end", "=", "3583"}], ";"}], " ", 
      RowBox[{"(*", 
       RowBox[{"end", " ", "line", " ", "of", " ", "the", " ", "stations"}], 
       "*)"}], "\n", ",", "\n", 
      RowBox[{
       RowBox[{"start", "=", "907"}], ";", 
       RowBox[{"end", "=", "3584"}], ";"}]}], "\n", "]"}], ";"}], 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xsecstart", "=", "142"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"of", " ", "the", " ", "stations"}], ",", " ", 
     RowBox[{
     "the", " ", "number", " ", "of", " ", "the", " ", "first", " ", "of", 
      " ", "the", " ", "boundary", " ", "of", " ", 
      RowBox[{"interest", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xsecend", "=", "191"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"of", " ", "the", " ", "stations"}], ",", " ", 
     RowBox[{
     "the", " ", "number", " ", "of", " ", "the", " ", "end", " ", "of", " ", 
      "the", " ", "boundary", " ", "of", " ", 
      RowBox[{"interest", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sitename", "=", "\"\<NOS_Stations\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", "floyd", "*)"}], "\n", "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"storm", "==", "\"\<floyd\>\""}], ",", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<spinup\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "1999"}], ";", "\n", 
         RowBox[{"startmonth", "=", "8"}], ";", "\n", 
         RowBox[{"startdate", "=", "11"}], ";", "\n", 
         RowBox[{"rundays", "=", "31"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<spindown\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "1999"}], ";", "\n", 
         RowBox[{"startmonth", "=", "9"}], ";", "\n", 
         RowBox[{"startdate", "=", "17"}], ";", "\n", 
         RowBox[{"rundays", "=", "30"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<hurricane\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "1999"}], ";", "\n", 
         RowBox[{"startmonth", "=", "9"}], ";", "\n", 
         RowBox[{"startdate", "=", "11"}], ";", "\n", 
         RowBox[{"rundays", "=", "6"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"endyear", "=", "1999"}], ";", "\n", 
      RowBox[{"endmonth", "=", "10"}], ";", "\n", 
      RowBox[{"enddate", "=", "16"}], ";"}]}], "\n", "]"}], "\n", "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"storm", "\[Equal]", "\"\<irene\>\""}], ",", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<spinup\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "2011"}], ";", "\n", 
         RowBox[{"startmonth", "=", "7"}], ";", "\n", 
         RowBox[{"startdate", "=", "6"}], ";", "\n", 
         RowBox[{"rundays", "=", "45"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<spindown\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "2011"}], ";", "\n", 
         RowBox[{"startmonth", "=", "8"}], ";", "\n", 
         RowBox[{"startdate", "=", "30"}], ";", "\n", 
         RowBox[{"rundays", "=", "40"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stepname", "\[Equal]", "\"\<hurricane\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"startyear", "=", "2011"}], ";", "\n", 
         RowBox[{"startmonth", "=", "8"}], ";", "\n", 
         RowBox[{"startdate", "=", "20"}], ";", "\n", 
         RowBox[{"rundays", "=", "10"}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", 
      RowBox[{"endyear", "=", "2011"}], ";", "\n", 
      RowBox[{"endmonth", "=", "9"}], ";", "\n", 
      RowBox[{"enddate", "=", "29"}], ";"}]}], "\n", "]"}], "\n", "\n", "\n", 
   "\n", 
   RowBox[{
    RowBox[{
    "bathypath", "=", 
     "\"\<C:\\\\Users\\\\Sam\\\\dropbox\\\\ADCIRC\\\\Data reading - \
bathymetries\\\\stationBathy.txt\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"text", " ", 
     RowBox[{"file", ".", " ", "one"}], " ", 
     RowBox[{"column", ".", " ", "one"}], " ", "value", " ", "for", " ", 
     "each", " ", "station"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"path61", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"r", ",", "\"\<fort.61\>\""}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"61", " ", "to", " ", "use"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wseoutpath", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
      "r", ",", "sitename", ",", "\"\<_wse_model_\>\"", ",", "stepname", ",", 
       "\"\<.txt\>\""}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "output", " ", "path", " ", "for", " ", "each", " ", "boundary", " ", 
     RowBox[{"node", "'"}], "s", " ", "water", " ", "surface", " ", 
     RowBox[{"elevations", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"observedWSEoutpath", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
      "r", ",", "sitename", ",", "\"\<_wse_observed_\>\"", ",", "stepname", 
       ",", "\"\<.txt\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"modelwsescatterpath", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
      "r", ",", "sitename", ",", "\"\<_wse_model_scatter\>\"", ",", 
       "stepname", ",", "\"\<.txt\>\""}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"path62", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"r", ",", "\"\<fort.62\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"davoutpath", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
      "r", ",", "sitename", ",", "\"\<_dav\>\"", ",", "stepname", ",", 
       "\"\<.txt\>\""}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"stationlist", "=", 
     RowBox[{"{", 
      RowBox[{
      "8410140", ",", "8411250", ",", "8413320", ",", "8418150", ",", 
       "8443970", ",", "8447930", ",", "8449130", ",", "8459681", ",", 
       "8510560", ",", "\n", "8531680", ",", "8534720", ",", "8536110", ",", 
       "8557380", ",", "8632200", ",", "8636580", ",", "8637624", ",", 
       "8638863", ",", "8651370", ",", "8652587", ",", "8654400", ",", "\n", 
       "8656483", ",", "8658120", ",", "8658163", ",", "8659084", ",", 
       "8659897", ",", "2084472", ",", "208114150", ",", "8661070", ",", 
       "8665530", ",", "8670870", ",", "8720218", ",", "\n", "8720587", ",", 
       "8721604", ",", "8723214", ",", "8723970", ",", "8724580", ",", 
       "8725110", ",", "8726724", ",", "8727520", ",", "8728690", ",", 
       "8729210", ",", "8729840", ",", "\n", "8747766", ",", "8760551", ",", 
       "8761724", ",", "8770570", ",", "8771510", ",", "8772440", ",", 
       "8775870", ",", "8779770"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"xsecend", "-", "xsecstart", "+", "1"}], "==", 
    RowBox[{"Length", "[", "stationlist", "]"}]}], "\n", "\n"}]}]], "Code",
 CellChangeTimes->{{3.637401699870002*^9, 3.637401798847663*^9}, {
   3.6374020676620383`*^9, 3.6374022021327295`*^9}, {3.637402284567445*^9, 
   3.637402286115533*^9}, {3.6374023914745593`*^9, 3.6374024180290785`*^9}, {
   3.6374027544273195`*^9, 3.637402964885357*^9}, {3.6374030168303275`*^9, 
   3.637403127516659*^9}, {3.637404617327871*^9, 3.637404621242095*^9}, {
   3.6374048439438324`*^9, 3.637404847536038*^9}, {3.640087787481122*^9, 
   3.6400878045791464`*^9}, {3.640087847016206*^9, 3.6400878538197155`*^9}, {
   3.6400878886277647`*^9, 3.640087909123294*^9}, {3.6400880317619677`*^9, 
   3.640088050145994*^9}, {3.6401471821383743`*^9, 3.640147185975981*^9}, {
   3.6401474613238173`*^9, 3.640147464325989*^9}, {3.6402020819356585`*^9, 
   3.6402022248118305`*^9}, {3.6402022695893917`*^9, 
   3.6402022946258235`*^9}, {3.640202389545253*^9, 3.6402024917000957`*^9}, {
   3.6402348481132016`*^9, 3.640234860405905*^9}, {3.6403329966980486`*^9, 
   3.6403330073646584`*^9}, {3.640417918343439*^9, 3.6404179271574545`*^9}, {
   3.6459826994192076`*^9, 3.645982699689208*^9}, {3.645986971804756*^9, 
   3.645986996664791*^9}, {3.6459870379048486`*^9, 3.6459870433148565`*^9}, {
   3.6459871397115364`*^9, 3.645987202978792*^9}, {3.6459872705745735`*^9, 
   3.6459872772945833`*^9}, {3.6459873145846353`*^9, 3.645987320734644*^9}, {
   3.6459873545146914`*^9, 3.645987357234695*^9}, {3.6459874026247587`*^9, 
   3.6459874471048207`*^9}, {3.6462723947100472`*^9, 
   3.6462723980100517`*^9}, {3.6462724428601146`*^9, 
   3.6462724752701597`*^9}, {3.6462725140502143`*^9, 3.646272520160223*^9}, {
   3.6462727009104757`*^9, 3.646272704790481*^9}, {3.646273028020934*^9, 
   3.646273051940967*^9}, {3.646273150261105*^9, 3.6462733063035336`*^9}, {
   3.646273357333605*^9, 3.6462733909636517`*^9}, {3.646274598305342*^9, 
   3.6462745992553434`*^9}, {3.646274718675511*^9, 3.646274721875515*^9}, {
   3.646274783435601*^9, 3.646274819135651*^9}, {3.6462748904957514`*^9, 
   3.646274897415761*^9}, {3.646275325768361*^9, 3.6462753262183614`*^9}, {
   3.646278676185546*^9, 3.6462787270756173`*^9}, {3.6463919243616905`*^9, 
   3.6463919255216923`*^9}, {3.6464122139640417`*^9, 3.64641224924806*^9}, {
   3.646412322208233*^9, 3.6464123263914723`*^9}, {3.646492584807428*^9, 
   3.6464926302174916`*^9}, {3.6464999535265493`*^9, 3.646499974555386*^9}, {
   3.6495458875462694`*^9, 3.6495459347675524`*^9}, {3.65026292867247*^9, 
   3.650262937299285*^9}, {3.6502633264777145`*^9, 3.6502633733357997`*^9}, 
   3.6502634071032596`*^9, {3.650263710536889*^9, 3.650263732317135*^9}, {
   3.650263822114271*^9, 3.650263822520294*^9}, {3.650270465894346*^9, 
   3.6502705455324864`*^9}, {3.6502726008734055`*^9, 3.650272660933511*^9}, {
   3.650722851880685*^9, 3.650722861178301*^9}, {3.650737073948161*^9, 
   3.650737095802411*^9}, {3.6508078755817933`*^9, 3.650807957692909*^9}, {
   3.6512498057448273`*^9, 3.6512498089660115`*^9}, {3.6512498489743*^9, 
   3.651249899746204*^9}, {3.651408082400447*^9, 3.6514081493089647`*^9}, {
   3.6514086395937757`*^9, 3.6514086464733877`*^9}, {3.651408928112303*^9, 
   3.6514089694679756`*^9}, {3.6514092872829857`*^9, 
   3.6514093119466295`*^9}, {3.6514093592615128`*^9, 
   3.6514093997747836`*^9}, {3.6514098995774612`*^9, 3.651409926659109*^9}, {
   3.6514183531501093`*^9, 3.6514183549285126`*^9}, {3.6514212599776297`*^9, 
   3.6514212725843506`*^9}, {3.651421526556877*^9, 3.651421546295006*^9}, {
   3.6514216511240015`*^9, 3.6514216513330135`*^9}, {3.651421899731221*^9, 
   3.651421937416377*^9}, {3.6514220539030395`*^9, 3.6514220815966234`*^9}, {
   3.6514228746960144`*^9, 3.6514229100144763`*^9}, {3.658612886237849*^9, 
   3.658612886367649*^9}, {3.6586129267995415`*^9, 3.658612926815141*^9}, {
   3.6586180812582965`*^9, 3.6586181135806055`*^9}, {3.6586181579832373`*^9, 
   3.658618240502833*^9}, 3.664991914044545*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.651421550004218*^9, 3.65142165773638*^9, 
  3.6514218131672697`*^9, 3.6514218562677355`*^9, 3.6514219512781696`*^9, 
  3.6514221362097473`*^9, 3.651422323406646*^9, 3.651422918079691*^9, 
  3.651425666060378*^9, 3.6514257141585956`*^9, 3.6514257676613145`*^9, 
  3.651425847241502*^9, 3.6568708101408725`*^9, 3.656871397640416*^9, 
  3.6568774235555224`*^9, 3.6586129607125697`*^9, 3.6586130531274643`*^9, 
  3.658613206746368*^9, 3.658613658383689*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read 61 (Water Surface Elevation)", "Title",
 CellChangeTimes->{{3.6462746050053515`*^9, 3.6462746106553593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"see", " ", "bypass"}], ",", " ", 
    RowBox[{"below", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"nstations", "=", 
     RowBox[{"end", "-", "start", "+", "1"}]}], ";"}], "\n", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n61header", "=", "908"}], ";", "\[IndentingNewLine]", 
     RowBox[{"n61headerstations", "=", 
      RowBox[{"start", "-", "n61header"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n62header", "="}], ";", "\[IndentingNewLine]", 
     RowBox[{"n62stationstart", "="}], ";", "\[IndentingNewLine]", 
     RowBox[{"n62header", "="}], ";"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\"\<i\>\"", "\n", 
   RowBox[{"Dynamic", "[", "i", "]"}], "\[IndentingNewLine]", "\"\<j\>\"", 
   "\n", 
   RowBox[{"Dynamic", "[", "j", "]"}], "\[IndentingNewLine]", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "\"\<validation Table - should be list of station indexes, going from \
\>\"", ",", 
     RowBox[{"ToString", "[", "xsecstart", "]"}], ",", 
     "\"\< (xsecstart) to \>\"", ",", 
     RowBox[{"ToString", "[", "xsecend", "]"}], ",", "\"\< (xsecend)\>\""}], 
    "]"}], "\n", 
   RowBox[{"Dynamic", "[", "validateTable", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stationlat", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "nstations", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stationlon", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "nstations", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s15", "=", 
     RowBox[{"OpenRead", "[", "fpath15", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Skip", "[", 
     RowBox[{"s15", ",", "String", ",", 
      RowBox[{"(", 
       RowBox[{"start", "-", "1"}], ")"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"stationlon", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"s15", ",", "Number"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stationlat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"Read", "[", 
         RowBox[{"s15", ",", "Number"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Skip", "[", 
        RowBox[{"s15", ",", "String"}], "]"}], ";"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nstations"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{"Read", "[", 
      RowBox[{"s15", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Close", "[", "s15", "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "WSE", " ", "timeseries", " ", "at", " ", "each", " ", 
     RowBox[{"station", "'"}], "s", " ", "points"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"OpenRead", "[", "path61", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"s", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", "=", 
     RowBox[{"Length", "[", "temp", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Close", "[", "s", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "import", " ", "61", " ", "timeseries", " ", "for", " ", "target", " ", 
      "x"}], "-", "section"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalstations", "=", "nstations"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timesteps", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"L", "-", "2"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"totalstations", "+", "1"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xsecstations", "=", 
     RowBox[{"xsecend", "-", "xsecstart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ts", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "timesteps", "}"}]}], "]"}], ",", 
       RowBox[{"{", "xsecstations", "}"}]}], "]"}]}], ";"}], "\t", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"validateTable", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "xsecstations", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"OpenRead", "[", "path61", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Skip", "[", 
     RowBox[{"s", ",", "String", ",", 
      RowBox[{"xsecstart", "+", "2"}]}], "]"}], ";", 
    RowBox[{"(*", " ", "*)"}], "\n", "\n", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"validateTable", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"Read", "[", 
            RowBox[{"s", ",", "Number"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ts", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
           RowBox[{"Read", "[", 
            RowBox[{"s", ",", "Number"}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xsecstations"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Skip", "[", 
        RowBox[{"s", ",", "String", ",", 
         RowBox[{"totalstations", "+", "1", "-", "xsecstations"}]}], "]"}], 
       ";"}], 
      RowBox[{"(*", 
       RowBox[{"<", 
        RowBox[{
         RowBox[{
          RowBox[{"--", " ", "Replace"}], " ", "with", " ", "the", " ", 
          "total", " ", "number", " ", "of", " ", "stations"}], " ", "-", " ", 
         RowBox[{
         "the", " ", "number", " ", "of", " ", "stations", " ", "before", " ",
           "the", " ", "target", " ", "xsection"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "timesteps"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Close", "[", "s", "]"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"wseoutpath", ",", 
      RowBox[{"{", 
       RowBox[{"timesteps", ",", "ts"}], "}"}]}], "]"}], ";"}], 
   " "}]}]], "Code",
 CellChangeTimes->{{3.637401699870002*^9, 3.637401798847663*^9}, {
   3.6374020676620383`*^9, 3.6374022021327295`*^9}, {3.637402284567445*^9, 
   3.637402286115533*^9}, {3.6374023914745593`*^9, 3.6374024180290785`*^9}, {
   3.6374027544273195`*^9, 3.637402964885357*^9}, {3.6374030168303275`*^9, 
   3.637403127516659*^9}, {3.637404617327871*^9, 3.637404621242095*^9}, {
   3.6374048439438324`*^9, 3.637404847536038*^9}, {3.640087787481122*^9, 
   3.6400878045791464`*^9}, {3.640087847016206*^9, 3.6400878538197155`*^9}, {
   3.6400878886277647`*^9, 3.640087909123294*^9}, {3.6400880317619677`*^9, 
   3.640088050145994*^9}, {3.6401471821383743`*^9, 3.640147185975981*^9}, {
   3.6401474613238173`*^9, 3.640147464325989*^9}, {3.6402020819356585`*^9, 
   3.6402022248118305`*^9}, {3.6402022695893917`*^9, 
   3.6402022946258235`*^9}, {3.640202389545253*^9, 3.6402024917000957`*^9}, {
   3.6402348481132016`*^9, 3.640234860405905*^9}, {3.6403329966980486`*^9, 
   3.6403330073646584`*^9}, {3.640417918343439*^9, 3.6404179271574545`*^9}, {
   3.6459826994192076`*^9, 3.645982699689208*^9}, {3.645986971804756*^9, 
   3.645986996664791*^9}, {3.6459870379048486`*^9, 3.6459870433148565`*^9}, {
   3.6459871397115364`*^9, 3.645987202978792*^9}, {3.6459872705745735`*^9, 
   3.6459872772945833`*^9}, {3.6459873145846353`*^9, 3.645987320734644*^9}, {
   3.6459873545146914`*^9, 3.645987357234695*^9}, {3.6459874026247587`*^9, 
   3.6459874471048207`*^9}, {3.6462723947100472`*^9, 
   3.6462723980100517`*^9}, {3.6462724428601146`*^9, 
   3.6462724752701597`*^9}, {3.646272647590401*^9, 3.646272656840414*^9}, {
   3.646272692940465*^9, 3.646272696120469*^9}, {3.6462727436905355`*^9, 
   3.646272788870599*^9}, {3.646272983800872*^9, 3.6462730241409283`*^9}, 
   3.646273234511223*^9, {3.64627348232378*^9, 3.6462735751939096`*^9}, {
   3.6462737010940857`*^9, 3.6462738441142864`*^9}, {3.6462739749844694`*^9, 
   3.646274074644609*^9}, {3.646274158954727*^9, 3.646274176684752*^9}, {
   3.6462742128648024`*^9, 3.646274219644812*^9}, {3.646274313974944*^9, 
   3.6462743871350465`*^9}, {3.64627451132522*^9, 3.6462745157252264`*^9}, {
   3.646275512368622*^9, 3.646275530378647*^9}, {3.6462788214157495`*^9, 
   3.6462788243657537`*^9}, {3.646278867955815*^9, 3.6462788690858164`*^9}, {
   3.6462791585562215`*^9, 3.6462791685162354`*^9}, {3.6514081805402193`*^9, 
   3.651408182054422*^9}, {3.6514082166084824`*^9, 3.651408227793702*^9}, {
   3.6514085867096825`*^9, 3.6514085970525007`*^9}, {3.6514092409353046`*^9, 
   3.6514092494997196`*^9}, {3.6514213010179768`*^9, 
   3.6514213097174745`*^9}, {3.6514230691503563`*^9, 3.651423069587157*^9}, {
   3.6568716378204107`*^9, 3.656871657287792*^9}, {3.656871748080269*^9, 
   3.6568717523601165`*^9}, {3.65687743488317*^9, 3.656877446988863*^9}, {
   3.658613222871723*^9, 3.6586132299865985`*^9}}],

Cell[BoxData["\<\"i\"\>"], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`i, StandardForm],
  ImageSizeCache->{8., {0., 8.}}]], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}],

Cell[BoxData["\<\"j\"\>"], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`j, StandardForm],
  ImageSizeCache->{8., {2., 8.}}]], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}],

Cell[BoxData["\<\"validation Table - should be list of station indexes, going \
from 142 (xsecstart) to 191 (xsecend)\"\>"], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`validateTable, StandardForm],
  ImageSizeCache->{104., {0., 8.}}]], "Output",
 CellChangeTimes->{3.6586138357212706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Bypass", " ", "above", " ", "code"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ts", "=", 
     RowBox[{"Import", "[", "wseoutpath", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ts", "=", 
     RowBox[{"ToExpression", "[", "ts", "]"}]}], ";"}], "\n", "\n", "\n", 
   "\n", "\n", 
   RowBox[{
    RowBox[{"tsseconds", "=", 
     RowBox[{"rundays", "*", "24", "*", "60", "*", 
      RowBox[{"60", "/", 
       RowBox[{"Length", "[", 
        RowBox[{"ts", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tstimes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AbsoluteTime", "[", 
         RowBox[{"{", 
          RowBox[{
          "startyear", ",", "startmonth", ",", "startdate", ",", "0", ",", 
           "0", ",", "0"}], "}"}], "]"}], "+", 
        RowBox[{"tsseconds", "*", "i"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"ts", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"Do", "[", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"{", 
          RowBox[{"tstimes", ",", 
           RowBox[{"ts", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], ";"}], 
     "\n", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ts", "]"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"modelwsescatterpath", ",", "ts"}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.656871430634328*^9, 3.6568714715555334`*^9}, {
  3.656871503401918*^9, 3.656871588897335*^9}, {3.6568718322152753`*^9, 
  3.656871834333094*^9}, {3.6568718665326033`*^9, 3.656871899588532*^9}, {
  3.6568778017411537`*^9, 3.6568778978956532`*^9}, {3.658613881930627*^9, 
  3.6586139083104877`*^9}, {3.65861408897434*^9, 3.6586140895515413`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 50, 1}}, Typeset`size$$ = {120., {2., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$19362$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$19362$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Part[$CellContext`ts, $CellContext`i$$]], 
      "Specifications" :> {{$CellContext`i$$, 1, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{254., {51., 58.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6586129624755883`*^9, 3.658613053408265*^9, 
  3.658614083139283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ts \[LeftDoubleBracket] \
1 \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664991914325346*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ts \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is not a list of numbers or pairs of \
numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664991915326748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ts \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is not a list of numbers or pairs of \
numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664991915435948*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ts \[LeftDoubleBracket] \
1 \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6650023003513823`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ts \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is not a list of numbers or pairs of \
numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6650023012904363`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ts \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is not a list of numbers or pairs of \
numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6650023014174433`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collect relevant NOS data", "Title",
 CellChangeTimes->{{3.6514230782295723`*^9, 3.651423087870389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NOSimportrange", "[", 
      RowBox[{
       RowBox[{"stationlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "startyear", ",", "startmonth", 
       ",", "startdate", ",", "endyear", ",", "endmonth", ",", "enddate"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "stationlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"observedWSEoutpath", ",", "ots"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Do", " ", "loop", " ", "to", " ", "import", " ", "each", " ", 
    "timeseries"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.651408610234524*^9, 3.6514086292041574`*^9}, 
   3.651409268687753*^9, {3.6514097420473847`*^9, 3.651409885724637*^9}, {
   3.651409936892727*^9, 3.6514099501059504`*^9}, {3.651417879408478*^9, 
   3.651417916676943*^9}, {3.6514185771509027`*^9, 3.651418578991706*^9}, {
   3.6514186121261644`*^9, 3.651418616369372*^9}, {3.6514213182229605`*^9, 
   3.651421320691102*^9}, {3.656875113271382*^9, 3.6568751480413704`*^9}, {
   3.6568753811127014`*^9, 3.656875382514782*^9}, {3.6568773972430177`*^9, 
   3.656877399966173*^9}, {3.6586130746767616`*^9, 3.658613078010598*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614258860444*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614258938444*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142589852448`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614259056447*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142591054497`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142591334515`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65861428210249*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65861428218049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142825548906`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
take\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614282570491*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614282664091*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(AbsoluteTime :: arg\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142826796913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "str"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"String \[NoBreak]\\!\\(\\\"\\\\n\\\\n The supported Datum \
value is: STND or IGLD if this is a Great Lake station \\\\n\\\"\\)\[NoBreak] \
cannot be interpreted as a date in format \[NoBreak]\\!\\(Automatic\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::str\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142844739094`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "str"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"String \[NoBreak]\\!\\(\\\"\\\\n\\\\n The supported Datum \
value is: STND or IGLD if this is a Great Lake station \\\\n\\\"\\)\[NoBreak] \
cannot be interpreted as a date in format \[NoBreak]\\!\\(Automatic\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::str\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142848015103`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "str"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"String \[NoBreak]\\!\\(\\\"\\\\n\\\\n Wrong Station ID: \
The Station ID is a seven digit number \\\\n\\\"\\)\[NoBreak] cannot be \
interpreted as a date in format \[NoBreak]\\!\\(Automatic\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::str\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658614285113511*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(AbsoluteTime :: str\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586142851447105`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["observedWSEoutpath"], "Input",
 CellChangeTimes->{{3.6568753723572006`*^9, 3.6568753747853394`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\Sam\\\\Desktop\\\\Thesis \
Work\\\\floyd\\\\spindown\\\\NOS_Stations_wse_observed_spinup.txt\"\>"], \
"Output",
 CellChangeTimes->{3.6568753754313765`*^9, 3.6586129628967896`*^9, 
  3.6586130536578655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "shortcut", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"unformatted", " ", "import", " ", "is", " ", 
    RowBox[{"failing", ".", " ", 
     RowBox[{"Let", "'"}]}], "s", " ", "be", " ", "more", " ", 
    RowBox[{"intentional", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"OpenRead", "[", "observedWSEoutpath", "]"}]}], ";", 
    RowBox[{"ots", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"s", ",", "String"}], "]"}]}], ";", 
    RowBox[{"Close", "[", "s", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ots", "=", 
     RowBox[{"StringJoin", "[", "ots", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Table", "[", 
            RowBox[{"{", 
             RowBox[{"tstimes", ",", 
              RowBox[{"ts", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"ots", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "ts", "]"}], ",", "1"}], "}"}]}], "]"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "trim", " ", "first", " ", "and", " ", "last", " ", "\"\<{}\>\""}], 
    "*)"}], "\[IndentingNewLine]", "\n", "\n", "\n", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"divide", " ", "ots", " ", "into", " ", "station"}], "-", 
     RowBox[{"specific", " ", "data"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otstemp", "=", 
     RowBox[{"StringSplit", "[", 
      RowBox[{"ots", ",", "\"\<}}\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ots", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "otstemp", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ots", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
           RowBox[{"otstemp", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<}}\>\""}], "]"}], 
         "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "otstemp", "]"}]}], "}"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{"Clear", "[", "otstemp", "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"ease", " ", "memory", " ", "creep"}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.651418326848463*^9, 3.6514183349292774`*^9}, {
   3.651418470992717*^9, 3.6514185415672407`*^9}, {3.651418661251651*^9, 
   3.651418760405425*^9}, 3.651421323039236*^9, {3.6514230586983376`*^9, 
   3.6514230644079475`*^9}, {3.656871199808907*^9, 3.656871209820405*^9}, {
   3.6568719823183203`*^9, 3.6568719878557787`*^9}, {3.6568747535158052`*^9, 
   3.6568747651974735`*^9}, {3.6568749650549045`*^9, 3.656874970524217*^9}, 
   3.6568750587342625`*^9, 3.6568759114130325`*^9, {3.656875956181594*^9, 
   3.656876010758715*^9}, {3.656876178577314*^9, 3.656876178792326*^9}, 
   3.6568762107141523`*^9, {3.6568763874232593`*^9, 3.656876418485036*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145985675335`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.658614598614334*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.658614598661134*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.658614598692334*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.658614598739134*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(0\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"Date Time, \
Water Level, Sigma, O, F, R, L, Quality \\\\nError: No data was found. This \
product may not be offered at this station at the requested time.\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Part/take\\\", ButtonNote -> \
\\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.658614598801534*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
take\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145988171344`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\(Transpose[\\(\\(\\\"Date Time, Water Level, Sigma, O, F, R, \
L, Quality \\\\nError: No data was found. This product may not be offered at \
this station at the requested time.\\\" \[LeftDoubleBracket] \\(\\(2 ;; \
0\\)\\) \[RightDoubleBracket]\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145988639345`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145988795347`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145989419346`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2 ;; 0\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145989887342`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(AbsoluteTime :: arg\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656876408660474*^9, 3.656877469402145*^9, 
  3.6586129646281075`*^9, 3.658613053735865*^9, 3.6586145990199347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"calculate", " ", "NSE", " ", "for", " ", "each", " ", "station"}],
    "*)"}], "\n", 
  RowBox[{
   RowBox[{"NSElist", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"scatterNSinterp", "[", 
        RowBox[{
         RowBox[{"ots", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"ts", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Hermite\>\""}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "stationlist", "]"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.6586157245204525`*^9, 3.6586157471334667`*^9}, {
  3.65861581858785*^9, 3.658615990252513*^9}, {3.6586161233074255`*^9, 
  3.6586161238504477`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({3146515200}\\)\[NoBreak] lies \
outside the range of data in the interpolating function. Extrapolation will \
be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.658616124396449*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({3146515200}\\)\[NoBreak] lies \
outside the range of data in the interpolating function. Extrapolation will \
be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.658616124458849*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({3146515200}\\)\[NoBreak] lies \
outside the range of data in the interpolating function. Extrapolation will \
be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\
\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6586161245212493`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658616124553449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "NSElist", "]"}]], "Input",
 CellChangeTimes->{{3.658616126752269*^9, 3.6586161409794035`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2.`16. ;; 0\\)\[NoBreak] cannot \
be interpreted as a date or time input. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586161414584136`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2.` ;; 0.`\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.658616141534418*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AbsoluteTime", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(2.` ;; 0.`\\)\[NoBreak] cannot be \
interpreted as a date or time input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/AbsoluteTime\\\", ButtonNote -> \
\\\"AbsoluteTime::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586161415880203`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(AbsoluteTime :: arg\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6586161416036205`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7G0UOd9fevbOHirgwBwQwDSTB8bncAg6p7T9
5rrX+yF8AQfzelvOuOevofIiDkprahdM1XgD5cs4fNrEqRo46SWUr+DAe0xg
M/85GF/JQWmmLOvx/3ehfBWHCu/C97u/wcxTc1ji5TDruCyMr+Hwaxe7w7R9
MP1aDhe12E/03obxdRxkZGcsi26E8fUc3H/fqrq39yGUb+DwPSSFt6gdJm/o
ULK0xTPxx3Mo38hh6pb1rx6thMkbOxTcbK3XqdoF9a+pw5vop3GzW55B5c0c
jK5v+TG7Q/sQhG/jsDlzseG0Ojko39bhiyX7AuaVMPPtHIQdQrebv4TxHRwi
mGbMzX7yFMJvcHDQeq9jJaJ7Hyrv6KBwf4agtdZSiP0Njg7NO19kvygVOgCR
d3KwYu2/mrX2HVTeyWGCBcuRlE+7ofqdHQ4EbuyO3zQXKu/scGpbwfWtvy9A
5V0cHliu26d4+QFU3sXB45Kb+qTF36D+dXW48vz+zoMcn6Hyrg4mX3PYl8/8
AOW7OaQ9TbH77P4Qqt7dYY3I/jnSua+g8u4O7/Zcufc2Bibv4bBq5f3sfw7P
oPIeDlY3zLO5/z+Fyns6+M+7VHlNlfEAAPbqzCU=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 50.}, {-3.606278722165091, 0.9656767529168415}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6586161285308876`*^9, 3.6586161416660204`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ots", "[", 
      RowBox[{"[", "50", "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ts", "[", 
      RowBox[{"[", "50", "]"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6568774800737553`*^9, 3.6568774966217017`*^9}, {
  3.6568780525945015`*^9, 3.656878073704709*^9}, {3.6586130328321695`*^9, 
  3.658613032910169*^9}, {3.6586146210961466`*^9, 3.6586146667073994`*^9}, {
  3.658616179662981*^9, 3.6586161819782076`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
4vKqDvcFC728Cizy8687/Eckrr9/wUKfN47E9zc6El9vRyRuD08icXuIFZm5
SGRF+luDhd6eCRb+qmNgoY8/Reb+kzwKl1dyuJfDy8FCX1+JwucLE1VR/nbW
qIr0dwOnfARY6OetYKG/H0ZVtJ4kejRF/r6CYOEPbAcW+nkaWMb/wcL/+B4s
9HOS6IrWz5QHi3yB7tF5PFvilF+MzucPFUOR/s4EFvH5ug4PdY7f5JTfczhK
TD4+X0wubw0W+QKTwSK/+wBYxv9j8vj/dyxF/oEysXg+6AIW+QULwSJ/4BxY
+AtCxla0vil9bJ6PaoGFf2CQU74+tiL/wO3YivzRf8VR5C/IHUdRPlgLsPBn
T4jD8+XeODyfvoyjyF8QPy5zSbDwH3SMy/P1PLCnL+x8fhos/AHfwcIfkCYe
c3WwsBf6g4W/fw1Y5BfcBIv8gj/jK/If5HC4KdiztyyPje+Px9Y/sCu+onz3
Z/EVxTPiJPDncy/+D5bx/wSK8g9nJ/Dbn/UXnEigKL7yBSzj/wkVxWeqgGX8
H/xTf4FXJlQU37kGFvH9cH8r8h9kAwv7sxH4p70PHgUW+e7bwcI/8Phvv33Z
fM+YiRT5AwonUmQ/K7DIL50B/hkvBx9N5J9vEvhjIkX+gmSJmSsmVuQ/6Onw
ssT+8/cFXwYL+z90Ep/rgbMkUeRPqJ9EUf7tcLBn3w0Hbwn+/Ujwg+Djx4Oj
JfXrYxy4AFjombZJFcUfpyZV5F84lDS4vsDvkirKJ0icTFE8sxz4p/8F3M0p
X5xMUf7yhWSK8hF+S86cMbkif0Wd5Pz7IQ5vdI6/65wvcgrmvCn4961S+O/L
8qQUiuK3+53jXzvnS5iSuTRY6MnOKRXlZyxIqchfczYl1/8vqfh9pUvF779m
KkX+o4GpFPmX1qVS5I/6Dxwi+C9iakX+rlypFcWLm4OFPh2fWpE+3RP8e5sP
8yJ18POC46Xh/lgijT//WH9ehzSK4sdz0yjK3zmVhvv/tzSK4sup0/L4US2t
Iv3ZLy2PV6vBP/MPwDfAQo+GT6fIf5o9nT9/2/GyCVjEl8eART7WTrBYj/0U
LPK9YqdX5C8uChb61aRXpFdnpef55jhY6NXP6f3ns/Nbigz+eGznv8oZeL7s
Dfb0l51/V2Tg+f4qWMQPwmZUpE//AQv7pCFYxDNGZlRkj20D2+lomrUHH2VU
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
0RFN+eFlj2jKB+8KFv65RUd4/Dp/RNP6xF+PalrPluGopnyg2mCxf9tgsNgf
dMNRHk/vHNWUfxTpmKZ8vTzHeHxueYzH84lgoe/3gYV/9RVYrK9NcFxT/lep
4zxfdTquKR94/nGeH88c17R/W4gTmvR92hOa7KEaJzTFGweAhT29Fiy//wcW
+ibCSU3f/84JFvZvM7DQn+NOavrexG6w+P76c7DQB3FPafreSXGw+N57+1Oa
9MWcU5r0ykmw0I9fT2n6/maq05q+z1kVLL4n0hcsvj+yCuzZV5fB10/744/l
P87oIH/AFfC/Z/zx03JjsGffWx59xu/flneAPf/YVfCTM357shzrrD+fWy4C
9vSEZe3wTIePgT172/Inh5Of00H+CMuVHO4F9uz3a+Dl5/z2YfnKOb+/WQ5z
XgfpJ8tZwZ5etdzgvN8/LI8478//18Fbz/v9xfJDh6Nf8Nuf5YIX+PftwJ7e
t+efdoGvd9g5/r3DSS7647Hl8mDPX2K5+0W/Pd8AL7no92dbfhHs2UuWQ13S
QXrRcqZLXF7X4aFgzx9hedMlft57YM8/ZJ8nymUdpL8s53O49WV/fLTvc/Jl
fp8HwJ5etfzmMr+/v6/oIPvKcpkrXN7lCr/fhc7x565w+wh5ldtP+qt8v7Wu
8v0Ocng92LM3LN8Ge/az5b+ucf/JfY37TwuHJ1zj3++95o+Pll9e4/4Z/7oO
ivdaLnmd+3dHsGfeWJ7n8Gmwp98tf7/O40maGzpI31muDhbfM+p/w5/vLa8B
i+8n3bzB49WfN3WQvWE5B9jLN7Dc9CYfP/Ymj4e7wJ79YvnZTb6fOLf4foqB
xfea/neL7282WHz/6cQtHm+/gMX3mVL+p+l7S1XAwl/ZByz8kyvB4nvI18DC
XxXutqbvI2e7zedvdJvnh1Fg8b2r7WDxvafHYOG/jHlHk/+z8B2ez9Qdnv9m
3OHnOQoW/s2PdzT5L5Pd1eSfrHhXk7+4511N/phldzX5oy7f1eTfCn2Pz58F
LPxh9R0efk+TP2fLPU3x9gf3NPk/ot3XlD9SACz8C23BYn3Z1Pua8l8O3dfk
f3h3X5P/IfEDTf6Dcg53e6Bp/5fFYOEPuQAW/oTfHvL1Mz7UlE9YByzy8YeA
Rfxm40NN8e67YOEviPxI03qSvI80rU9v9UhTPH3SI03xpv2PNK2Hef1I03qf
hI815WeWfqz5+39gkT+/4LGm/Y/OgsX+IL880WSPp3uiKZ5W84mmeN3AJ5r2
i1v3RFN88z+wiG9GfKrJX5DL4eZg4S8Y/1TT+vU9Dr8Ai/1U4z3TtF62xDN/
vLPx7Q7PNK23nQsW+2+dAov1ut/AQn+lfs5c7Tkf3w8svkey+rkmPXgDLPRj
+Bea9GV2h5u80KTvx7zQpO93Bpfb/Pqnwb+3+fGxX2rKpy/6UlO+uHnpt0eb
jz7rpT/f2vXlx19qyk///FJT/niKV5ry5yu/0uQf6P1K036kK17x/V11OOxr
Tf6If15rzv9/rcm/MPI1/37ba03+g0fB5XZ/uxhvNO0fUOiNpvz0wBuu/+kO
H3nD7/MDWOwvmvSt5v3/3mqKt/cAi3j9UrD4fuult5q+l/r7O035GJnfcXuv
906T/2zYO035GZvfcf+873DU95r2v8//XpM/sA1YrP+e8p77/8H3mvbLfPte
0/qaRB80rQcv+0HT/jRdP2jKv1kEFv7M82CRr/7rR035QBk+atpfpjZY6PvB
H3l83QAW6+vufNS0fi/SJ03rm/J80pQf1RIs1rNNBAs9vw8s8s1ffeL5L8Fn
TfH7Up81xWs6gUW8YD5YxGPOgEW8IsQXTfGttGARX6kBFt8bHQAW9sTaL5ry
02990WSfRPiqSa/n/Krpe5TNvmqyx8aBxfc1d4OFvff8qyb7MO43HeTvsfZo
8W+a7Nf23/z6sTzH4ZPfNOnvr9802fupvmvSB1W/c3lfsLD3V33XpAeuf9ek
F/4IYaj8X7DQ343BQq+MBnvzq+UdTvkTsPd+Pf3/iyF9VAQs9J8GC307Eyz0
5jGwN9xa/gT23q/l5CGZKzncC+zFay0vd/iKw2F+NUHzu+WsYC/eYrmBwyPA
Qk9vBQv9/dApj/6bCWp/lguCPf+Q5XYOTwN78XvLh8GeP9Dye7DQ90lCGdLz
5UPx83UPxc+3BCz0+8VQ/D5C/c73nwks9HxdsND7Q8Gev83+fhNY6Ot7YKG/
o4Q2pN/zgYX+bh2a28tk5/gDobl9vQELvf53GD5fmTDc3ruE4fa2EOz5Ez39
Dxb+mJBhuX+kB4v+Vyss39+gsHy+9WH5+W87v/8rHHNuh1uAvfnLjg8TwFL/
h+PnewmW+v8PExQvtr8vCfbiv57+B3v+VzsezQN79rPl02BPf1j+7pSnCc9c
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
1l9o9IPPHw5WenALWPkHHoCVvoz5k7noTz4+4KdD8dipPx3yLxz86ZB/4x04
2H5zj0/+i++3ksXdf/Hxi8HKv3L+l0P533+s87P+dij/u/5vft5DfvP72Pib
n//d39545XK0Pw7Nly4EVutjtAGr/JRJYOV/2vfHofkmr/94/bX7/ST5y+27
/F+H8smdvw7FoxdYfOYvf38///L3lymU0PdaB6zsr4FgZb+tAyv78hZY2TuR
QwvZN/nByt5tCVb28Hiwsj92W/wCrOyVhGGE7JMyYDWfqgtYxavnglV/exKs
8sO+gZX/Nn1Y5ppgpW/6WbwarPr762A1/kQIJzSe5AGr8cYfrPITx4CVft5h
lT8Fq/EuXnghe6QkWI2XncBqPJ0FVnr5GFjp0c8Wp4kgpJerW9wHrOyLFWA1
3l+xOGxEofE/F1jZH03AKh4wEqziO9us4x9Z9cWOxPdTLBL/nw5gFe+ZDlZ6
+nAkfp8fwEr/powsZD9WAat4Xk+rfClY5SdeBKv1n0JFEZ7/H4XbX0Ow0s/D
wGo9qM1gZR/fByt7IkZUIf1cBKzs+XZgpYenWHwArPTDW3Dw+OHWlywaf38V
wSqfxETj6y0CK3/YObDSz78tzhKdv/96Fg+Ozv3LBovvgJW9FDWGUDyjIFjp
rdYxuH+bCFZ6ay9Y6ddXYKVPE8cUsofKxeT+tBtY5UvOB6v1J0/HFMqX/BFT
yL+ZMZZQ/KQ2WOUPDQCreMtasNLLN2Px/UeKzf1/PrDyl7awysdZ5bti8/0/
t45PEIfHg9JxhPKjOscRWm96Thyu/wRY+Qe+WvWli8vvr0Zcfr994/J4sgqs
/LXX4nJ7Cx9PyL/kE4/Pb2aVjwareN2/YLXex5N4/L3Hjc/9f4n43B93BKv4
4kyw8sceBSt/7qf4PN6kTsDjXbUE3D/0TsD9x/IE3L9cBiu9EiYh9085wUrv
NE7I49WIhNyfbgWreO5DsMpXiZVIKJ/FN5FQPLk9WOXPTAOr9RsOgVW8/T1Y
xadTJBaK31dOLLQ+Yw+wyt9ZAlb5PxcSC+UL/QWr/KpsSYTylRokEcqHGgpW
+VCbwCqf6Z7F0ZPy9Qtb3DYp1z85qdD8mv1JheaPvbGOT5pMKL+rQjIuF7DK
71qYjO//bDJ+Hr+S8fPInJzL6ybn5zsoOT//9cmF8htuJxfKD4iSgttLgRQ8
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
1v9D+P4LDeH62wzh608awve3zyp/PYT/b5Kh/LzKD+Xn7wzl57tgKNd3Zihf
7+dQ7n8yDePnWWcYnz9wGLeXdcP4e7g1jNtb5OHcHvMP5/KWYOUPGz9cSC/v
Hu6NF6699mK40P4RCUcwlxnhjScudwGr/SXmjhCKT50cIbS/wjew2u8g/Ujm
mmAVv+wHVvbnarCK910Hq/UeI4xizmOx/yiheOYYsLKfd4zy3q9rXz8dJaS/
4432nq/LJUcL2e+dRgvp81lgZe8fAyt9/Xm0kL5OM8Zr365+qD7G+//u/pF9
wEp/rBjj9ReuXrkyRkg/hx0rpK9yjfWuvwrcxCofOZbP3zbW+7+u3n40lq8X
e5yQ3io2zvt+Xe4wTkhfTR8npK8Oj+PrfQArPZ9yvPynl1eCq4z32tNycE+w
0pNLxwvp/YtWeagJ8p9+WQbODlb+gIbgYD2/GDwMHKyPl4A3W+fft8pjTPTa
m3t+EbDyL7SbKORPmDJRSH8fmCikz9+Cg+3NWeBkk4T0fcVJfH0DDravXP/H
okn8vM5N4vf5e5KQPs4ymd9vvclC+40OBqv9UzeA1X6od8DKHxR1ipC/qOAU
bu+tLZ44xXs+O8B7p/D39Aqs9tNNPFVof95yU73n43K3qfw9z7fKT08V8r/9
AKt4f8Zp3v91+4vaYJXPMQCs8ifWThNa//UmWOVnRJouHP+fzv1nC7CKH4wD
q/jILrBaz+c5WMVzEswQsjdLg5U90hms7OU5M4TsnRNgZT9/BSv/erqZQnqh
Bljpo74zheJpq8BK/1wDK70TfpbQeq4+YKXnms0SirePtsr/nSWUX/UErOZn
xJ0tFI8vAVb5bh3BKr46c7ZQfPbobKH4+iewiu+mniOUH1zN4t5gPf8frOYP
X54jNF8ozFyhfOScc4XW52g8VygePmKu0PyIrXOF5lc8BKv5ObHmCc0H9LW4
PVit7zHN4kNgFf9+D1bzNVLM5+tXni+Uf9DD4iVgFT+/MF9oPvXf+Xx/2RYI
7RfbYAE/36EL+PlusvjeAr5e9IVC8fHCC4XyM9ouFMpfnGzx/oVC+RhvLE66
SCieXwGs8gkFrPItF1p81jr+1yJuz5kXC+U/1l3M38ugxUL+nPVg5c+5bXGU
JUL+iwJL+PtuZfGEJfx971nC3/PLJUL+kkRL+XplwSqfoCtY7bc0bynf/ynr
/O9Luf4My/h+aoHVfPb+Fq8BK3/LDbDKD4+4XCi/IO9yofyg5lb5WLDyL+20
+Nlyvt/4K/h5l7I4CKz8fbPByj91fAVf/wtY5ZOmXSmUX++3Usg/+Q9Y+SNX
rhRe/38lv89wq4TX/wMrf1bTVfx/R63i+92+ivv/xxbHWc3vrzhY+ecCV3P9
M1Zz/UdW8/18XM3tJdUafr5V1/Dxvdbw8162htvfJbDyb4Zey5xjLX8fjdby
8xu+lv/flrX8/x9YHHMd//+iFges4/Y8dR2//4MWv1vH7zf5ei6vtJ7bd3ew
mg+yeD23p/NglY/8B6z8g1k38PdUH6z8g0PAyl7YaPHdDVx/tI18/UIbubwN
WPk/J4GVv36fxa8tTrJJyN9QHqz8FQ5Y+RsWgJW+P7NJyH76aXGmzcx1wMr+
GrhZyF5bB1b+vltgFS+JvEUoPyb/FiF93xKs4jPjwSrfczc4OF/M5RdgZa8m
3MpcBqzya7uAg+0p196du1XIPj651Ws/rj39bauQ3k6/TSiftuY2ofh4P6t8
NTg4H8vl62ClByJsF4p359kuFN/23y6kx8dsF9LjO7Z77dfVH0/Bwf4PV5/E
+5e5JFjF9zqBg/3Frn6fBVZ66BhYxS8/g5WeT7NDKN5ZfYdQvLwPOHi+jssr
wCqeeWWHUHw87E4hvZcLrPRek518/sidfH/bdvL9PLI49i4hfV9sl1A8tsMu
Pn76Lv4/h8HKX/ABrPwDKXfz/6licc/dfPxSiy/u5v8bag9zdrDyXzTcIxTv
HbbH68/d97MZHGx/uXr3PjjY3nKfV4y98l/8yuUie/n8dhZPsY4/AFb+nrdg
FU9Oto/bX8V93njhtl8DDs7ncf1Ti/YJ6d1z+4T07m+Ls+z33qd7fL39/D0O
3i+UH7MBrPTvHbDK3496QGj/lYJgpY9bH+D+YyJY7c+yF6z8g68OcP+V+KBQ
fny5g0L5P90OCunl+WCVT3Ta4h8WZzwklO9WG6ziGQMO8fiwFqz84zcPCcW7
Ih3m8SbfYaH5dy3AKt437jCPx7sO8/j9/LDQ/LUER4TsjdJgZf90Bqt83TkW
nwCreO3XI0L2T7qjQvqiBljp7b5W+Sqwyl+/Zh0f/piQXvYBK73U7JiQHhsN
1uv/Wec/OSakT+MeF9KjJcBKr3YEK/0487iQnj56XCjf/NNxrj/1CSF9We2E
UD59b7DKz14OVvPlLoNV/nqYk0LzlXOCtf4Hh3J/wfofrPLZt57k//MQrPLf
Y53i/+N7is9vf4r//7RT/LwOWeXvwWp+QIrTfP3Kp/l59TjNz2cJWPknLljH
/z0tpPeznRGaf9DgDB8/FKz8B5vO8Pu5B1brJ0U/K+TPKQxW87PbgtX8yckW
7z8r5E96Y3HSc0LzNStYLOe4vS8EK71/Fqz8Ab/OCeXrZz7Px9c9z8cPOi80
n3I9WOX33warfIooF4T1P1itp9IKrPxtEy5w/Xsu8Pf+Eqz8E4kucn1lL/L1
u1o8D6z8facucn/1/SL3Txkucf9VC6z0WX+rfM0l7h9vXOL+M+JlIX2Y97KQ
vmt+me9v7GW+n50WPwNr/X+FuRRY6c+gK3y92WCVf3P8Ct//F6s87VUu97vK
5f9c5fpXgpU+vQpW+jLcNSG9mBus9GjTa3z+qGtC/oLtVvljsNb/17m8+HV+
f4HXeTyYAVb+iyPX+fv4eJ3bZ6ob3H6q3uD22esG/59lN/j+LoGV/yT0TSG9
mgOs/DGNwEqfDger+etbwGo+2gNw8Hwql2Pe4uOLglU+T8Atfh9TbwnFrw+C
VT7BO7DK905+Wygfu9JtoXz47reF9O7i20Lx9/NglU/3B6zso6x3hOLT9e8I
6dshFm+8w+ffvSOUrx7trlD+YCGwygdvc1co33ASWM333QdWevg1WMWrk9wT
ileXv8fljlW+4J43vrj26pl7Qvbrz3tCejjTfaF4Up37QvmaA8HK3l4HDrYP
Xfv81n1v/HTt88gPhOJj+R8I6d2WVvn4B0Lx6t1glW/64oFQfnjCh/Kfvenq
4TJgpY+7PBSK78196LUXV6+cfCikf7899MZnV9+kfyQUP6z5SEh/9nvkfc9u
+epHXn/gll+3OMJjofhknsdCes7/sVC8eQxY6dcdFj8FK70Y7wmXl3wiFC/t
9ERIT8+y+BhY6dfPT4Ti3WmeMlcHq/h8n6feeOHG71c89d6HGx+/8lQoXz7s
M2H9Dw72J7n/v8kzrm/kM6H48bZnQvHjR1Z57OdcX7HnQvq7A1jp/enPhfwD
h5/z+/rwnN9nyhdCernKCy7vCVb6eSlY6eeLL7h9hnoppJezv+T23/Cl1/+5
39ewl977d/1Lm8HB8SNXX99/KaSvY7wSyi8pAlbz4duBg+1Pt3+YAlb+twOv
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
duHx5iL4P339f34vDMM=
       "]]}, {}}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.002777777777777778], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
Sxmuwd75Pax5QzeMcb4Ge+cN8TieVz7uu8tExt5ZHHYl3i2f2ULG3lkffmzj
G53JR8be+TZ8xnlauHQ/GXvnVNiya8QsVvTf3rkVZm1p+XNdgoy98yzsyx+r
r0M3k/8YRwLd8+MKB3bSf557wk4aDpMPXqgSImPvbAz7f1SqmNtFxt7ZGx6e
EhK6vYmMvXMOzN0cybHxbw32zj2w4/rd55Wna7B3Xvj3+F1Dm8beGuydtyXi
/sV2MGR7cQ32zgow89PLzQsBNdg7W8CrGW6VfzGpwd45ADb+nf2CEKnB3rkI
rjt66PaWpWrsnZ/CDn37iLzqauydf8LcKkVfNZyrsXfmS8L7u/bgMdreauyd
T8JeUVc/vx+owt7ZFlZ+NvnR93oV9s6hMH+j46znlirsnSthCfHrqlk5ldg7
j8CN9VfePqUfzylh0wzJuJ42yoa8qa3A3nkfLDT7LTZVugJ7Z014tfvz+Kn8
cuydnWBmV98L/tzl2DtHw0ppbBRt9zLsnethnTa3Dvanpdg7T8AdT5ciwwRL
sXdem0L3g6dkvxS7EuydReC728n6G84WY+98Fp7KPLdpC7kQe+ebcFjxHuaZ
DQXYOyfC0W9YRg+q52HvTIUdi66X3XLJwd55GpY8v28q0C8Le2e2VFwvhnyG
xXwzsHc+CmvsNKAZOaRh72wIJ4UVnhJSTsHe2Qs2n0iQbmJKwN45A+5QiW7c
cD4ae+dOODIyZSn6fjj2zp9hoTOve525HmLvvDUNx6/c0iuNV3exdz4O87sa
cGh62WDvfAme1HrCrnXZDH1nXzj4QYPSkXBP9J3zYavzuqqiNoHoOw/Aui/f
tAa/CEffeQkeMMvhkwmNQd95ZzrdURusxc3PJaHvfAKWYF1m/7E5DX1nK/jj
p/+YHf9moO8cBE+zRDVkf8pG37kMPvC2jYU0noe+8zBsyWXkNtlXiL7zb9ie
ecGgzLQEfWeBDLr7MiOtVZ6Vou98Cm6o4rksqFGOvvM1OOeIoU9nQwX6zo/h
poXV/E0iVeg7k2HtVX2K8XHV6DuPwXtUFmeXmMjoO6/OpNst1Pn+HZta9J0P
wPfUh0rfdtah73wGdmoeZJkWakDf2Q0W2aYuY3C3EX3nOJjQaRpieEqg70yB
66fEZ0zDKOg7v4f3W5ROy0o1oe+8IQvHk6YH793hJvSdxeHpvxGae282o++s
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
6dc0KvbO/bDjKiGvH4NU7J2X4ISqAz8Gf1Gxd975je5HT97+DdxNw975BPys
YEhTVIGGvbMVvH29XErPORr2zo/g9VGch29b0bB3LoP/JB5hVXOhYe/8HE6f
PeqieouGvfNv+NCc92Ufuh9GvuNfonuoZbUbsysNe+dT8MvGih/91jTsne3h
PY8aaG8NaNg7P4ZLP2c6SJ2gYe9Mhn8nj+1pEKRh7zwGP7f59cJ6FQ1759Xf
cT65ffiz/+W/vbMwnBrhvGku/9/e+QzsGS+gknXj397ZFY6Qv714Sv7f3jkO
tqIJpfT8asbemYBz7GarJaqasXd+Dysxbvp9w6YZe+cNP+hefZ1alMPVjL2z
OBz661XYQEMT9s76cKrc1s/Mpk3YO9+GGxUeJJj8pGDvnAqrV5N4f4ZQsHdu
hZ8z3xv/xUfB3nkWVmYO+sZ/jsDemWMZ9/u5cYZB00bsnaVhP7XHWtcvNWDv
fBGO05FJfmRQj72zN/xVJCoj6WQd9s458Ivju/6eOFiLvXMPfFFeqZprHRl7
5wX4B6PQvpbxauydt/2kW/Nktf1KcRX2zgrwryLjVFv3SuydLeCdan00KqkC
e+cAWE+Zp7mCoRx75+J/3vvZ8X1DKfbOT+FVY+y0xRsl2Dv/hHdruV+ZNSnC
3plvhW4hJcbfYx352DufhF02bR0vlMjF3tkWLijg9xGMzsLeORS+ZSKQP/sz
HXvnSvhsiGBqyMVU7J1H4IcpLkNfPROxd2b4RbekqNvnlRMx2Dvvg9PnjPUp
qx9j76wJf7mgVG0T8hB7Zyf46zZnllSue9g7R8NcTy7kMt6zxd65HmYpq0u6
Fm6CvvMEXLdnsfOSpwf6zmt/43idOSG7PsMffWcR+OFTxrc/PMPQdz4LO0+S
CmszotB3vglvPC316lxTPPrOSfC2y/4FujYp6DtT4c2iEhzSM2noO0/D5iv2
HqKXM9F3ZvuD+3sw+e7WZ9noOx+Fd3x739Avl4e+syH8KtY14WxMAfrOXvD7
S0HxiZNF6DtnwEkuzAITESXoO3fCwlvdExeKStF3nocNIxlXYprK0Hfe+tcZ
f+8nh9l1l6PvfBye7+9MXdNXgb7zJVhf1mHPmo5K9J194Uu6VofX1Fah75wP
q67ROJeeWo2+8wC8+8F3tdteNeg7L8GHrJVviOqS0XfeyeCC+39phtnOWvSd
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
E73zTlgzbfJ6wTQVvbM2LGV00MYomIre2R4+8uL8cZf9VPTOD/6Z6Zfg6p4O
9M71sN7XLF5R0w70ztPwqEKP+ou37eidVx1iWO6/gI2GN9rRO++F2dcxK6Z9
pKB3PgVPpqm7T16moHd2he+vnOoQG2tD75wIe3WvCC1TbUPv3AqfyG+VSkxv
Re/8Gj554r3DFqZW9M4cmgzP6wp2nz3bgt5ZGs43kAoKzWpG72wA35Gmnfwz
TaJ3vgP320ubddo2oXfOgHuGV3SxvG1A79wFl90Yk9G4WI/e+SNcnO3DvLq3
Fr0z12H8+1eD+1+K16B3VoAVBZTMzAOr0DubwvPn11otm6xA7+wLG5w1fKux
qxy9cz6s4/ziaaZtKXpnGvxO/KCU2uli9M7fYQmFrUqGbfnonXmPMLytbIVg
iGgOemc1OOI8Z8NT7wz0zpfh0a1zry6NpqB3DoZZFm9fDFGPIy0UZkvhIMvx
0YyeCNIt6sYYnMD+hbU62o8M+fD3N1zR+mNagOc6mXY0ePtRhqli8XZ+KtfR
Ox+FU+eeiRZk+qF3vgb/zThht+ZRBHrnSLjb1a/inkEceuca2MjVuT/7ZQp6
5ydwO8e192kxGeidVxzD11tplhep5qB33g3/CdU/2TOZj95ZFx56euUFm20x
emcn2Ksi9Gi3Uyl65ziYuj7yo+GecvTOJKz7minSbrwCvfML2LBnV+1Z9yr0
zqu1GD546uAll4016J0l4ImQY8PHU2rRO5+BDXq8ou2F6tE7u8Pfqj4+CX3Q
gN45BZbNZ3lot9SI3rkDfmr3Z8ucEYne+R2s8HHm6/czzeid12vjvLo4K9/0
oxm9syzcsFfDSj+yBb2zMczGIazeI9qK3tkLvnAjlk+pphW9czZscOnDKqpa
G3rnPjj29txIeHsbeud52CUr9kmHBgW985bjDHcl/wmMbKCgd1aB61y4skQk
2tE7X4KV5xtii5La0TsHwtp//YLOsXagdy6Cia5f949d60DvPAz3zN/8k9XX
gd55AZ5yX2S6t5uK3nmbDsM+lmkXWD2p6J0PwR+9Mh+KDlPRO9vA30WSz7zd
3oneORS+SbXYdfhaJ3rnSviqAcc94fJO9M6P4ZKZZ6rWXzvROzPpMhzdGTzz
RqILvbMILOfbXuNm3YXeWRsOaF3ofhbXhd75Bqwq83XnDLULvfMD+JyolKHS
xy70zg3w2SN8B/M5u9E7T8MaJXZ1b/Z0o3dedYLhxs/tphWq3eid98GOsiUB
Pbrd6J1PwR7XpmS/n+lG73wTZhHdNL3ybDd650T4t2qL8jDj64ej1Nvgh1uX
/znB+HlvPgy8hreu3rLDWawbvfPakzi/pdXmTnN0o3eWhj1C7BY533ShdzaA
Q4ueDr9o7ELvfBfuGfhgLBjcRZwsjciAo9g9XIT0uwhLdsFu+GNlU6vhpi7C
zbLwI8yfdTJSe6iTCCEVuPUYVrnyUPH2vU4ifWunAuyvteHzHaKTqHY8cxE+
ku7jNP2RSvT2zfjCb3pMm6QSqcT0Lvv8f1/fuP7VwhEq8c3zDw1eGP/hXv6p
g1g9GfQd7rz81Kr/YQexTWYL3ylcr72RgbnKHYR0WKYafC3/KGvETDtxdE7K
Cl6tfcy21a+dMDnUHAznWkg5mYu1EzeSdMrgWJ6WCv8+CuH389EYnDZ6YUTG
nkLEn7L+8+/n6/DcttxAIYoLvm0/zfC0zU7q7/I2gsLifRRmidixd1K/jRi/
yHkd5nXjaZr82kq8r0uMhCs4P4UOR7YSy7n31MJOf47yxUm2Epvsap7Arjdf
3lrV30Ls6dJcqc+w8UF3zT/WLYTqjqHdMMuN/RMWy1sI/dsXT8DPV2/il4pr
Jq6MvXeCV4dOuVhINBN3JN3j4EsmWfvXBpFExD3WZnjQ6YiWWUkTkf0i+gW8
dfO92pXDjUQDsYP9DMN85qrNOt8aCFpsiQRMvc2dnsrVQLz4onwWlnzrO+Ug
VU8s6vS4wwKlAdEqJ+qItTnnU+GMN99uBtnWEjuWv+yAZ84/4nruX0PIGTu+
g7+IHoh/lFFNHK9i2nAW55m85vdVbVWEGWeILKzBV/eb+Xkl4WzDawLXLN//
0IG5kgii5HjBh7YvK3ovVkEkC8jkwGUjbG2b9cuJ8pttffCtCAexMM8yonPw
5BfYITP+xXx5KTG198mWcww/unZfcvRtCfHZz1YF9uDkekXdXUKwTP+8BD/2
Ms6PniwieBX9AmG+LwFROY6FxP7ojcWw8qLk28itBQTjeB6G65kz25gG8giD
Y+KLMGFhc8ApKpe4ll6/7TzO1/pj+07Y5KB31oQ3K5H0gZPZ6J1t4FlN2/1c
R7PQO4fBtfSo1QInM9E7V8Knbm+7NGadgd75Maz6pEB9c0Q6eudlBgxvdHhu
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
5eidNWDT17/Y72i6YN/5CvwpsfxC6lU/7DuHwG5G01ULL8Kw71wBm0zObxxJ
eYB95wmYdWx5cIBVAvadl2BHMZanNvyp2Hfe+Qr3X/vwxzaODOw7a8HHPWq2
SDBnY9/ZHta08/JdtjIP+87R8CnW+vuOqwux71wPh8RZbz+1pgT7zs/gV5cF
lY8+LMW+M8trhi+IecqziZRj33kPnHG1N/tGTQX2nfXg93Otpid0q7Dv7AqL
8BfstXhVjX3nhH/fv835qbV3LfadW+FHA+GnObfXY9/5FXxEwvAvW1sD9p05
3jA8tkQ0r7jchH1nKTh2KvzKGeZm7Dufh7Xld789M96MfefbcPCz9ewT+S3Y
d06Hddx/iJTfbcW+cxfMLrUqrup0G/adP8CKOxvXl++iYN+Zaw7XC+X+Fudf
FOw7y8NRp3Lm2/vbse9sCke3576xTe3AvrMPHDi5hW2PIxX7znmwafU7mQ6N
Tuw7D8CHxz2CmDZ2Yd/5G+w/eLYh6VkX9p153jKsSuHysy7oxr6zKizc9btv
t0sP9p0vwxxHt3mUK/di3/kerCj5efnk8j7sO5fC2anPVO6292HfeRQuupOh
dMe3H/vOv+Hxw2aWTeoD2HcWesew7q09rqJ/BrDvfAT+/agm9bQhDfvOV2GN
rGGRyAoa9p0jYMvo3/uPctCx71wDS3g84rKyoGPfeQrmTVl+e6aWjn3nFe9x
vTkcGc7jGMS+sygcsfDsSaHpIPaddeGJJzdcRosHse/sCDeqN7mu+TuIfedY
uNyP+uqA1hD2nZvgArlVp6WihrDvPAuPrlO1fPF4CPvOqz/gPKxXKt8nNIx9
5/3wpi+/c+cuDWPf+QwcOMIX+Tt9GPvO/8HSKR/iNKeHSck8lRTYUPlLWx7v
CHl4ZW87LJd9poLr9AhpyHhBwUEy23Ts/UdIu5qXnB/xeljYs1RUM0L6bHCS
gbnl5Mc7Xo6QMVeXGcMPOIaPlq0fJQs7QjxhzqOmeXbyo2SrIF82nMbXEc50
YZQc/S+3F1bZJLNkfXeUfDssMw9772O/XZQ4SjLtp2z+xPDXw4nEWM0oyRWo
pwwfvSt69g1tlNz9/Ik5bJ/GvPDmxSiponw1ADYU0v0z+WOUPPVwoRBW8law
p7CMkVaf/YbgixeSz6VsGCNvaXMtwA0ft4dd5x0jwzJTBT7j+6eHSDGhMTJz
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
3xE71Gdq0XcOhd3EmkU5E2rRdy6Dh89tD6Pq1qLv/BGu84+KoCyR0XdeEYDz
eyJIVyOHjL6zJLxPJUD1lhUZfWddeEF/0DtOiIy+syt842IJ/1RLDfrOkXCU
JO9cKPP6IvbHrQY+vzXnSaVaDfrOw3C71sHf/n+r0XfmCmSa46tq4UaiGn1n
WbhmjaSG771qkrtt5ln4cma0bK9mNekJoez57/arrbZv5asmJWxoioezrJ+f
LKggSMXOBk2wviO79spzBKmldWACzjZR7Nq1VEX6JObI/4TpSdIdp7nUKtIv
7z9KsJEkf7WuURVp1Xv/8/DR5/ues3JXkUSYv+DBNhIjHe8aKklyz5LS4B1R
yadf+VSSNEdl2+GWiP/2rjpeSTJTr/4Jcyq9PPyWp5Lk9Oqk8FOmj4dzb65+
X0HyneslwXekZzZezaggRepdsIXzrUp0A+9UkLIzfvnDp7Zs9yIbVJDq2O/n
wJnPPfZl7q4g9VjwdMOFvwnREc4K0kRZ9G+4Qj0im3O4nLRcUHLbM6a9xy8P
J9aXk4SulRyFY3Nb6rSSykmSFI3LsL40if7Yp5yktr3jOcytHce9YFuOvXMx
3EGRYJc8Wo6983s4zHjga+mOcuydlz/H7ZPLXY+zlWPvvAu+cy8uwOdTGfbO
J+EVjhqH/6ssw97ZGe6ZmbMdCivD3jkcnvjuefHF1TLsnavguiDrFi71Muyd
P8NzP4LEd6wrw96ZM4jpJxXC6xuHS7F33g0fNv+29mNhKfbOZ2DeR2fvWHuX
Yu98C/4gFimlpVWKvXMMHGR0evI5Tyn2zvXw+dbMQtXOEuydR+GX2iHFBqEl
2DvzBOP8PS57Paxfgr2zPPxQzqKenacEe+dzsHvUY8tmSjH2znfhAv67W/W8
i7F3ToYdqyXulykUY+/cDPOqX2PbMVqEvfN3mGtvYE9OZBH2zutCmDYPcPVx
1y7C3lkFnquteRoyX4i9sxW8py7nxtrkQuydH8Jt4wZi33QLsXfOhIV+f9og
sVCAvTMDllhziCUvrgB75zmYrqkmculYAfbOm0OZPnNuTFR6LB975yPwH50y
ndaAfOydL8KyE8uHBKXysXd+AiebnHzW0pSHvXMBLL02r4L570Psnd/C3k1p
zb7zudg7L8F+9wVWrQjMxd75vzCmq7fHuo5sysXeWQte4zhqMpaag73zNdhw
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
QSW04rpuwre51jb2bWkmzH9bvYKvL/eTenO4mfifpPsOp/JhwDiuaNCgFA2U
jKSs+okoj1JKaEiIMsqWLSkzM3tl7733ng/H3lQqFTIiSmkqovfc3j8/1zm5
znGeQdf3utlcn2+C+XbXebRqdpGPCxxnYKGI5LkQqy4yjn4TYx/VL688nz7o
1EUW34n8D5bRSLlq+6iLbK3jUYePT+R52jh0kW9YS5xhRb2iLA7zLnLeUjoN
PijO9df2RhdJ193TCX+3nxbwlOwid/NqzMPdXlUhGju7SEGXDzv78XoffT26
ZbqTPEP9gQCu2vOsoqKwk1T9j1YH3nDrz0knq07ybkCQJ3xBZJbF50gn6fKB
PRceSVVNZBjtIMPO5AzAJxfe7RH16SCzYsUX4MJYwfSzgh1k/a8WtgGqb1aE
nX3Y1U4+u3LtDHzjveErttvt5HT2OwO4j3l+2e5bG/mXzswfTv2qnPzOoY3c
prVUDAc7i57KXtNG8lQ9fgUbaqTFCz1qJSWYWVbgku3617qXWsjLpilcT6lu
3RZV+sayhbzTJiwH51gJtJdPNJN2nPVm8P3hPTzFV5tJf3v5JzBN6ZPtbLVN
ZNLgqyrY+fEKiyRXE1kupD8Kax75vk/Ri0J2eX+ne4bPXzhH3etDIzk64cIP
v14fT7KcbyR/nNp6Bdb5yC/FmdJA0kfG3Ft1jVBrwB+SZP/GFwN7OVCCFDLr
yaMK5Q1w+oNU4RKlOlI2XWYKNm0mxxZ/15AaNAObntvg78XtXdGKqSYt1DVF
YJr6IkseiSrSvfSjCnyJd+RG+GAFGbX1gQMcbXx0ZL1ZOZlvuD4Znn3IZvSc
toykUELbYJ5mKRu9iBLyJRvnHNzv9ILj0KFi8pNt/vZBXL+v7K8JryokaQYk
xeFAg19v1UPyyZ2HO27Bwz/+PZsuzEHv7AZL26TfmO/LRO+cCesfeaYbP5+G
3rkX/itq84xvRwp65+/wrHdj/oBkInrn3S+oNuZnudg2EI3emYC7tC463joR
ht5ZFxaU+zax7XYgemcf2CvtiWSvrTt65wL4eH8wE8dda/TOg3BE4TzXOgNJ
7Dsvwrs+rJOIsrDFvvP+lzie3937XH7TA/vO52C7e/HRF88GYt/ZBHZUUdYK
u/cE+87B8FQzw9Ep3ijsO5fD0vR+mvalcdh3fgtXPX1iYLE1CfvOa17h/sE5
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
j3OWum0pQe9sCuvo6EnN6BShdw6F67lUE0V0C9A7V8JV0t7cycs55JCIwgic
8vsNa3FwJjnnO0R7l+rxFuHaf5xp5Nop/UOwTtHpTrHCJJJV+scl2Gne7SCP
Qyx5OPqRDZwbk2CcGB1GSv/YGg3HrGEz7Xfyx74zCU/rSi3TVDpj3/k9vHHd
vpAvcUrYd2YwpXrwXTSjFa8temdheCyfbDBUeoze+Tp8Rd/afbAoBL2zPdyu
3v8wcX8UeudEuHhM2+yrVQJ651bY8uKpe8eeJaN3/gR7ThGu1m/T0DtvM6O6
/F7BtavPM9E7i8HOVZvvbqrOQe98E5Y//3JhnX8+emdXeFjNpkY3vRC9cwbs
H54h7/K3CL1zD5wq01JbfaEEvfM3+NViptIG31L0zrvMqfYRfLmi11SG3vkU
nBZvsjL2tRy98x1Y6aRKWRBLJXpnb9h3K0NfkEgVeud8+FopcxS9TDV65+fw
cvaEPb98DXrnP7CFvs5d/ou16J33WVAt2MYofF66Dr3zWfiom9a1ZoF69M7G
sGnSSO3MdhK9cyC8Y+u6F2vmSfTOZfDSGa7MnNsN6J3fwKmvYxWiOhrQO9NY
Us2erOj/8UgjemdeeFNC79EGv0b0zvKwRA5LqdBMI3pny9XHLWkn5c9Q0DuH
w++9nWs5IinonWthOa+Fq1mzFPTOY/ColOyf8RNN6J03WFF92ag+t9KjCb2z
ANy9pbJuc28TemclWPcW3UT59mb0znawhVRmifu1ZvTOcbCbpmOsRFAzeucm
+G/0IY2w9mb0zh/gn+rTaxT+NqN33mpNtbGbktP2wy3onY/BQSujwbHKLeid
b8CGIk4cSXYtxCantc7weYee+OHwFmLfq8BUuFzfNnJ3QQvx31H2Tlg50ejp
ocYWQs4v+ws8Pvdw9/fuFuLWlNhOG6qvcr3Uufu0hbCSbpGAY74V7EscaCG8
opW04Swt7frczhYi5seoB+yxX1ioua6FKLxkmgM/O9sexZ/TQrRkLvbDIXwR
F/4LbSGG1j7+BZdfd1o4Y9tCfL65k+3e6v3VqIRCfT9rK5JPw0VZDx14hVoI
1m3CBvDijfnXk+taiCMmdX7waZfNITZDzYR0y8Vi+KtvVqhcdjNxfd+rl7DO
IwPFp3bNhPEDvWV4pbT31r1zzYTTs28HbPF++Y6WBzI1E6ECLhfg2NldvNav
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
2HNGm+q73XXoOw/CbfucHEbV6tB3ln4mMGeqsJ+IWB36ztrwk++eD1701qLv
bAOTupZOy4pa9J394APxHwOt79Vi7/wIjvg7odHgUIu9MxsWn57W4UbVYu/8
Hf4hNyK8V7oWe2e5dly//yt5selNDfbOevDiJSctl+XVYO9sC2+tm2Q85lOD
vXMQvOXIeacMoxrsnZ/Cih/GTZWka7B3boWzFJ/vsX5ejb3zCCyyynjdngfV
2DsveI7n85DJzx821dg7b4NvWpouM1Koxt7ZAX50YcbInQKCvfMd+MLTjnWv
VAn2zoVwaJCp2OWYKuydO+HN0kenWIhWYe8s3HEB/UOZQ05Oldg7q8C1BTIL
cporsHc2hvXHHQclV1Zg7+wKW8651XbhWjn2zpHwSMFoMvt5GfbOFf/u35R7
YEylDHvnXjja25D+1rkUe+epLwR+HfvgqGN+CfbOK2H6rCUtrl+LsXc2g9tu
zyPtqsXYO1+EyeVT5leti7B3jv/3+51Nh3cHFWLvXAdvOvqnZ1lOAfbOH+CK
0sD2n9x87J0lOwW+c/fnlMSPedg7a8LfF5+vmCuUh73zQThjhYHJfslc7J2v
wJ/qZ3N2yuZg75wKb3rCOz+6Kht7ZyYcuLO2/L3KY+ydv8Avqz+MXZqZib3z
7C6BjYbn7en4nI6980Y43dt4+6baVOydj8LTPI5u7b+RjL3zdbgn4pX6IoNE
7J2z4KxkGTH393HYO/PgvPTla6TWRmPvPAyfiD02u/T0Peyd53fjfJiaFqIm
cxt7563w4IhR9I1V17B3PgWfvX9ug62RO/bOt+CGt+tYJyP1sHfOg5+9TLat
qDqHvvNz+FTdq6gnz/zRd/4Lu1RnCpu6hKLvvLhHYHUpjfqi+/fQd94Bm0xV
bL81OQZ957Owom1AwFrfh+g734Pn+Fi1/xeYhL5z6b/7K4sYd+1PRd/5Jax6
YPqHdNVH6DuLvBT427WWLVJTstB3Xg4rLnN1SX/3BH3nPTDtxRqFEbsc9J0v
wImbrTU2dOei7xwD20sq+DSa56PvXA2nWbVtOMwtQN/5HXzFf+XOVOMi9J0l
Xl1A/8VKaTuzGH3nNbDs5+S773aUou98AD7OVb+5kFGGvrMXXNYc/S5kewX6
zomwkfN7s1JaJfrOdHiqxg/HtdsI+s6DsIfyZ3/qWDX6ztKv8X6Ky/w5Y0EN
+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
9F4mwyplq14eNmYS2yjHRljcOMXz7YNGcvHbn0/wSbEXYlvfM8gt40AZOYHn
/1qzs0KdQZLSZHTgP0m3qTQXOikSSjoCbzj8tdsqm0ZYVquuwYdcLDN03zeQ
VwUVmXDgIrZegWID+SG5kwuX7znXoW5aT8Tt23/CHvfcO+f71xHFOlv5uQIX
PPM++iW3lmgofNsM5zw/2i3/soZs97hiBx/5/rVZSqKGWPOm34Rv1D27qqdV
TVzUYnJh71Xb8xbVVpFr15a2w8za3NieOZUk+mXBGPyspJbucbacZG/YqjQP
t5/teZBCKyV1d5u3w286T+2VXFRC2oesnWANF/+bu32KyOD2gfB/jqG2fuop
IMJJHiX/vFzroa1+Ppk9JtIDU/pzFWQf55LlB8InywvcdTIyxWxuDqFyFqjC
4Q+7A/JlnxCzaU92w/NE9314KJJJTtvquME3pzbp3hlLI95V9GhY7/YzF6/x
ZBImZ05gKSntwtXTEknaud4+OFRv8McDvQekvMl52nyBt4wIb4i7HIG98yp4
8t4dleL0O9g7m8NjOz8p3TW4jr2zJ/x+/Fae3nJ37J0T4HWhjjln8l/pKd3W
oMFvJT9vrpF1R9/5I2yxKz4gXOQ6+s4zFXD93yga3HPpDvrOWrCmuqTc7k/3
0Xe2hn1YVssMj8Wi7+wLf1gqtkLeIQF953S4TrZ/16Ilyeg7s+HeiYyl81+m
ou/8Dd5ss3Bsa+wj9J3lFAX2WnulIMYyC33nTbA4Z673D9ls9J1PwN4BF/p/
OeSg73wDph0y+HORmYu+czZ8+0KcW7xqPvrOLfCLlIimz4EF6Dv/gR1mJAX0
9hWi77xgAW7/+0arS/Dzq2/wfQM43iHg9bqof31nB/j6jNnW1FAp+s63YacK
eudWvXL0nQvhDwY/zt8IrkDf+QU8Fv772kFeJfrOQgvd8e87DMmKSBP0nZXh
vq+vhD4rV6PvvAs+KSontIRUo+/sCteL8rdY7q9B3zkC5lQ3r9z1tgZ95wr4
YdfJ8AbXWvSdX8P0+OTymD+16DtPXSRwlJXesQyvOvSdV8DTxa4e7hqpQ9/Z
FA7I3ais5laPvrMHXLLRryf6fT36znHwk6shqzdYNqDvXAsnTnZMV65rQN/5
PaxX215/XZWGvrOkEs6fEcuqb4XQ0HdeC7/fd2OS2wca+s4HYYtLM5wu6dPR
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
jELH2g==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.146474705625*^9, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1463., Automatic},
  Method->{},
  PlotRange->{{3.1465152*^9, 3.14910684*^9}, {-0.113, 0.529}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6568774814378333`*^9, 3.6568774974977517`*^9}, {
   3.6568780594338927`*^9, 3.6568780750097837`*^9}, 3.658612967217928*^9, 
   3.6586129992327404`*^9, {3.658613034505372*^9, 3.658613068307002*^9}, {
   3.658614603170374*^9, 3.658614668908219*^9}, 3.658616182789409*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 818},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 245, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[827, 28, 107, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[959, 33, 4827, 97, 473, "Code"],
Cell[5789, 132, 2250, 30, 31, "Output"],
Cell[8042, 164, 2253, 30, 31, "Output"],
Cell[10298, 196, 2328, 31, 31, "Output"],
Cell[12629, 229, 3747, 62, 126, "Output"],
Cell[16379, 293, 509, 11, 21, "Message"],
Cell[16891, 306, 509, 11, 21, "Message"],
Cell[17403, 319, 511, 11, 21, "Message"],
Cell[17917, 332, 511, 11, 21, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18477, 349, 112, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[18614, 354, 11848, 238, 1733, "Code"],
Cell[30465, 594, 506, 7, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31020, 607, 120, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[31165, 612, 9799, 224, 1233, "Code"],
Cell[40967, 838, 80, 1, 31, "Output"],
Cell[41050, 841, 154, 3, 31, "Output"],
Cell[41207, 846, 80, 1, 31, "Output"],
Cell[41290, 849, 154, 3, 31, "Output"],
Cell[41447, 854, 178, 2, 31, "Output"],
Cell[41628, 858, 168, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41833, 866, 2193, 61, 293, "Code"],
Cell[44029, 929, 1636, 34, 126, "Output"],
Cell[45668, 965, 506, 10, 21, "Message"],
Cell[46177, 977, 492, 10, 21, "Message"],
Cell[46672, 989, 492, 10, 21, "Message"],
Cell[47167, 1001, 508, 10, 21, "Message"],
Cell[47678, 1013, 494, 10, 21, "Message"],
Cell[48175, 1025, 494, 10, 21, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48718, 1041, 110, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[48853, 1046, 1337, 30, 93, "Code"],
Cell[50193, 1078, 664, 13, 39, "Message"],
Cell[50860, 1093, 473, 10, 21, "Message"],
Cell[51336, 1105, 716, 13, 39, "Message"],
Cell[52055, 1120, 714, 13, 39, "Message"],
Cell[52772, 1135, 716, 13, 39, "Message"],
Cell[53491, 1150, 530, 11, 21, "Message"],
Cell[54024, 1163, 663, 13, 39, "Message"],
Cell[54690, 1178, 472, 10, 21, "Message"],
Cell[55165, 1190, 666, 13, 39, "Message"],
Cell[55834, 1205, 527, 11, 21, "Message"],
Cell[56364, 1218, 473, 10, 21, "Message"],
Cell[56840, 1230, 536, 11, 21, "Message"],
Cell[57379, 1243, 605, 12, 73, "Message"],
Cell[57987, 1257, 605, 12, 73, "Message"],
Cell[58595, 1271, 583, 11, 73, "Message"],
Cell[59181, 1284, 536, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59754, 1300, 114, 1, 31, "Input"],
Cell[59871, 1303, 239, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60147, 1312, 3850, 93, 533, "Code"],
Cell[64000, 1407, 759, 14, 39, "Message"],
Cell[64762, 1423, 807, 14, 39, "Message"],
Cell[65572, 1439, 566, 11, 21, "Message"],
Cell[66141, 1452, 757, 14, 39, "Message"],
Cell[66901, 1468, 807, 14, 39, "Message"],
Cell[67711, 1484, 757, 14, 39, "Message"],
Cell[68471, 1500, 622, 12, 21, "Message"],
Cell[69096, 1514, 809, 14, 39, "Message"],
Cell[69908, 1530, 623, 12, 21, "Message"],
Cell[70534, 1544, 568, 11, 21, "Message"],
Cell[71105, 1557, 568, 11, 21, "Message"],
Cell[71676, 1570, 629, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72342, 1587, 853, 24, 73, "Code"],
Cell[73198, 1613, 574, 12, 21, "Message"],
Cell[73775, 1627, 574, 12, 21, "Message"],
Cell[74352, 1641, 576, 12, 21, "Message"],
Cell[74931, 1655, 545, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75513, 1671, 135, 2, 31, "Input"],
Cell[75651, 1675, 480, 10, 21, "Message"],
Cell[76134, 1687, 477, 10, 21, "Message"],
Cell[76614, 1699, 479, 10, 21, "Message"],
Cell[77096, 1711, 536, 11, 21, "Message"],
Cell[77635, 1724, 1571, 36, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79243, 1765, 732, 17, 31, "Input"],
Cell[79978, 1784, 189224, 3114, 909, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
