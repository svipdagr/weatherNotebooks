(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    112030,       2132]
NotebookOptionsPosition[    109785,       2067]
NotebookOutlinePosition[    110126,       2082]
CellTagsIndexPosition[    110083,       2079]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "r", "=", 
    "\"\<C:\\\\Users\\\\Sam\\\\Dropbox\\\\Irene\\\\Observed Flow\\\\\>\""}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6702306723768187`*^9, 3.670230694488084*^9}, {
   3.67026391004296*^9, 3.670263946183325*^9}, {3.67026401184124*^9, 
   3.6702640148520455`*^9}, 3.6702661042872944`*^9, {3.6702661360579524`*^9, 
   3.670266158638193*^9}, 3.670575312792099*^9, 3.6705866188917713`*^9, 
   3.670587044684125*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s1", "=", 
  RowBox[{"hecplot", "[", 
   RowBox[{
   "\"\<Irene\>\"", ",", "\"\<observed\>\"", ",", "\"\<observed\>\"", ",", 
    "\"\<greenville\>\"", ",", "\"\<flow\>\"", ",", "\"\<only\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<greenville.wmf\>\""}], "]"}], ",", "s1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<greenville.eps\>\""}], "]"}], ",", "s1"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.669084302893598*^9, 3.6690843339896727`*^9}, {
   3.6690846337625146`*^9, 3.6690846422901297`*^9}, {3.669088170365308*^9, 
   3.6690881808489313`*^9}, {3.669088750085299*^9, 3.669088753622307*^9}, 
   3.6702290718682747`*^9, {3.6702306982292976`*^9, 3.670230702836561*^9}, {
   3.6702307448939667`*^9, 3.6702307636710405`*^9}, {3.6702309371929655`*^9, 
   3.670230939864118*^9}, 3.6702639100585604`*^9, {3.6702651603898287`*^9, 
   3.6702651664426394`*^9}, {3.670265625460645*^9, 3.6702656272234483`*^9}, 
   3.6702661043028946`*^9, {3.670266136073552*^9, 3.6702661586537933`*^9}, {
   3.6702662845661325`*^9, 3.670266285985735*^9}, {3.670266384888709*^9, 
   3.6702663865423126`*^9}, 3.6705753128121004`*^9, {3.6705821100198784`*^9, 
   3.6705821146011405`*^9}, {3.6705839505441504`*^9, 3.6705839536443276`*^9}, 
   3.6705866189147725`*^9, 3.6705870445361166`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.670587070365594*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.6705870705076017`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.670587070693613*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Table :: \
iterb\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.6705870707926188`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\\(\\(-1432\\)\\), \
13800}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a positive machine \
number, or an appropriate list of range specifications. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.670587071152639*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\\(\\(-1432\\)\\), \
13800}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a positive machine \
number, or an appropriate list of range specifications. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822782324996`*^9, 3.670583976221619*^9, 
  3.6705866458623137`*^9, 3.67058707151566*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {GrayLevel[0], PointSize[0.003666666666666667], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
JajvZw1H8L6th+wGu56jf5ivjRzH+633yPp9QOOgdX6oUWQX/l7pep7zob5n
yPrvqfALzEecByNk/fdQ/QrOD3t95Czi4ckx/lcq/xaS3UuUvECOgZtf5PxX
KXs5cvpqJa99ifODk+TxLsVlL/O8uVrZO5ecu0bJJ8jBpYoDQ9yva5S9gTmG
3PsK19+tuJuchLxIHl2m7M1/lftxrZKPkiMJxQ2vGS5CXjHM+a9THCdXQn+K
nEgo/0L/Z7FzHSL7rlfse53xgbyXHL9e+bfGG3J8Ozlwg+I8efR6Za9phPHH
/FlyFPrVf2M8exQnyEXY+5WchH7kTebXjYrH3rTmU/X9lpy/v4QrRy3/nGsn
OQR739nsXFv+znwDD/9dxif1Dxm/8re5H5DH3rbGO/5Nvm3FU616TOoPjkn/
at6R8bjxHWnP9a7c77Z3rXg79sbflfvV+J7Mpwy5a5niqnHeDxPK3lU2O9eZ
Eg6/z/mvQ32ThzFf/QfUR372fSD99Xxo5a+q7w9lPAofyv1onpDxr/1IcvIj
uV9lH8v4Rz+W8Z0g6/wNfGLF27kOfGLF0/Fvi7zcv+689K+Yt/bHsdf6qfRn
9FM5vuEzKU9/Zq3Hsbfh5zJ/459Le1OfW/Op+p6U8RialPvv+6e01/tPKx6q
vr+Q62//QsYr/4X0P/ul1K8uSPuJgjXe8W+2RB75l8yHsX9Jf/1fGZ7G+bic
nMH5V/m1lX/OtZPsX6bsTdvsXFumeH5g/DDZg/O57hvG+1pl7y6yB/rl31rn
vXONkZ37i6pvchb3o+B3ZNxfBslJyGumWS+4v91IDuv79b+pj/tVG7kG3Pg9
44H5M+QU5FU/sN6XKv+6yH6sd4acwvrCM/L+NkL2dSv/dvtR3n/6yF2Yz/OT
dX917HWQQ5AXyBHEr/lnjsd8uZ9l/LcvMn8gT5IrsZ9l/7Hul6q+yfXIhwmy
zo/AL/L+O0CuWYr6/rXkfk0OI55FchD+j87SPuQN/5X7kSYX8DxS8T/GB/sb
J6eRD1PkIDj0G9fbpfx7mTwMuc+pkJX+w14vOQt77lUMp7GednIR/ubJeXDT
qoad5x3H3tPkYcirV/OL+CTIMeTXLLkL8YmU0R/oj5FTYP/vyIj/8t/J+StX
p7/Y705yXtfzGoandT2TdX3XuQ0ncB6kyAWML1+T/kM/Rq5EvkyuaY13/Dts
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
H8DevKLU7y/hyv9Ini7hll+s+Zzr8C+Wv45/db9K/1O/yvHls3J8bNbyV/WD
z1rxda7B//L+hfUM/lfGv+Z/cv4e8hj0Xb/J+dp+k/be+0360+jaR3CGrNdX
tYqUd5Hvgb0ZchQcXnWfOX9UfZP1/tSvto9YX99qcnxHmZQXyvYR62v+nWXf
8S/3O6lfu7q0l1xdji9bw/Dqw+gHX0Pan1hDrjfgttixN+C2xjtX75py/u41
pf3imtLe/LVk/EbXkv43rC3XlyafCXsV5VI/Xi7nmyqX9o5ZR/o3tI6cz7eu
lLvXk+trX0/On19P+tfkkeOzHulf9foynglyL/z7dX05PrKBJVf/3w2kPf+G
0r/+Eq6sMFwP7qyw5lf94BVy/S0byfUNbyTt1f1e+pf6vZy/fGM5PkaO6vou
kQcr5fhB8pvgnj9IfdcmUr9tE+nf+CZSv3FTqZ/ZVMqrqmT8r6qS+jNVlv/O
NbyZJXfsjWwm41G/uZy/b3Mp92wh479wC7m/hS2kfrPX2k9V3165v7V/lPFK
/lHuZ9mWlr+qvreU9iZKOLCVHO+tlvHorpbyIrkc8W/dWvo/WsIN28jx6W1k
PDbcVq4vvq3Un9pWxiNUU1LPNTL+vj8Zdv5yU6v8k4zHGtvJ8e3byfXmbbmq
7+2lPLu99Le6VtpP1Mr1/Vor9SN/lvON/VnuZ/8OMv8qd5Tzd+4o4zG9o4xX
i0+OHy7hur9I/+76i5y/fCfpb2wny1/H3uRO0v/gzlJ/sIRr6uR5fCNZn4eu
XaT/bbvI+I/vIudr3FXqZ3aV+1m1mxVPVd+7SfkMWZ/P4fqS+/PuJfW8u9T3
7GHZd/zr2EP6Uyjh5j3lfLk9rflUP3iD3J9kg9Qv28uSO/aie8n1TJRwYG+5
PwN7S3tbzJPr7Z4n11e0WdW3v+R+XcIN+0j/0/tYclXf+0r9+L7Sv6kS+dB+
JfXcKLm30fLf8c/9V2m/vYTzJdy0v7w/Pb2/jEf1AZITB1jxdezNHiDniwRk
fo6VsP9AaW85eeXz90Ey/p0HyfVNHyTX33JwSX0fvI/Y/7omud93Ncn5yw+R
42OHyPmDhxrWz/ODh8rxNYfJePQcJuPlCsr52oJSPm6z6gc/XMozh0v7VUdY
8zn2uo6Q+jNkfZ6Ej5T2R46U8d+tWa6nr1nO5znKmk/V91HSn8JRcv+aj5bx
zB0t17f9MdJe8hhprywk/Z8o4cCxkgeOtfxx/PMeJ/3pPk7OXyTrv4daj7f0
VT/48XJ8Q4tcb7pF2qs4QcrjJTx1grQXOlHm48tk/fev7yRpv/ckGX93WMrb
ySv/vg7L+DSdbPmj6vtkGf/qU0rq+xQpj8yX9sbmy/X4W2U8+lulvPJUub7O
Ep4+1fJX9YOfJscPnybXV3e6jEfqdBnv8oicP1bCkxEZj8POkPYGS7jmTGv9
qr7J+v2L6yyp33aWtDd+luW/qu82Kc+0yfmqzpbzzZRw+BwZjxHyQXg/Un+u
lPedK+15otJeR1T692VU2ms+z7B+/5Oz2bFXe77UT54v7ZUtkP5EF1hy1Q++
QM4faJfjB9qt8aq+L5Dy7gvk+OIFcn2tF8r1vUXW76caLpKcvkj6G48Z1u/n
pmJyvaGLZfyHbHapf8VOcm8Juxda/qt+8IXSfn6h1G/qsPx17GU7pLz6Urme
xKXS/9lLpb3TL5PxG7tM6vsvl+vrv1zKK+OG9fvmzriUT9us6vsKKR++Qvpb
t0jKyxcb1u9/Y4ulv5Nk/T442GlYv88e7LTkzrXmSinvudKSq37wK6X9tiUy
vuNLLH8ce41XyfkzJVzVJePTRZ7C+/8fSuThqyWPXG35q+r7GhmPPvKzLyv2
LDWsP6/oWGrpq/peKudv7pac67b8c6lvpcn5ypZJji6zxjv+TSyT8wWuk/MN
lLA3IeO/NCHHFxPSXuv1hsP4/GWUrD8farhBzp8mXwyuuNGKl+oHJ58K+RRZ
f14U6rHsq/omv/+SkvtukuN7yU1g982G38LnbQvI+vO9PHlfcNMthvXnd9VJ
w/rzsURSxmOW7IF/kVsNX4LxY+RlYP9thvXndf3ks+DfxrcbvgfyTvJ+4Gmy
/vyxpdew/nxxuITr7jDcD07dYdlX/eB3Gl4b64mRW6A/Sa6DveBdhvXnr4Pk
58A1KcNF/fl1ylqPqu+UtV7n2na34Vf159fkByDP3GN4EvKqew1/qz+vJj+O
z8NnyPrz7HCfYf15/0if9L/+PsObwr97yddgvOd+w/rz+g7yw7BXIOv+geYH
DOv+gBzZDa5N8/6Fz/tvSVvzOdeyBw3r/pAoeWPYmyAfCf3AQ4arwAPkGd2P
styyr+p7uZy/SL5N96P0G9b9HA0PG17Zj0LW/SAVjxj+D/pB4o9Y/jrXKfJF
uh/lUcNZ3Y9CfgT9JztmDC+FvJes+1Xcj/F+AHvt5K/QH5Mnb6b7UR43PIH+
oSx5Puxt9YThPaGfIJ+I+WbJ76L/JzJgOAL5GDkP9j/J+IP7n7TGq/p+iuuF
vJO8BDxNXhc8/LRh3W9Vl+X9BOtJkR9Cf1j5M4aPgzxGTun+smcsfecafNbw
Js+jH5ys+71qnjM8rPvLnrPsO/Zcg4Z1/1gb+TPdX0bOgBufN+xC/9Wj5F7d
b/aCYd3/1kUeeh71/YKcL7xC2hshrw6uzxnuRH/fvWTd3+d5kecBuIOs+xGb
XzKs+w9z5Ci49mXD36MfMEm+E/2QZUM8D8FRcgvGT9is+sFfkfoD5COg733V
cAj9mN1k3f9ZJJ8Cbn2N+az7R8m6/3PPYdYT5Gnyyv7R/zP8xTOob/IL6H+d
Ij+C8aHXDe8E+dDr1nhV328Y/gXyXnIr2D3C/APnyS5w09+YL+jfzZJr4F/1
m8xP6CfelONnyUdjfOQt5ksW/eBvWfM5V/8o8w36/eTt0P9c+Xfe39Cv3Ek+
DTxN/h7c8g/D5ei3fo2s+7/r3jYcR793ivwq+s/Lx3g/hDxGDun+cPK76EcP
vmN4A/SfP0duhrzmXcMvgXvIS8Bt7xmeRn/9ODkCeeO4JXf8y5APgrzqfcM3
Y3wXeSfwDPkf6P8/6QPDut9/hLw/uP5Dwzc8gX5wcju+L+CZMKy/f9BBnsX3
Dwrk1Z9AP/hHUp4jfwyu/ZjnAb7fkCRvB3nZJ4ZXBUfJRXxfYoL8OL5/cUBe
ygfIr4K9n7I+wUXyB/r7HZ+xPvX3O8gz+H5Iw+eG/4fvh6TJt4ErJg2fD46T
D8qgH5ychzz0T95/wEPkWtjzfcH7OeS95MSjit1fGu4Dt5Ozj6IfnNwBeVPB
8K6YL1uw5Kq+/8X8g36CPAOeJXfj+zSRr6zxqr7JDZD7v+b9BtxP1t/X6ZyS
802TY+CWbyx2/Bsmd+H7P3XfSv0UuR7y8u8s+6ofnDzbr+ST5EF8vyg4bVh/
/2iQ3A/9mn8zv6DfQw5A7vrecF0/+sG/l/JxciPGN/7A82g56vsH6U/VjOE0
uIusvw81Q/YtR33/aNiP71eNkLPg+p+YP2DPz4Yn9Pe3yDOQF8jND6EfvGh4
GPo5sv4+WO1/DOvvfyXJsQfRD/4L9xvy6C+WXHlBHk+jH/xX7h/kA+RMWrF3
lvsN7iaH0+gHt9m5tv6X5xl4lNwEew3/M1x4QMnTZC+44jdLX+0a2QN7X5MD
0A+59l3JLeAhchLcu4rhOL5/517VcBrcTu65H/3g5DbIm1aT47OrWfrOtbrM
8Mx96Acvk+NnbblzjfzO8Mh96Acn6+8D+lc37Mb4fnIe8so1DPthbzFZf99w
mlwLbnFb86v6JvdBXrem4QF8nzFFroS8fC3DWdi7iKy/7zhJ1t+HDK4tx9eU
G+6GvIfcAHatY9jVh35wcg3k4+TxexU3rmt4CpxZ19JX/eDrGW7F+C5yBXiG
PHQv+sE9ln21K+QuzF+/vuFqcB+5/x70g29guPMeJe8o4QI5dw/qe0PDAchz
5DZ8f7W2Qo5Pksthb7WNDBehH93IkjvXCfIk5AO/l3LvxsxnyLvJIXw/tlgi
b600PAgerbT0nWvDHyxW/eB/kPoVmxiuAsc3seZ37E1tIucLbcr8wfd3h8gz
YF+VtHc7WX/f172ZnK+d7IO9vM3OtWlzw80Yn91c+lu9haWv6nsL6c8suRH6
ES/rFXL/H6W8v4Qrt7TsOf51binjP72l1G/ZiucPeNhm1Q9eLdeXqpb+lm9t
6Tv2YuRR6E9uLeMX3EbGY3Abyz/VD76t9LenhF01Mv5tNdK/8Ro5f+OfeD6D
M3+y1q/qezs5vous821mO7meke15f7hHcX2t1O+rlfH3/Fn63/FnGe9CCTfv
IOtzBVnXX+2OUj9J7sd5UOaT/kR90t+JEnngL7y/wd4TZP39de9O1nnjXLvJ
Udgr7iT1W3eWPEpuwnnXUGedf6q+6yz/nWvFLpLju0j7oV0tf53rELke8/t2
MzwG/3p3k/646w17oN9eb63HuebrrfGqH3x3w2HoZ3eX/lXvYfnj2EvsYY13
rrN7WOt1rpE9pf9je1rzq37wBulvf4Ocr3Iva72qvveS/k3vJfe7ZW8pHyZ3
Yn07zzPshX5qnoxnuV/yJHkW+sF95P1tcB/L/iqqXKX/PfvK9bv2k/fjNptV
P/h+cv7GRsMZcIYcxP2+6q9S3kXWzwcz5Bg4vL/hFO73b+xvzadWfYBh/TzT
R66BPU9AyjvI+nmhUCJvPtCSq/o+UOrXHmR4GJwk6+ev6MGG9fPHxMFSP9Bk
rc/xb4BchvHeQ6z1OtfuEi4eYvmr+sEPlfEYPVTO13CYpe/YS5P181lFkPdf
6MeDcj+mgpa/qh/8cLm+ocOlvu8IGf9eci/2232k1G8n63zIHynjf3CzYf3v
c2Sbrfmda/VRUj57lJRHjjasn/fGyOOoT/8xcn/7S7gyJLkzZO2n6gcn6+fT
lmPlfgwfK/e77jjDQ9BPHSf9LT9ecux4ud+fk3U+BFtkfg22WPOr+j7BsH5e
7zlB7r/rRClvO1Hu93snyv1qPEnmS+Ykyz/n2hWW882QdT6GT5bnwcjJ0p/6
U0rquYQ98616U/3gZJ2PBfKErudWy3/HXq5V2qs9Vc6fPFXGs+w0az9UP/hp
Mv4Tp8n4BE63/FH1fbq0543I87Q7Yu2Xcy2S9f13/hny/jxK1vfHhjPl/aPi
LKkfJ+v78xQ5g/wItcn5hsgr79dny/tpL1nff9c4R66n/RxpL3+OjEfTufL+
mSXr+qmOyvGJqLUe1Q8eleMj58n73dh5VvxUfZ8v19N/vox35QI5X+cCK56q
vhfIeLa0y/NmuF3GL3WB9Kf8Qnl/jJF1Pk5eKOcLXiT9GbxIxrcmZtWP6geP
Wfup/nOxtX7n2nax5Y9jb/xi6U/jJVI/c4n0v2qh5Z/qB18o4zlTwuEOaW+k
Q8an/lKZT32XSvuey6zxqr7JOh8Kl0n95ssl18YlJ8n6+absCsufVdS/mmdY
P19OXCHXE1gk62uA3It4bLFY7l/3Ymm/aMsde62dUj5K1venhiulvfSVMh4b
LpH7HV8i92uKrM//0FVyPUNXWXKX+ld6pf+9XVZ8VH1fLf1tL+E8WedT9ho5
f/VSuf8JchP8m10q7Ue65Xkw1i3n819rrV/1g18r11e5zNof59pp8yrqVwOk
vZbrpP4wWddbXcKyr/rBE3J/yq+X8YiR9fufyRJ58IaS+r5Bzldzo5WPqr5v
tOZT/+kxrP9+aOuR8zXeJNeTIeu/j6tutvQd/7rI+v3SDFm/rwrfIvdv5BbL
vuoHTxrW75v6knK851ar/hx7HbfK/SqQO6HffJusx9xtllz1g98u50/ebs3v
XMt6LX1V3+Q6yCd6pb3AHbJ+Bu6w9FV93ynHd98p4128U44fvUvuV0NKcjpl
rc/xr+Lukvt1CU/dLceH7rFY9YOTdX757pX+9ZL1+wd3nzx/2/tk/PJ9Mv5N
91n1rfrB75Prrb5f2kvcL+M/e7+MX+QByWNk/femP22xqu+0lFc+KPOt80Hp
b8tDUj78kFxf3XIZ/9RyqV/eL+3FyLo+Jm1W/eAPy3ocJOt6q3nEWq9jr+cR
KXc9ali/72l7VNobJ+v3fftlpDxD1u8Hqh6zWNX3Y1J/hqzf94UfN6zfv408
Lte32xOWfefaR9bvrz0DhvX7s8KA9Kf5SRnPHHkS799qn5L+JZ+S8Sl7WtZr
lBxAfnz4tLQfyMr5BrLW/jj2vM9I/7qfkfpFss6H1mflefDWs1Le8Jz0L/2c
jH/FoLQXJ+t8nRqU+x963lq/qu/n5X75XpDx6X1ByttXGHaD8yuseDvXppy1
36uorjbDEbwvrn5R7neihGfJVfDv9JdkPoy9JO35XzY8k0I/OFm/v68cktw5
ZM3vXKeHrPWofvBX5PqGS7juVSseqr5flf6Xv2ZYv0+OvSbjP0keSaG+h6X+
YAnX/J+Mv+t16X/b6zI+469b/jj+Nb4hz8PMG1K/akSur2vE2j/VD07W52/4
b3K9I3+T9urflPnTR9b57HlLcsdblr7qB39Ljm8elfo5ss7/2r/LfEj+Xca7
7B+y/qJk/XzxYYk88Lasn4G3LXvOtXtM2iuWcOs70r9R8sr79btyvvS7cr0V
78l4XE7WzyNT78n9DI1b63XsDY3L9fjel9z7vvTX/YF1vql+8A+kfr6Emz6U
95vshzLe1RPSvwRZn/+zE9Le6R/J+cc+kvP5Pza88vOtT2T8Oj+R+tOfWPFz
/GvJS/3hvGVfefmpjH/qU8sf1Q/+mVxPjKzzcfIzK56OveDnMr6Dn8v110zK
/eyZtPRVP/ik9Kftn9L++D8t/1V9fyHrMUPW50XVl5K7vpT2fiDr8yBcsM5T
5zpSkPP3/UueP56vDHdAv4Pshn8Fsj7Pmr+W53GOrD/frJ2S5/8tZH3/KPvG
cC04+o013rE38Y30J/CtHD9A7gN7v7PmU/3g38n5i2T9eW7rtDVe1Tc5e5eS
N/yb9sBp8vSdiiu+t/RVfZPLMP8U2Q8O/SDlvhmuF/P3zsj1un+01uv4107W
n3/nf5T6TT/J+bLkBPzb6me5/sTPMj6zP1vzOfYiRak/VpTx9v9H7kf/f+R+
b/yL1O/8xZKrKP4i7bX8at1Pnevwr3L+ulk5PkVOYL/X/q/Mxxg5C54k63oY
/J/Ur/lN+tvzmzV+FfXf/YR+G1nHZ7yEG1cxXIn4P0rW+1O1qmGdX11kZ78c
ezPkFPItvJrhGHikhOvLpL17yUHIPb+z5CrqZD/sFciZO5S8eXWpn1td+lu7
hqWv6nsNaa/MbdgFjpK7MH9gTckDJexdy3CgF/3g5HHIi2tJ/da1Ded6FY+S
a+5EP3i5HJ8ul+Mr1rH8d+zF15Hxn1rHms+5htY1HMb4IbIH8dhxPcMF+NNL
HsZ4t0fud7tHzp/3SH+b1pfxza5v2Vf1vYH0J0FOwv7sBnJ/xzaU+v4KK97O
tZ9cfwf6wTcyHMK/t99JHgVPbyTHt/ye+XUb+sFtdq51GzOf9L//v7Eld+yV
V0p7sUorvs51kqzrKfgHK56qH5ysz9uaTWR8ezax4qHqe1NZT21kfd6Pl8gb
q2T+P0rW+V61meSuzeT+hTc3rH+/YGRzub76LSx7jn99ZJ3fHq/czw6vtV/O
tUB28k/1g/9Rzp8j6/yq3dKSO/aSW0r/y7aS+tGtpHxiKyu+qh+8Wp4fA+SV
9b21tX+qvreW8xe3lvO3biPjP7qNFU9V39vK/U2TE7BfUSPjP1Uj9UN/kvIh
cgrx920n19O7ndR3by/j326z6gffXsa/qVbWX5acxHlX/WepnyDnUS+zZF1P
kR2Yr7eiH5w8fKuS+3dkPtyiuJ9cn0R9++hPUsk7yRnwdAm3/IX1rn/fgzwO
ed1OklMlHNuZ+wn/JskucLCO+QL/BskpyGt2kfP1lLBrV3n+nLWrjNc4Wf/+
SONuht23ox+crH9vpKpe2u8q4Zl6az7VD767XN/I7tb8Kup7yPOubw+5X549
5X53lHBhT7m+Ixukv7kGqV+7l+EsuGxvuZ/RvWX8J8gexD8wT8Z3gBzH77l4
/bwfgLttVv3g5DTkrfswHuBRmx17Dfuyfm9S8jQ5Aq7Yj/mO36+Jk/03oR+c
XAN5qJH7AR4i529Cff/VYufa+1c5v3t/xg/y9v2lvU/2l/41HcDzHevLHmDp
q1UFpL3ZgBwfOZD7iXiMHSjt+w+S8/UfJOerPNiaT/WDHyzXM32wjG9Lk4z/
cJPc37pDJKcOkftZfqjFqh/8ULm/k2Qvzp/gYTzvbkF9k0PQrwnK86onKOPp
OtyaT9X34VJ//HDpX+MRVjyda9WRkruOlOubsdnxL9ws7Y80y/nrj7LOQ+fa
R9b5v97Rcv86jpbxLxxt7Z9jr/kY6U+OXAn92pAcnwxZ+6v6wY+V+R4lj+P3
mibITn2o+j6O+4Hfixog69+D8h4vuZvswe9P/Ux2wV5rC+8v0B8l69+nSp8g
87HiROlf/ETLH8e/qRJ56CTef3U9nyTn84WteKl+8LC1XufqPlnGs/1ka38c
e/mTpb9Np8j5s6fI8dXzrflVPzg5Bf3Z+XJ8pNViVd+tUu4/VY7vP1Wut/I0
K76qvk+T/k6XcMvpcv11ERnPVETub/kZvP/eiH5wm53rJFn/nljwTOY/8meQ
XLgB/eBnSf0esv49NFcb6+l69IOT45CPkyP4vbXGs3m+QJ4h699f2/Qc1hP0
u86x5M51hpzF76+Fz6V9/F72CFn//nt9lOctxvfZrOr7POlPx3nSfuE8aT93
vpTXLuB5gd+bSy6w5nP8K2uX46PtcvxEiTxwgYzHExdIufdC6W83eRT2ihfK
/Wq9yNofpVXCDTFrvOoHJ+t8qbhY5kecnNP1Tda/fxe6ROoPXWLpO1ffQpn/
t9usVtUhz7P2Djlf06VSniXr/K++TJ4/icuk/uxl0l7kcsljZH0+zotb7Fz7
S7jyCosde51XyPVOkwvglkVSPrzI8k/1gy/m/Q37kyrh8k6rnlR9k7PIj0my
/r3D4JXMd9TDINlzHep7iayXHnI92HWVrJ9xss73xi4pz5B1/lddLf3pIq+s
Z/Io1he+xspP1Q9+jRxfv1TmQx85Dnuebnn+dHTL+QvdVryda/O1Mv4rrpXy
2mUyP5LLLPuqvq+T52G0hCfIuj4CCZlfTySkvvd6mR/d10t56w3Sv9Eb5PwN
N1rni+Nf+ka5vxU9cr/iJTw1x8iPY26S8R+6Sc7nu5n2rkM/ODmH/HDfYjiG
87l9jiHPk0Pd6AdPGs7g9z6z5Bh+j736VtbTNahvsv590FlyDX4fNHIb77+Q
j5HH8fvv827n+uBPP7ke/lb2Uo71Tpdwyx1y/PAdMh51d8r6TJGL0C+/y9JX
q7zLirfqByfr8z6YkvqDKUvfsVdzt7y/9Nwtx7vukfnURtb19h5ZnzeN98r6
yZC9yP+qPlmPXeQoeKbP0neu4fvk+f8GWedz/f3y/tR3v5yv4wE5X+EBab85
bek7/uXIup5qH5T3x+SDcn1lD8n6PPchqT/xkJwvsFzebwaWy/V4++V6uvut
+dUu9Fv+q37whzke+TFKTuP33xseYT5fgvom5/B7xBWP8vzD7xnHyS78PvAU
2bMQ9Z1hveP3jYfI+ve7fY/RnysUux9nfixS3E5OL1acJyevRD/4E7SH37PP
kjNYT/UAeYniBDm7BP3gZC/qP/Ik/cV8Y2Tf1egHf4r1j3rvJ1d2K658mvmH
+TrJKZwH380xzo+WLOOJ82CYXOxGfT/D+zH2K0XW99vyZyXHyD6cr5/PyfX9
+jl5vg4+J+U9g7L+Xc/L87ntecveKupX86R+4wvy/p0p4aoVXC/O46vIXsRj
ZoWMTzjHeC5FPzjZD3n9i5Qj/n1kL+x5XqL9pegHJwcQ70IJN79sxUfVNzmD
+WqHZLySQzI+Za/I8/Vcsv77ZOIVGf/AqzJ+3tfkedD9mpy/aLPjX+uwnH90
2Nof59rwf/L+kLZZ9YO/Ls/jOFmf51OvW/qOvdAb8rwZekOuxzci7fWOSHtr
/E36217C+b9Je01vynhnyTnsV/Vb3F9wghxchvomFyCPjMr4jJHTyKf+vzN/
9P35H/QH+dVJ9qM+p+fk0G95W+bTMLmA+evGuL/Xoh+cXMD85e9Y9e9cY2Q3
7E2S9XkRfJf64MF35X7UvGfpq35wshv6rnE5vo0cXYb6JifgT+P71Nf1TXbp
+v7Amk/V9wdy/AzZBf/CH8r11E9I7ptjXc8f0X/41/GRlBfI+vmv+WNZXzmb
VT/4JzJfk+SV9Zy39B17UfLKeiaPw9/Ap5SDB8h5xGOLz2Q+dpOnwUWy8zyr
6vtzmQ+jZH0/aJiU/qYn5fo2/KdlX0WJHAZPkYcx39AXcj2+L2W99JKD8M9d
4Hj9/F2Q/uTJPoxv+hfPa9Tn02R9vlZ/JfUTX1n6jr1Zchb6ka9lvo+RhxEv
/xTlOH+WT0n/Kr+R+dH5jdzvafI47LV8K8/L4W+t+Z1r3XfW+ajqm6z/Xiyf
Nqyf32LTlr6K6r95vun3ZWT9/FnzvaXv+NfzvZS7fpDcRtbP4+M2q37wGelf
hqzzu+pHaa/rRxm/GbIb8Qn/xPrGeTdCLnShH/xnwzV4vuoje/G85inSfzzf
dZBTi5S8MMedipv/w/F4vsuRfVehvn9hvkM/SY7CXtmvrDfwBNkNDswyPlcp
Hpi1/HX88/6X/sB+N7kGXCSnMb71f5RfjX5wm51rw2/UR3zSZC/+Hq1wNZp8
Q3zjc4x8nyJ7IA+tYngaz1svk0PYL9+qhnX+95L184V7NcP6eaCdrO/H+dXk
+KYywxHU29Nl1nzOtfp3cr4EWddvZHXD+jweI+v68q9h6Tv+9ZN1PVa66Q/0
O8k6v6fdln3VD76mnH94TTlf3VqG9d97KbKur/K1pb+xEp5c21q/6gcvl/EY
LJfxrFnHYlXf68j1uNaV49vWlf6Or2vZV/W9nvQnQ9bPl1UeOd+MR+5neH05
/8j6Vrwc/+o3MOzS9+sN5HyeDQ3r56kOch7P41+S9fuY5grOh3rIkWNL0A++
EeOD+kySXajvst/TPjhKTneiH5ys/z4MbGy4HvU6QM53or4rKUc9dpOHwUXy
NMa3/oGM8+ctchH137AJ8wnrS5MTkMc3NVxAPKbIReiHqjge58FQlZT7NjMc
Rv33kvX90L058xfnwQJyDvp5sn7f1LSFrLcsWT+vVHsNO3/f/T/Hv7g1
       "]],
      FontFamily->"Times New Roman"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.5227467135000005`*^9, 0},
  BaseStyle->{FontSize -> 14, FontFamily -> "Times New Roman"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"cfs\"", TraditionalForm], None}, {
     FormBox["\"Date, GMT\"", TraditionalForm], 
     FormBox["title", TraditionalForm]}},
  FrameTicks->FrontEndValueCache[{{Automatic, None}, {
      Table[{$CellContext`time + 302400., 
        DateString[$CellContext`time + 302400., {
         "MonthShort", "/", 
          "DayShort"}]}, {$CellContext`time, $CellContext`start, \
$CellContext`end, 604800}], None}}, {{Automatic, None}, {
      Table[{$CellContext`time + 302400., 
        DateString[$CellContext`time + 302400., {
         "MonthShort", "/", 
          "DayShort"}]}, {$CellContext`time, $CellContext`start, \
$CellContext`end, 604800.}][3.522733218*^9, 3.525432318*^9], None}}],
  GridLines->FrontEndValueCache[{
     Table[$CellContext`time + 
      60 60 12 7, {$CellContext`time, $CellContext`start, $CellContext`end, 
       604800}], Automatic}, {
     Table[$CellContext`time + 
      60. 60. 12. 
       7., {$CellContext`time, $CellContext`start, $CellContext`end, 
       604800.}][3.522733218*^9, 3.525432318*^9], Automatic}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{},
  PlotRange->{{3.5227872*^9, 3.525378336*^9}, {-432., 12800.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670229301430405*^9, 3.670229917737656*^9, 3.6702300411397142`*^9, 
   3.6702301874100804`*^9, 3.670230231384596*^9, 3.670230555453131*^9, 
   3.670230772442542*^9, 3.6702308191132116`*^9, 3.670263916017771*^9, {
   3.6702656113244195`*^9, 3.6702656313574553`*^9}, 3.6702658895506983`*^9, 
   3.670266114583514*^9, 3.670266162958902*^9, {3.6702664010620484`*^9, 
   3.67026641430243*^9}, 3.670577051117526*^9, 3.670580173121094*^9, 
   3.670580420043217*^9, 3.670582279267559*^9, 3.6705839775556955`*^9, 
   3.6705866491985044`*^9, 3.670587071631666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s2", "=", 
  RowBox[{"hecplot", "[", 
   RowBox[{
   "\"\<Irene\>\"", ",", "\"\<observed\>\"", ",", "\"\<observed\>\"", ",", 
    "\"\<tarboro\>\"", ",", "\"\<flow\>\"", ",", "\"\<only\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<tarboro.wmf\>\""}], "]"}], ",", "s2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<tarboro.eps\>\""}], "]"}], ",", "s2"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6690887681299353`*^9, 3.6690887689411373`*^9}, 
   3.670229071769269*^9, {3.670230912947579*^9, 3.6702309474565525`*^9}, 
   3.6702639101521606`*^9, 3.670266104427695*^9, {3.6702661361827526`*^9, 
   3.6702661587473936`*^9}, {3.670266389880718*^9, 3.6702663910039206`*^9}, 
   3.670575312837102*^9, {3.6705821204124727`*^9, 3.670582121310524*^9}, {
   3.67058395630948*^9, 3.6705839583985996`*^9}, 3.6705866189917765`*^9, 
   3.6705870446111207`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\({3518899200, 3.5189009279999995`*^9, 3.518901792`*^9, \
3.518902656`*^9, 3.5189035200000005`*^9, 3.518904384`*^9, 3.518905248`*^9, \
3.518906112`*^9, 3.5189069759999995`*^9, \\(\\(\[LeftSkeleton] 34 \
\[RightSkeleton]\\)\\), 3.518938944`*^9, 3.518939808`*^9, \
3.5189406720000005`*^9, 3.518941536`*^9, 3.5189424`*^9, 3.518943264`*^9, \
3.5189441279999995`*^9, \\(\\(\[LeftSkeleton] 9741 \[RightSkeleton]\\)\\)}\\)\
\\), \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)}\\)\[NoBreak] \
cannot be transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587098747217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\({3518899200, \
3.5189009279999995`*^9, 3.518901792`*^9, 3.518902656`*^9, \
3.5189035200000005`*^9, 3.518904384`*^9, 3.518905248`*^9, 3.518906112`*^9, \
\\(\\(\[LeftSkeleton] 35 \[RightSkeleton]\\)\\), 3.518938944`*^9, \
3.518939808`*^9, 3.5189406720000005`*^9, 3.518941536`*^9, 3.5189424`*^9, \
3.518943264`*^9, 3.5189441279999995`*^9, \\(\\(\[LeftSkeleton] 9741 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({10.74`, \\(\\(\[LeftSkeleton] 49 \
\[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 8973 \[RightSkeleton]\\)\\)}\\)\
\\)}\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can only \
interpret strings or boxes as Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587098841223*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\({3519072000, 3.519072864`*^9, 3.5190737279999995`*^9, \
3.519074592`*^9, 3.519075456`*^9, 3.5190763200000005`*^9, 3.519077184`*^9, \
3.519078048`*^9, 3.519078912`*^9, \\(\\(\[LeftSkeleton] 33 \
\[RightSkeleton]\\)\\), 3.519110016`*^9, 3.5191108799999995`*^9, \
3.519111744`*^9, 3.519112608`*^9, 3.5191134720000005`*^9, 3.519114336`*^9, \
3.5191152`*^9, 3.519116064`*^9, \\(\\(\[LeftSkeleton] 9742 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)}\\)\[NoBreak] cannot be transposed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", \
ButtonNote -> \\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587098933228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\({3519072000, \
3.519072864`*^9, 3.5190737279999995`*^9, 3.519074592`*^9, 3.519075456`*^9, \
3.5190763200000005`*^9, 3.519077184`*^9, 3.519078048`*^9, 3.519078912`*^9, \
\\(\\(\[LeftSkeleton] 34 \[RightSkeleton]\\)\\), 3.5191108799999995`*^9, \
3.519111744`*^9, 3.519112608`*^9, 3.5191134720000005`*^9, 3.519114336`*^9, \
3.5191152`*^9, 3.519116064`*^9, \\(\\(\[LeftSkeleton] 9742 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)}\\)\\)]\\)\[NoBreak] is not a string or a box. \
ToExpression can only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.6705870990252333`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587099506261*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.6705870996212673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587099741274*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Table :: \
iterb\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587099804278*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\\(\\(-998.04`\\)\\), \
10940}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a positive machine \
number, or an appropriate list of range specifications. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.670587100254304*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\\(\\(-998.04`\\)\\), \
10940}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a positive machine \
number, or an appropriate list of range specifications. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822852969036`*^9, 3.670583987089241*^9, 
  3.670586654555811*^9, 3.6705871010323477`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {GrayLevel[0], PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxc3XFAfeP9B/CLTMhchNAIjRCuaZMJdxPaZEKjTbgIIYQQwkUI4SKETAiN
0CYTwkVo0+Zu2jTLXNNo02hkGv3m9zyfT/fteX/8cfZ7/T59z/Occ57Pc+49
53PO3fLY0w85ftVIJLL3NpGI/1/3X3J8t39+T/6v9FHxL7/88vCXck4m4m45
DqfFsZdzjhwTXyUS6YPjx/h4/ivsNuMsnDzGt3fARGC3HDUu/TV72bj5N+yp
0K5/8Vc5PmRcNMnunOT+fWTijb9lT8Bpaa/id4Hdsh+OHOtd8Bq7HY4f69t7
F05KvC7DHoPTx/r2yn4f2C174Mhx3pE/YP3iFjh5nG/vjdBuWf061iceNu6a
wvqbvBeNE39Ee02+f5Oh3bLyT2hPPGAcfSOw698FcFric8b104Fde2m45Hgf
L/8zu9c4782c+4/37Z0OJ07w8Zmv4uKav+Dfn+jbG4H7T/bxkhnsj1bvbjh+
hvcSnD7Dt3fcWzlnJZ6Bo2d6V/2VXfh2zjFx0ng+tOtfQxbbI/Fx49g77L53
gn/v+rfG33j9bX/jv8/CSWmv9t3Abjn6Lv996Sw7NcvtfTHL7TX/nT31d96+
+Hu8f4be4/1Z9H6wv92yE07J/v8ITki8cY6P14Rx/z/QnrjgnzkvyPFuh9Ot
vn+zod2y7gOMF/EYnBSXzedc1+r7d1No/z//wvaLW+CItDcd2i2qP0T7p3sP
wwlx8UcYz6f79q6Es6f5+KJxYgH9PU3yG45LvPLf7AE4Io5+HNjnN9x/qo/P
Gdd/gv6KyxfZvcZ5n2J7TvX9aw3tljPGNf9hj8DpFt+/LT7jeLfx0mfcXtMS
xzPGVf9lD/436L9rb4PPeXuSn/P+mA/t8/sL3r/jX/D+jy0Hx8st+5aD4+nz
+//4+LbBOj6ysI6f0f/x+Cr9ksdjCk7KeFyGdfw3RyopX6Zgza/4Kjnr/PgQ
rPldtGrOOr90wpGzfHsLX8XP8vHG1XKOtXlPwFlxRV7OqbN9e3fB8XN8vGB1
/PtzvdvhhXMlv+Fsu4/XfS3nzHneY3D6fO+yNeALJL/hVIePR/LhC71b4P6L
vKvXzHn4Yu9huCbpXbxWzqNJ378uuOYSH1/8Ki5OrI39e6n3JNx1qe/fbgXY
PokPwHWXeUfXyXnwMt9eB5zf6eNzcEJc/3W0L07DS52+vR3Wzbnhch/vhVPi
vCj27+WS33D0Ch+fgevENevl3CoegYevkPxeH+uTeDccvdJ7yTizAcaDuKoQ
7YkH4dYrff8KNwzslkk4JZ43btgosOvfi/CwxGMbs/tCu/byizjeVsTrzxrX
bsLtPbEJ97d0U3Zq02B7fX5vytvfvBnvnynjeHGwP31+wwuy/4u+wcej8xvB
8XLLxs3RX/HE5nx8K7YI7PrXD8ckXlDCbocXZHzNwm58uf4dtCXal/gYrOOx
bKuc22U89sCVEo9snXORuAVekvE/DU/L+N+nFPku8WE4KS7+ZpBPPr/huMQX
Yc2/xDY5z0m+TsIuX31+b4vtkfgAvJLfZdge8RxcJK7fjueHNJy+1PevfPtg
PnHLXrhZnLdDzmXiVjgq889f4AWZr2rKef4agXsv8e2V7Ij9I/FuWOe/JThf
3LQT1p/07b0Gj8p8WrUz1i8ehBMyvxbGeP5NwmXieTgqbtglmL99fod2y9i3
cDzFfXBU3LYrxqecD7Kwnh9qKzD+L/L9G4VjEi/9Ns6X4hSckfPNMuzOP65/
J34H2yvxKTgmju+G9V3o2xuC03I+K6pkd8J6vluAEx2+vSN2D+yWE3BMXPFd
HK8LJL9Du2XBHsH51S3b4ZR4Fk7I+fegqsBuOQbHxGV7siN7oT05n7fAen6f
Du36V7032pf4sHFxHO2Lu+DY+b5/n4T2f/U97G/xZGjXXuX3cTzl88cA3C+O
7sPugFvP8+29H9ot66sxHsVpOHqe5Pe+gd2yF9bPQ3n7oT1xa2if33CrxGv2
R3viEePumpxLxEvwgnw+a/oB9r98PsuEdsuqH2L/iwfhhLjwAOzvc33/Lg7t
lvNwRNxQi/19jm9vHO6Xz4+xA9l9cKs4/0eBXXtnwfr5M2tce1CwPp/fB3F/
SuvYKePl0D6/Dw7675ZTB3N/44ewiw7l/ncaLxwa9Nf1r7Eex0viE8YVP8bx
O9u7H07L5/G1D8Pxkni78SycONu3V3c4jpfEx4zLGjBexT2hXXtfwvr9oOUn
mJ/F06F9fv8U52eJD8MJcfER7K7QPr9h/X6SaGRPGg8cieMnjh7F7oCz8n1o
LrRb1h+N/ovTxuUJbM9Zvn+3hnbLvGPQf3FraNfeDByTeM2x6J94xLjkOPRP
rv9cE9otl+BhcVNTYJ/fsH4frDoe/REPGheegP5JexfD+v1y3rjhRPRHvp/G
mjE+xX3G+SdhfJ7h+9cG6/WlrHHtycgX8Sgcle+/W5+C/NDv17B+n14O7dpr
bkG+6vdrWK8vxU/NWa8nDcExud608WmB3bIT1u/7C3D6dMnv07E9cn1gwrii
Ffku7of1+sPaZ6B/cv2h3XgW1usZY2eiP+Kys9g9sF4fibShP3L9pMV4Gtbr
MdVnB3b9exROt/h48Tnon7grtGtvEY5LPHEue9K4sh39l+tN94aO+LMqtucU
747QPr9NvP58bJ84bVx+QWCf3xdwPK+D3WpccyF7BC4Rl1wU2PWv+yKOLxk3
Xczry1zM/dsjyfHBJG9v4SW8P5KXcHzeuOFS3r/jl/L+3/kyPj59xvmdfLzb
QrtlFtbxUns5exTW8bX1FTweU8bLsF7/m7qSx3u8iz0Ex+X6bNFVnD+dsObX
gnHj1Zyfr8CavxXXmHyGEzIfFHRz/rfDev1w1rju2sCuvadhnW/KrmP3wDGZ
7yLX83zVAuv8Nm1cnQrmQ5/fod2y+AaeP7uMEzfy/DtpXHkTz8cDsM7f0R52
h/FcaNe/Q2/meBrW+w/ltwR27fXewvG8W9mtxjOhXXv79/L5aMS45LbAPr9v
4/iScdPt7Exon993cHzQuLCPPQ/r+bPhTvZ4aNe/2M843mecfxe7LbTr39sm
XtvPHu3n9krv5njKeBlOiZvvCezae/0ejsfv5X8/dG8Q9/k9wH/fabxg3Hgf
t/fKfRyvuJ/b67+f4+0PcHzWuG6Q98fYIMfLfs7uMY48yPv/lAf5+E8bVz/E
43H4IY4XD7G7jBdDu/aOfpjjk8aVj3B7A49wPPoouwPWfJsL7fN7mONp4/Jf
mHz+pcln45nQrn81j3F8BNb5pGSE3R3a9e8zE296nJ0J7dqr+hXHB40Ln2An
n+D2PoB1Pm0YZY+H9vn9JMf7jPOfYreF9vlt4rVPs0dhnf9TY+xl4+ZnArv+
TT3D8fiz7CHjoucCu/5d9hzHF4wb09zeBKzns4rn2f3GBS/w+fDcFzg+a1z3
YmCf37CeX8vG2T3GkZcC+/x+iePTxtUvs4tf4fN9l/FiaNe/xATHJ40rf80e
gCPSv3V/E9gtOoznQrv26l/leNq4fJLdO8ntrfZbjrcaz/yW26v5HcdHjEte
w3iWz1vdoX1+m3hThp0xHvw9u/AP7GRo1795WD8PNrzOHn+d/31sKoi7/t0x
xX+f/0d2W2jXXtbEa//EHjUufYPbu/4Nji8bN09ze1PTHI//mT1kXPQmt3fZ
mxxfMG78C7tihvdXv3HBW7z/29/i+Cys46Pur+yx0K5/277N+dFjHMlyvrXA
K/lsXP0OexjW+Wezv/F802W8COt8l3iX58NJ48pZns8HQvv8/jufjzqM54zT
75nz8/vs3tCuf3lz5nwN6+eDGeOafwR2/XvsHxwv+Se7O7Rrb8nEmz5gZ2D9
vFU1z+09MM9/X/gvdvJf3N68iTd8yB43jn0U7A+f3x/x/slfYLcZ1/6bj8eo
cenHgV3/Uh/z8V82bv6EPRXa9W/vRXO+Ni76lM+HnaF9L4wb/8PjfyK0a2/X
zzi/+o0Llnj+bw/tFrPGdf/l/B8L7fP7c55feowjX7CnYf3+X73MHg7t+lf8
fzlrfVGX8aJx4n/YX3L94dXQbln5JXsgtGsvGtmd4h3Gc8b1q+xO7T0Ha3/K
V2X3hvb5vdrutP2txjOw7r+avMA+v2E9PiWrs7thPZ5NX8tZx0PGuGqNnOtk
fAzCOv4K83PW8Zs0nod1/B++Zs6aX+PGsbVy1vmuL7Rb5q+ds+Z/m3EW1u97
BxQEdstRWL9/lq4T2Of3OhxfhvV6fPPX2VOhfX6vy/Eh46Ioe8G4cT32RGjX
v4r1Od5vXLAB9789tK8HN/G6Qt4/Y6Fde2UbcrzHOLIR7/+WjYLj5evBN+Lj
V70xe3jj4Pj7/C4KxotbdhkvwivXzzYJxqPP79BuWblpMH7dcsC4YzMe73Ow
5kd9cZA/rn9pWPOv/BvsXljzNW/zIL99PTis88WMcc0W2J8yH4zAej22pATb
r/Wjxkuw1n8etyX6o/WjxlVbYfvk+vMgrNefC7dGf8RJ43lYr3cfXor+yPXx
cePYN9E/cf426I+4zTgLZ0/2/avdFuuT+vhR49Iy9E+cCu3rweGIxJu3w/af
5D0FJ0/y7cW3D+yWQ3BcXLQDuxOOnCT14KHdorEc/W32ngjt83tH7B+J9xsX
7MRuh0uaJb9Du2Xdzth/J3qPGffE2JFd0B9xS2jXv2kTr/4WexhOiIt3Dezr
wXfl+KJxogL9l/YmKzhe+e0g7pYDxtHvBPb14N/h+Jxx/W7cXno3jpdXsnvh
rDy/kbd7YJ/fu3N8xrjmu+ySPdjdxkuhXf+aqjieMa7akz24J/dvg71wvCSe
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
xmVfsHu+4P3x5Re8PS3L7Oll3r7q/+P4sHHx//h4dIX2+W3iiS/Zk8YDkT1o
PERXYXeEdv2bM/H6VXPW8ZVelePlqwVxXw++Gv99Xh7/fWteEHftzXwVl7+v
WZ09Aq9cD/9aYF8PDmt9wBKs9RRNa+RcIvU/mdBuWZWfs9arDML6vGLhmuiP
vO/jYlifr5yH9fnLhrXQvjyvGVs7Z32+sw/W50HzC4K4619bAf99toDXV7sO
+qPvR1knaN/Xg38dfy/9ScH6POcynJD3kTSvy9s7Ba88nxnF/hIPwfq+iY3X
4/3XCWt9zwKs9VeN6+PvZf9PrM/Ho2IDbI/U1/TD+vuuaxcGdst2WOtzZmGt
zxnbkF22EdYv46MntOtfZGOOt8BavzNtXF0U2NeDF3G8eBN2F6z1b4uh/V7Z
lD1pXLlZYF8PvhnHo8XsjmJub87E67/BThuXb87t3bo5x/O2YLca15SwR4xL
tuT+dW/J8SXjpq14f2a24v2/x9YcHzQuLOXjnSzl4z1v3PBN9jis9V47b8Pj
qw/W8Zi/bWCf37CO36xxbRmP/1FYn//dejvOnxSs9XDLsNbPTW3P+RjfgfN1
CNbnoYvKg/x2y05Yn8degHV+aNwR65fnw1+Bdb6p2Inno344IvNdwc4837XD
+vz8LKzP49fFsH/k/Q9Pw/q+gLJd0J7+vges7xeMfAvr0/f/w/o+sWlY31dX
vWvO+n61R2H9vZfiCvx7cResv1eT+Db6J56E9fd1Kr+DuPw+0ACsvx8U3S1n
/T2iDlh/z2gOLpHfgzq0Mmf9faU0rL/XVL471ie/d9UL6+9b5X0X2y9uhfX3
s2bgVvk9rv33wPHT39+C9fe9SqpwPOT3v7ph/b2wJVh/X6xpT/RXnIEj8vtm
e+yF/svvmQ3C+ntohXtje8Tzxg1xjB/xeGjXv9j3sP0S7zPO/z7al993awvt
68FNvHYf9E88Gtq1V1rN8ZTxsnHzvoF9Pfi+HI/vxx7aj9sr2p/jncYLxo01
3N4rNRyv+AFvb79x+w/Zsz/k/Vl3QGDXv7EDOF5Wy+6p5eMXOTCwrwc/kOPT
B/Lxr/5RYNfeMKzjp/ggdpfxIqy/t3d0HY/HSVh/b6/y4MA+vw/mePQQHu8d
xnNwv/ze3qGHcr6kYc2n8np23o+D/PP/X+MZWH+fr+Ywzt8RWH+fr+Rwdjes
v8/3Gay/z9fUwM7A8XapB/9JYLcchHW+Kfwpz0fJ0L4eHNbf62s4gj0Op2S+
izXieEq8zzj/yGB+dMs2WH//7u3QblF7FM+vo7D+/l3qaPYyrPNzcwLbL79/
NxXaL48J5ne3HIL19++KjsX2yu/RXQbr+WHBuPE4bK/8/t0ErOeXiiYcf/19
PeOC43H85ffozoX1fDUL6+/b1Z3A57cxWH+fruxEdg+sv08XaQ7Olz6/Yf39
uWnj6pPQvrj4ZD7/dsH6e3OLsP4eeOIUPn9Pwvr7cpUtaE88ACfl9+HWPTWw
W3bA+ntyc3BMfo+u/jTsX4mnjctPR/v6vnBY30e7Wmtgt2yF9f2vM7C+77Xm
jMBuOQKvvC/8TLSv7wsP7fMbXvl9j7PQvr5fGNb3tw62sQvPxv7R9wnD+v7h
eVjf19pwDnsc1s9vsXPRvr7/P7Rb5rdje/X9/6FX8bMY8kvf/38e9rd8fhw1
Lj0f/Zf3X10f2i2XYf382XxBYJ/f8MrvcXWwh2B9H1bRhYF9fsP6eXfBuPEi
bI+44mJ2v3FBEvtL3n/VHtotZ43rLsH2isdC+3rwS7G9Eu8xjlyG7ZX2WkK7
xbRxdSe2X74PDIf29eCXY/sl3mW8COvvyyWuCOyWk8aVV+J4y/eRgdA+v7vQ
vsQ7jOdgvV6TvopdfjW2T9wb2vUv7xrsb/m+1Arr9aYZ45purF+u/zwW2m/V
tVi/uDu0a28J1u9rTddh/4kzxlXXY3/J970H4JXrZSl2Etb3e83D+n2y4Qb2
OKzXm2I3Bvb5Dev30/ybsH59/6hxbQ/Wr+8bhfX7cOnNgV3/UrB+f16G9ft1
8y3sKVjfP7n3rYHdcgjW61tFvYFde52wft9fMG68DcdbPBHa14PfjuOt18uM
C+7A8ZbrD+2h3WIW1usbdX3sMVivr2x7Z2C37IH1+kzkZ+xpWJ9fq76LPQzr
+7mK+wO7ZResz7MtGifuDuzrwWF9P1blPewBWN9/Fb03sFt0wPr825xx/UBg
Xw8O6/Ox5fexe2F931Pe/YHdstV4xrjmAfRP2nsstFuUDLK7YX3+runn7Ixx
1YPorzx/NxjaLQsfYieN52F9H9LhQ4Hdctw49nBg114fvPK+o0fYbcbZ0L4e
/FGOjxqXDgf2+Q2vvP/IuPkX7KnQPr9/yfEh46LH2AvGjSPsidCufxWPc7zf
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
pH/7bxXYLUeMS7YO7Nrr3prjS7DeT2oqZWdC+3rwb3J80Lhwm8A+v7fh+Lxx
w7Y4fnp/K7TP7zL++z7j/O3YWePa7dmj23P/Snfg/ZvagY/XMqzjo7mcx8fr
5RyP78j/fii0a69oJ/77TuMF48adub1XduZ4RYzb649xewW7cLzdeHYX3v66
bwX2+f0tjpftyu6BdTy1VLCnjau/zeNx+Nt8fIq/w+4yXgzt68F34/gkrOOp
sjKwa2+gkuPR3dkdxnOhfT34dzmehvX3ZMr3COzzew+O51WxW41nQvv83pPj
I7DeLy7Zi71k3LQ3OxPa9a8qzvFBWO9PF36PnQzt68FNvOH7OJ+Ix0O79mL7
cLzPOL86Z72f3hba14ObeO2+OJ/o7/WE9vm9H8dTsD5vvGzizfsHcZ/fsNYD
xGvYQ8adP8D4Fi8YN/4wsOvfBKz1ChUHsPuNC2qR/1L/cG5ot5w1rjsQ+1fq
LcZCu2XZj9g9sNZjRA4K7OvBD+L4tHF1XWCf37A+v1l8MLvLePFgbu/oQzg+
aVx5KLcfrWd3GM/Vc//qf8zbnzYuP4z3Z+9hvP9XO5zjrYfz8Zo5nI93TQOP
hxFYx0/JT9jdsI7Hz0K7RdNPefxmQvv8PoLzZdC4sJHzLwmv5Hdot2w4kj0O
6/zRdxQ7/2iev9pCu/5lYZ1PaxPsUePSY3j+vz60Wy4bNx/L5/upYzkeP47P
T0PGRU2BfT14E8cXjBuP5/PbxPEcrziB3W9ccCK3d+6JHJ81rmtml53E7jGO
nMz9azmZ98e0cfUp7OFTeP9v1mLO18aLLcHxW8VXgfHxnDSuPI09ENrXg59u
ztfGc6dze/Wt5nxtXH4Gu/cMbm+1MzneajwDr5yfz2KXtLG727h/SybedDY7
cza3V3VOEPf14Ofw3xeey07Cer6fN/GGdva4cew8bu+O84L1uWX++ey287m9
rInXXsDrH4V1fJZ28Pi/voPjy8bNF7LjF5l8Ni66mMd/58UcXzBuTLInkty/
XS8x+Qzr+C+4lOef9kv5eM4a113m/M75hY/s/07Eeyy0rwfv5HiP928n/X/i
yOWBfX57j25++QcHj0p82rj6CueB1j3XeuNe8XBon99XcrzLeNH7+hc+LWu8
XjzZxa68ij3gfYHv/vnSv+jVgV28w3jOuP4a5xPkP+nfc6FdvLzb+RDZQHFv
aNde3rUcbzWe8fZb17qnuOa6wL4e/DqOl1zP7vbertFvsbS3FNrFm1LOsjmF
4oxx1Q2BfX7fgPO9xAtvZCe9fetrvfHl3s4NN7HHvWV1j4hjPYFd//p6OJ5/
s7MfHZtfLm4zznrL5jR+ubevB78lsIuPGpfeGti1l7qV17ds3NzL/ZnqDbbX
14Pfxvtz6DY+/kW3B+Pb57f3FtLAKpLft2P94sY7cPxWlfz2/k+Zb2BVye8+
/P1qkt99GI95kt93YvtWl3y+E+v7muTzz5x3lf/WkHz+GeL5Ug9+l3ONJPSa
ks93YTyuJfncj/Wv7d3Sj+0tkHpw7zNkhetIPt+N/n1d8vluxNeVevB70H5U
8vkebJ948R7sr/W8E/cif9eTevB7sX8kXjmA/q4v+T2A9a0v+X2fszS31gaS
3/eh/+K5+/D34vr7cbwLJb/vx/4plPx+AP0R9z6A+U7cOoj2NpR8HsS/F9f8
HONtQ6kH/znGi8RLHnSe9+EPxN0PIh838l56EPtvI6kHfwjbI/HMQ+ifuGoI
27eR1IMPob8SL3wY7YmTD+e2P3W793xoXw/+SM6jEh+Hs+LYo4F9fsP5d/h4
/nDOMXGbcRZuuEOe9/hFYN+qcekvc06Kl42bH2NPhXb9i49wfMi46HFur/Nx
7t9HJt74K96eidCuvYoneH/0GxeM8v5sHw32t68HH+X9X/ckH6+x0D6/n8q5
WeI9xpGnc46LW+Aiae8NeOE2H68ey3lCPAz3i7ueybldvAjXiRPP5lx2m9SD
wxGJVz6X83Sv9wA8LI6mc+7qlXpwOCHxOeP653OO9ko9ODx3q4+Xv5BzWtwL
94rzXsy55lapB4dLJD4DL93iXTOec+YWyW94UOIlL2G8iLvhmHgJzr9F8vtl
jIebfTwDj4qrXsHxFhdO4PiKk3CReD6061/Dr3E8e3x8HO4Xx36D4ynug+t6
pB78VRxPibfBEXEWnr5J6sEncTxv8vFRuEtc+lscP3EKrrxJ6sHhqMSbf4fj
eaP3FJy+UfL7NRxPiQ/BreKiDI6vuBMuuVHyO7RbNv4ex/sG7wk4I+7/A463
uOB1zCfidrjhBqkHh2MSr5vC8RePGZf9EeNB3s9+Ezwq71+P/AnjQdwCN8v7
4Kdhff979RvsYVjf5148HdjXg8P6PvdFWN/Xnvgz1qfv/4f1/eyVb2J/yfvS
B2B9H3v0L+ivvG/9Aljfrz5nXD+D/sj70cvfwvEX98L6vvW8v2L/y/vZW+FK
ic/A+n71mrfRX/EIPNwt9eBZ9Ffi3XCNeAnW33toegf9lfejZ2B9v3rV35B/
4kE4Ke9b3+Bd9FfiSVh/f2IeXrpa8nsW/ZX3o4/D+n712N/Rf3EfXCbvW1/j
PYw/ibfBWXlfehbuF4++j/6KS+fQX3EKLpL3sy/D+n715n9gPIun4FZx/J+Y
f7qkHhyO6e95fID5QdwJZ+T95wuw/l5I4zzWL56A9X3qFf/C+uR963fB+v70
gg+xf8XtcOoKyW+4TuJ1H6G/4jFY6/XLFrA+qT+/CdZ6+ci/MX7FLbDWs1d/
jP2p9eCw1p8Xf4LjpfXg8Eo9OLxSD76I46/14LDWZ+/2Kea7y3x8ANb62+h/
sP1SD9sBa73sHKz1r/WfIR/Eabhf6mF3WMJ4lXgvrPWref/F8ZL61lZY61Nn
YK1Prfkc84PWj8JJqTfd4gvsH31fOKz1p0uw1p9mltGe1ov+H8az1ovCvfp+
8P+hPa0fhbXedB7W+tKGL7F9+n5wWOtLYy5DVtan9aNwXOpN81fJWetJ22B9
X3cW1nrS2lVzbpV60ydgfT936Wo5az1pCs5I/ecyrPWkzXk56/u6p+CV+tHV
sT6pN30IXqkf/RrWp/WjsNaPNq6B9YknjCvyc16Q+s9+eKV+dE12O6z1pLNw
4gKpB18rsFuOGZetjfalvZ7Q/n8K2C2w1p9Oh/b14OtwfNi4+Ovov9SbdoV2
y0XjxLrsydA+v6PYfn0+0zi6HnvOuH59djq061/5BthfEu81zitkt4b29eCw
1tvWbMgeCe3aK9mI492w1uMuGTdtHNjXg8Nan1tVxB4M7fN7E+STxJPG88YN
myLfpN73xdC+15ux+2B9n3tbMfJbnDWu/UbOWam/HQ3tlqWbs1Ow1v8uh/b1
4FugPxKfgrXeN14S2LU3BGu9b9GW7E5Y638XYK33PWIrjB+JTxhXbI3xIfW+
/bDW8xaUstthrd+dhfX98wd9M7BbjsFar1u2DbZfHNmW3QJrPe40rPW31WWB
3XIY1nrb4u3YXbDW334Ca71tYnv2JKzvu6/cAdsv8QHjaDnGi7gjtK8Hh7Ue
tn7HnLW+NR3a5/dOOB9JvNc4b2f0T9wa2uc3rPWqNTH2CKz1qN27sJdgrT9t
+lZg178MrPWkVbuyB40LK9B/qce8OLRbzhs3fBvbo+//D+234jvsPuP83QL7
evDdOJ41rq3k9kYrOV66OztlvLw7t3fidzk+ZRzfg11UxdvfabwQ2vWvcU+O
T+zJ+7tiL3Z/aF8Pvjcf33bj2b35eNfFeXyMGZd9j8dXT2hfD27iLd/n8TsN
a3139T483oeNi6vZXbC+b+KT0L6VfdmTsObjwH6cv9H9TT6Hdv2bM/H6Gnba
uPwHPB/cCuv8kfdDdusPub0ZE685gD1iXFIb2NeDwzq/LRk3HRjY5/eBHK/6
EXvQuPCgwD6/D+L4vHFDHTt2cDDfumWfcf4hPB+3HcLxrHHtoezR0L4evJ7j
KePlem6v+cccnzKOHxbP3S9azXsotK8HPzyeux8k8U5vvZ8hXvC+/Tb/32qS
3w1xun814a33G8QVP4nn7l/I/ax+b72/nCf5/VOsX+5vtf8U/17vd3kH97vG
jojn7n+Iyxrjufsr4p5GrP9rUg9+ZJzuj7UcifbE00ei/+Lqo9D+GlIPfhTa
y/fx4qPjuftT4i5vvZ+1ptSDewf32xKJeO7+mHgygf0nrjzG+UW/+hfWlHpw
b72/KvHosfHc/SG5X9dxLPbHWpLf3sH9vPrjsL/FaW+9Xycub8L2rCX57a33
2yWedzy2T9x6PPaf3B+sOQH7TzxyAvovLjkR/S2QevATsf4CH186EesXNzVj
/8v9xUwztu/rUg9+Ujx3P0vuNw6ehPbX9S48Gf2LSj34ydi/cr9x/qu43E9s
OAX9FY+fgvG+vtSDt2D8yP3GvhbsL7l/mH8q1lco+X1qnO4XZr+Ky/292tPi
dP9v1FvvL8v9va1PR1zuz6VOR3xjye/T0V/xVCv2b5Hk8xnYXvGQtw6PTaQe
/Ewc/00kn8/E+BYvnInxsql341k4HptKPfhZWN9mks9t2F/i/jb0fzOpBz8b
x1fi7Wdj/BdLPp+NvxfXnYP99Q2pBz8Hx/cbkt/nYn3innOxvs0lv9sR31zy
ux3920Lyux3jR1x9Xm48bl0i+X0e/r5E8vt8jFdx1/m5+IzYfetf2d+bbCn5
fEEuXw8XV3bkjk/PllIP3pHLz99LPHoh9udWks8X5o7v98VzF+a25+ytpB78
otz+eUzi6Ytyx+s9cfnFGA9bSz34xVjf1pLPSaxP3JrE9olnkujf1lIPfklu
vHwu8ZFLsL9KJb8vxfaWSn5fmju/JCW+dGlu/A6Kmy7D+sWZy7D+Usnvztx4
2+mbkt+dmM/EhZdj/eL5y3Pz7c/EDVfk5ttXxONXYHx/U+rBr8zl57rbSD5f
ifEmzu/C9ojbupAv20g9eBfak3jtVchH8ehVmC+2kXrwq3P9dd8UI3IVPnd+
EC9fjeMjbr4m9++P2Vbqwa/B9ko83o32xUPdufnxmW0lv6/F+JR457XYv+KF
azE+yiS/r8P2l0l+X4f9LfGK65Ff4v7rMb+J21M4vuLZFPaHuO4G9KdM6sFv
QH8kXnYj+rOd5PON6I84clMuX2u3k3rwmzA/SXz6JuwfcXUP5r/tpB68B/ki
8eKbkf/irpuRP+LFm3G8tpd68FvQv+0lv2/B+BRX3orz+/aS37fi+Ek82ovx
I+7oxXwgnuvF/CrtHXob+ifx9G3on7j8duw/cd4d6N8Oks93oH/imTvQvx2k
HrwP/ZP4SB/6Jy65E/0Td9+J/u0g9eB3Ir8k3vQzjHdx5mfYf+VSD34X+lcu
+XwXjq+4sB/HV5zsx/Etl3rwfhxfiTfcjf6Jx+/G8ZX2Yvdg/0m87x7sP3H+
vdh/4rZ70b8dJb/vxf7bUfJ7APkpHh3A+UGcug/zqXj5vtx8frW4+X7kx45S
D34/8lXi8QcwH4qHHkB/xUWD2J87ST34IM43O0k+D6K/4safo787ST34z9Ff
iVc8iHwW9z+I/ooLHkL+SHvnPoT9K/HZh3D8xXVDOP7S3tgQzr8SL3sY57ed
Jb8fxvwnjjySO/9X7iz5/QjGg8SnH8F4FVc/ivEqLh5G/8VdwzifiReHc+sf
3VnqwX+B8SHxyV+g/+LKX6L/4gFv6e7qMakHfwznj5jk82O5/VssnnsM58eY
1IOP4PhIPD2C7RWXP55b/77i3sex/dLear/C+Ujirb/C/hDP/Co3vpqlvZon
MB4lPvJEbrxdKC4ZzR2/K8Xdo7nxd4O099lobnv6JN70JPanOPMk5gPx4FPY
v+LCp3PjNS1OPo3xIv2bfxrjXeINY7nx9mfx+FiuvXfFsWdy7X0o/bvjmVx7
SxLPfxb5sYvk87O59tbYRerBn8Xxknjtc7n9ubF49DmMR3FpGsdvF6kHT+P4
SXw5jeMnbn4+t3/3lPamnsd8K/H4C7n5pV489AKOp7joRRxPae+yFzH/SXzh
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
81Ry/jhvfMfT+I44PgTvf4wf743vMHLNCd74Gqle+oTQ0vdTTF7aGoL3W+Kt
PH/J062hpe/P2PXgJ/J8pXzkRO/4VpGrTgrB+z3d1uL9oKKTeX6S204OwftH
2ZN5PlK93dt4PlI+2Mbzzb3fdYq3Pz5372+dwvOFHD3V+30vu/e3TuXjT+9/
1Z7mjb/fvb91Gh9Psi8WgvfTOmJe/55J7899EfPmz8mUN57uPd5m8ujpoaXv
35l61Wd4j2c3ynvO8I7vluTiBSF4PzC2gPcP1ftwgXd8iigPt3v1F9P7i0Pt
Xv0pev+x4kzeH5R3ncn9Qi6cGYL3M1vO4vlO73e+eRbvD8rrzub5S+4/OwTv
nybiIXh/dTbOj5/cdA7PJxrf2Dk8fygPnBuC93N7z/X2/8rkkoXe/v+B3p9e
sDAE7w/nFobg/eOGDn689H7zcAc/Xsorz+PH696/Po/7171/fR4/Xqp3wvl8
vCmfPD8E738HL+DrAdUbuIAfr3v/OsH9Qe5MhJa+3277O8HHl+odcSEfX3p/
fvxCPj+Say7ix0cuvTi09P1/288X8+MjT1/M85nWB0Q6+fxD+UgnPz5y1SV8
PSR3X8Lzl9Yj/HEJz1/K2y7l+UvOXsrHj+rVX8bHj9ZHDF7G85VcnvTmywQ5
meTzN623+D7p7b87KY9ezseLPHF5aOn6DdvfV/D5kvK+K7z5cSDZdyVfn8kd
V/J8pHpfXMn9R3ljVwjWm4x2hWA9Ss9VPP/cepSrefzk2NU8flofM3U1j5/y
8DUhWB8zdA2Pn1yR4n6i9TFXpnh+UV5I8fwit/yT9z/Vy/yT9z+t76m7lq/H
5P5reT6Ry67zju+DtN7ogutCS9cT2f6+zrt+XEJu6ub5Q+uNxrp5f1MeuJ73
N7n3eh4vueQG3t9Ub8ENPF5aH5W7IbR0/ZTt7xv5/E6u7OHxklM9PF7yfA/3
M62/ar2Jx0v55E0hWO8VvJn3L3ngZp7ftD5s7Vt4/1LeeQtfn9z6slu4X2k9
WnMv71/Kx3v5+kOuuZXPt+T0rTwfaP3bKreFlq6Hs/19G59vyNO3cT9Svcjt
fD6lfOR2Pr+Qq9J8fqH1et1pnr+0vu+PtHe8nqa87V8hWO+X/RefT8iDd/D1
gFx+J58fyck7+fxB6wHn7uR+ozzaF4L1iBN93G+0frH2Lp6vm9B68LtCsL7R
dzef/8gdd/Pxp/WOM3fzeClvvIfHSx69JwTrK6v7eb5SvRv7ebyUF9/Lx58c
u5fnK63/nLqX5yut7wzfx+MlD93H89WtH72fx0vrP6+8n+erWz96P4/XrR8d
CC1db2r7+QEeL7n/AR4vuexB3r80vsSDIVjPOvsgn8/ITQ/x+Zg89hCfz2g9
7FaDIVgv2zvI5zNyycOhpetrTb32h3n+Up57mM9n5IZ/c7+Rh//N5weqt/Ej
PH7KU4/w/t6I+vsRnh8bUX8P8fgpnxzi8ZODj/L4yQOP8vhpffHaj3H/Ud75
GJ+PyfnHeL6Qxx/n/U+uGeb9T04P8/Wexlf6hHf+XJ7y+BPcj7QeevoJnj/k
yJM8fzak9eBP8nynvOop7k9y91P8eGi9ddEIPx7K20b48ZCzI/x4yPVP8+Oh
eg89zecXysufCcF67+Qz3A9Ub+4ZPh+69eHP8vEhTzzLx4dcO8rnG1p/fuco
9wflvue4P8gdz3E/kxuf58dHHn2eHx+5+gV+fBW0HvwFPh9RXjzm7c9tybEx
Pt+Tp8Z4/tH49nqRz6eUD73I53taT1/xEs+3DWg9+Es8fsoLL3E/k1teDsH6
/MzLPJ4NaD34OM8fyvvHQ7C+v+wVrk/r/xOvcH3KZ1/h+uSmV3l/kcde5frr
U3+/xsef8t7XeH+QSyb48ZNzE3x86fMIDa/z9Y48/Dr323q0HvyNEHyeIfUG
Hy/y/Bt8vMitb4bg8xDvvMn7g/JghvcHfX5iIMP7o5zWg7/F46G88y0eDzn/
Fo+H3Px2aOnnM+x68Ld5PJTXvMP7h5x+h/cP1Sud5P1DeXyS9w99/mN6kuc/
OfIuz/d1qb/f5eNFedV7fLzI3e/x/iK3LfLOD3uRs4t4f5Hrszw++jzKYJbH
R3n5+3z+oc+7JN/n8ZHn3uf5RJ9/OfoD3n+UT3zA+49c+yHvv3VoPfiHPL8o
903x/iN3TPH5kjwzxceX6h38EY+X8tGPQvB5neqP+XjT53t6PubxUl78CY+X
HPuEz4/kqU9CSz8PZPs7x/uX8qEcH39yxac8fnLhUx4/ueU/oaWfN7L9/B8e
P42v7jMeP30+qf8zHj+5bJrnKzkxzfPDT+vBp0Pw+aam//L+J4/9l/e/n9aD
f877n/Lez3m+kEu+4MdDbv+CHw/V++SLEHy+qmGGHx95eIb7b23q7y95vtPn
s1Jf8uNzn9/6MgSf32r9Hx+vtam//8fHi/LgYn685IHF/HjJnbP8eMn5WT5+
5Oav+PjR+Ma/4sdLec3X3C/k9NfcL+TSb/jx0vjO/oaPJ+XT34TgfpKRPD9+
uv/kSD4E95+s+jYEn2/r/ja09H6V9rd+x4+XPg938nchuL9l9jt+/OT67/nx
U73B70Nwf8zyOX785OQcH3/y3Bw/fqp39A+hpZ/Hs/39A+8Pcu2PIbg/p+8n
3h/kjp94PtDn+2Z+4v1B9/9sLPB8oHy0wPuHXP0zzw9yz8+8f9ak9eC/8Pyg
PPYL7y93/9FfeH9RvfCv3N+UD/3K+8vdf3TeG3+Y7m/YJW3Xg7Pd/Q9bfvPs
7n+Ykbb9/bvnDOX9bHc/xLI/0Al2gu5/uFjabJuKdltid//EMba7f2LvMuiS
ZT2XkNulzfhybHd/xYbl0MPKlcWeh6+n9eBsd//FeeXW5T230v0WJ6XNNriC
5yB5QNm/omc/1btY2mzz7Dzdb7G5RNj2N9vd37FmJXSa7e73WLqysO3vlTGf
Zrv7QUZWQVeVeo6Qu5WL/uS5isbXJm22Wba7f2T9/6EHpe168FU9Z+l+kEnl
OWlTL+rz7O4/OaFcuxq6bzXx7+168NVxPB2r4+ObWV3sL9vfa+D+Hl0Dj191
Gc6XHrabX8utifMvpjylPLQWumJtdJe0GV9B5S1+dEa57s+if+x6cLbrx7J1
PLt+TbD7qd9mpe2/Whc9xnbni0C5sF0Pznbnm5L10O3Str/ZMTpfNazv2d3f
dZjt7v9auYHnGTrfXSNttvNsH91ftrXCcy05uCF6QNm/keco3Y+2U9ps88rN
G6PHpe168ErM08qlm2C9+CaYTytHNkWPbIr1NtsM8+7N8PEVVQnb/q7CPKtc
/xfcn4PStr83xzy5OR6POeWJLdC11Xh8+6TN+Hx/xbyD7ebHjHLjlsJ2PTjb
za/qrdA90qZeccCzu77GlKfY7voa3lrYrgffGvOKbdBdbDf/C9Jm27ItOsN2
/VZXg/12Tw3mZduhE8pN26t+3h7zwA7CZny9O2BeUov/vl05J23Xg++I+bBy
5U54/knthPk8252vWndGT0rb9eB1mA+w3fnPv4uw7e9dMM+z3fOT5r+hx6Vt
f+8qzrdF9nb86NIgelo5EsLz94j0MrZdMe9WLtpdXI/Mtk3argdXeX09Xs8G
pU298j0wTyrPsd3zo+iewnY9+J6Y1+6F7pO2/R327J5PdSjPKDfuLWz7e2/M
q/fB63ePcmxf9JRyuEHYjG+oAfOK/dBdygVpux58f8wzbPd8sO4AYVOv/wDM
yyLohPKstF0PfiDmYwdi/cBB+Ph6D8K85GB0u3LuYHx8+zZiPqxceQgen3nl
1r+jJ6XN+IKHYj7AdvPJ34TulLbrwdlu/jYfhh6XNvVqDsd+SSuXHoH9F5e2
68FVHmlW/c12f99UHYnng262O98UHYVuk7b9rfL6o/F8NqicjOL5cU45+g9h
M74Jtjsf1x6D7lP2HYvXp4XSZjuj3NiC15tRtrv+VR+H7lEuPl7YrgdnL7n/
v3L4BGHb3ydgXtGK1/su5YK07e8TPbvnExnlupPQZSejE2z3/GVW2oyvqQ3z
MbZ7PhQ4Bd0rbdeDn+rZPd9qV85Jm3oNp3l2z+eGlStjnt3zw5S0XQ/Ods8/
W09HT0rb/j7Dc9I9H1f2L/Dsvl+iU9r2N9t9H0VzO3qc7b6/In0muvQsz1Xk
uLQZ3zTbfT9G5Gz0iHJV3HP8JloPLm3/cw66jZ2mellps60/1/OS7/NQLl8o
bNeDs933gcwpRzuEbX+z/fT9IrXnofuUfefz+Zi+f2ShtNnOKDdegK5O8PmZ
3KNcfKGwGV/sQsynlMMX8fmbPCRt14NfjHmXckHa1GvpxDyjXHcJuv8SrLfG
pZgnlGcvxXpNl2E+phxIonuTWG/FyzFvV84pD1+BrrwSnboSxzev8tYu9GQX
Ho/gVcJ2PfhVmPuvRndejcc7r/Lma3D+jCvXpHA+3p7CvPSf6DjbT/Wmpc02
ci16RLnqOtE/tr+l7X+60W3K9derflYuv0HYjC95A+ZzbHd+iN6InpC268F7
8HzTp+y7SdjU67gJ8xnlxpvRo+wI1dviFsx7bhG52Rb3Ctv+7sV8Sjl8K3ro
Vqy3wW2YdykXlDO3o+vS6P40jq/sX5gnlGeVm+7A8b1wB+aBO9G9d2K9kj7M
25Vzyg13Yb3H78K88m506m6sN6/y1nvw+E0qB/vx+nZ/P+b+e9GdbDc/m+9D
jyvX3I/XwzTbzf/SAXRceZrt+vOAB7D/RpSrHsTzQbe0/c9D6Da2O59kpe16
8EHMB9nufFb+MJ7vkmx3Pp1Tjv4bPSFt+/sRz+77xvqUfUOe3feVzSg3Pooe
ZZfQ96FVPyZstj1s9/1pxY+jY9J2PTjbff9aeBg9xHbf91bxhLDZdikX2P3k
lieF7XpwdobyuqfQ/dK2v0c8FyhPKM8qNz0tbPubXdFr88Az6F7l9mfROeWG
UWEzvmF2mPLK59Ap5Xlpux78ec8xyieVgy8Im3oDL2DuH0N3Kuel7XrwFzEf
V655CeulX8K89GV0XHn6Zax3wDjmI8pVr6CLXkW3KWdfxfHVv4b5oHL5BDo5
gfv/+wk8PtHX0RPSpl7tG5j3KfveRHe8ifW+YLv51JhBj0rb/n4L8x7l4rfR
Mbab/x9K21G8gx5S7prEfiwot7yL/Zlhu36vew/dr1y2CM8HF7Dd+WNWuSmL
558xtjs/Bd5H97Ld+a7kAzzfLfgA8xzbnT8bPsTz6/CHmFdO4fk4pTwvbfv7
IzzfTyoHP8brh/8TdKdyXtqMrzmH169x5ZpP8XqXlrbrwf+D18+48jTb/T0a
+Uxdr9nu+l41je6WtuvB2e75RNt/0Vm2e75b/7mw2Q6y3fOh8i/QSWnb32z3
+kF0Bj3Bdq839H2J9v0P3cHO0usjM9Jm27jYs3s9ZFS5etaz+/7NG6XNtvgr
z+71mJi0qTel8vDXnt3rPUPKFd94du8HXilttgXllrxn93pTRtps67717F7P
6lcu+86ze3/vAmmznWW719eavkcH5tC9bPf6XskPwmZ87Wz3+mBOueFH9DDb
vR658U/CZptiu9c/56VNvdYCn7/c+1vKwZ/5fOXe35K268F/wbyTveT9LWnb
37/y+cq9v6VcM49Os936glV+EzbbONu93j2tPPI7uuoPdDd7mF6PLyrafanN
tk05y3av59cvI2zXg7Pd+wPly6KT0qbeHNu93xBdDj3Bdu9v1BYL2/XgxZj7
lvfs3o/pkLb9rfLGFTwvWY+iXL2isO1vtlv/U1yCjimHV0IPsd36oIqVhc34
ulbGvMB262laVkFn2FU0vp1Lhc22X7nsT56LqF5C2mxmlZv+z7NbPzQmbdeD
r4p5r3KJT9j2N9utJ8opN6yGHmYnqd7GqwubbUp5nu2+L3dyDXSwDD3ArqXx
+dcUNttO5Tzbfd9u81rCdj34WpjXrI1OS5t6pX7P7vt648rTypE/C9v14OxR
yqvWQXdL2/5e17P7/t825axyfbmw7W+2+77g8vXQSeXo+ugJ5doNPIdpfH3S
di9VoDuUZ9ju+4kP3lDYPmrl6o2ETb0etvv+4uKN0THlKWm7HrzSs/u+4yHl
ik2EbX9vgnlBuWVTdIbdT/V23kzYbpXLqtCzyk1/QY+xEzS+wObCZturXLIF
ul3argdXeUO15ybysLSpV/lXzFPK88qtWwrb9eBbYh7cCj3ADlA9f0DYbDuV
88rNWwvb/t4a85pt0Gnl+Lae3fdVTytHaoTN+EZqMK/aDt3Nzrnvt95e2K4H
3x7zrHL9DsKm3iDbfV92eS06qTwnbdeD78jXf8onlGt3Erb9zW6l3LczuoPt
vn97Rtr2dx3mo8rVu6CL/+bZfX93THlK2owvvCvvH/p+7iHliiA/HnKXtF0P
rvKWEI+HnJE29ep24/qU97ML9H3eZbvz+YCcYA/S94EvljbbpnquTx5jt15N
/b0Hnz8p72W77w8v2ZOv/+R2du4q6m9ps23Yi68v5GG2+37xVNhznDzPbiK3
7s3XV/r+8Ulpu5f24esleYDtvo/cvy/vH/r+8Yul7U+xB8nNDZ6T9P3j42z3
feU1+6HTbPf95aX78/6iemdLm+00u4QcOYD315XU39L2X0V4/5G72e77zosO
FLb9zU5QnlWuP8hzlFx+MDrJdt+XPsf20/iijcJmO8Eu0Ped1x6C7mNn6PvR
V/27sNl2KM+wB+n72BsPFbZ7ge2+j726Cd0jbdeDH8bHi/KY8hQ7TPXChwub
7ZByxRF8PMld0ra/Vd7SzMebnFHuPxJddhQ6wc7R97/PSptt09E8P8hjyoGo
sF0PznbfP1/yD3S7tKmXY7vvp284Bj2sXHmssF0Pzm6ifF65tUXY9je7lvLg
cegBZf/xwra/j8c8z/aTm09A17TyfE1ap5VLTxQ244ufiPm0cuQkz1nyiLRd
D34y5t3sYXJRm7Cp19aGeZadItefgh6UtuvBT/UcozypPCdt+/s0zCeUa2Oe
I+Q+advfp2PeoTyjPHqG5wC5egG6R9qMr7gd85jyFNtHDp8pbNeDn4l5xVno
LmlTr8DOX2bzlrPRGeW6uLBdD87OUF52Djohbftb5U3n8vmPPKYcWChs+3sh
5iUdPB/I7coN56GHlSvP5+NP40tJm+28cusF6Elpux48wcef8gFl/4XCpl7n
hZjnlZsvQo+zA1Rv24uFzTatXNopbPub7aN8WjlyCXpE2vb3pZh3KxddxvPj
Uuuscn0SPShtxld+OeZJdoY8pxy9QtiuB78C89oreb6Q+6RNPV8X/nxHF/78
jHLjVcJ2PTg7RXn11egeadvf12AeU55SDqd4flG9R6TNtuKf6C7llmvRGeW6
64TN+PrZEcrLutEJ5Vl2gMZ36PWYj10vcru9QdjU670B85Ib0e1sHzknbdeD
92A+rFx5E8+nS6i/pc12np0ht96M+eTNIrf9fQvmA7fgeP29+PjzvXg8m2/F
+TbOdvO/5jbspzR7ST/fjnn8dpHb9eC3489H0ugRtjv/VP0Lzy/dykV34L9v
uwPrLVJ5/Z3owTvFeG1/9+H4k33i8ZvtnHL0LmHb33fh/qu9G3++727MO+5B
z7CX9HM/ng9G+zGvvlf1s3LxfcJ2Pfh9mE8ph+/HfhuSNtuKAdXPygV2hOod
+wDOt4xy3YPYb/3SZlv2EDqhPCtt+3sQ+2tMOfAwuuTf6HblHNv1Z8Mj2F/D
ypVD6JS0XQ+u8tZHVT8/ivWCj6l+Zrvzgf9xzDsfx3rfqLx5GD0+LH6f7e8n
8PenlUufRMelbX+rPPIUekS5ewRd9DS67WkcX1bl9c+gB5XLn8XxXfYs5nPK
0VGsNzGKee1z6D5l3/NYb+HzmM8oN76A9UZfwLx6DN2jXPwi1jvtRcynlMMv
oSteRnexB8kFaTO+lnHMM8p1r6D7pe168FcxTyjPslNUr+k1YbMdUw5M4L/v
nRC5XQ/+Ov58u3LudazX8Abmw8qVb6JT7Ljrb2mzbc2gJ5UH3kL73/bc5PpZ
2owvr/Lmd9Dj7FpyzaSwXQ8+iXnpu+i4tKk3/S7+/sh7+PMjylWLsN51izAv
yqLb2H7X39JmW/8+elC5/ANh298fYD7HLnRaRz9E106h+9hZsu8jYTO+jo8w
n2EPkxs/Ro+y0520HvwTYbPtUS7OCZt6MXaC8inl8KfoIXaU6m3wH2Gz7VIu
SNv+/sxzkPKMct205wpyv7Tt7/9inlCeVR773HMJOfAFupc9czGtB58RNtt2
5Zxyw5fCdj34l5hX/s/zODklberNq7x1MXpSOTgrbNeDz2Lu/8pzP7lT2va3
ypu/Ro8r13wjbPv7G8xL8+i4cuRb9Ihy1Xc4vu7vMC/6Ht2mnP0ex7f7HOaD
c7h/yn/AeskfMJ9Tjv6InvgR9/8OP2Hep+wr4PHuKGA+o9z4M3qU7ebXFr9g
3vOLyM22+Ff0lHJ4Hj0kbcZX8RvmXWzXLwXllt+F7Xrw3zGv+0P1s7SpV1ZU
j/2sPKvctIznINV7YRnMA8uK3Gx7pW1/L4d5O9udr3LKDcXCtr+LMa9c3rM7
P6aUW1dAT7Ld+Ti4orAZ38CKmPtLPLvzfadyXtquB1/Js7t+jCvXrCxs6qVX
xrx0Fc/uehVXnpa268FLPbvr4Yhy1Z88u+t9t7T9z/+h25Sz7Ca6/u6+qrDZ
DiqX+zy75ztzytHV0BPSZny1q3t2z7/6lH1roDuk7XpwlTeWoUelTb3qNTHv
US5eCx1bC+t9qPLw2uihtbFehR/zLuWCcsufxf6x/f1n3H9166D718HjkVgX
PavcVI7zY6wcj39gPXQv282vkvWF7XpwtpuvOeWGDXD+D0ubbWUF9leK7fpx
XtquB99Q9bdycCNxvrD9LW1HvTGejzqV82z3/OeISs/u/DquXLOJZ3f+Lt3U
s7texJWn2e56GNlM2GxH2ClyVZXnGLlb2q4HZ0cob/sLOsuupXr1mwub7aBy
+RZ8fMlJabsenF24yObRavSEtO3vv3rOUd6n7NsS3cEevYj6W9psG7dCjyr3
BNDFW6Nj0mZ8UyoPb4MeYqfJFdvi+K7cFn++oNxSg/UyNZjXbYePv1+5bHth
ux58e8xnt8f937QD7v+xHfB4BmrRvcolO4r5YPtb2lZVbtgJ51vlzuiU8ry0
GV9rHc7vSeXgLugBabse/G+Yd7Jd/+SlTb3mXTEfV64JotPSdj14CPO48nQI
60V2w3xkNxxv1e6qv3fHx/eHytvq0VnlwT1wf5fviU7uift/TuXRvfD4TuyF
eW0Y58edbDd/fHujO9huPs5Im23jPjifR9muP6r3xX67ke36sbgBHWMnXX+z
WykP74ceYofJFfsL2/5mV1FeYPvILQd4zl9oXRdB97Oz5LID+Xp3Ia0Hlzbb
WXYPuekg9Bg7cSGtBz+Yr2+U9yqXNPLjoXrt7CrKc8oNh/D1jTzMzidoPfjf
hc02xc6Q56Vtfx/Kj4/ySeVgEz8+8oC07e/D+PFS3qmcZ0fJ44fz4yXXHIFO
S5vxlTbz46c8rjzN9pEjRwrb9eBHYl51FM/nC6y7pU29oqMxb1POsgfJ9VFh
ux48inn5P9BJadvfKo8eg55Qrj0W6915LOa+Ft7/5I4WzBuPw3xUufp4YTO+
nuMxLz4BHVOekrbrwVux/pByxYm4P7pOxLyg3HISOnMS7o+dT8a8X7msDesl
2jCfbcPj3XQKeuwUrLfVqZj3Kpechs4pN8TQw9JmfJWnY55SnlduPUPYrgc/
A/PgAvTAAqznb8e8Uzmv3Hwm1nv5TMxrzkKnz8J6pWfj/o8rTytH4rj/n4pj
XnUOulu57Vx0Vrl+Ic6PwYWYl3eoflaeY7v5f/R52B8TyrXnY7/1nY+57wLV
z8ozF2C9gxOqv5WrL1T9fSHmxRep/laeugjr7XUx5kPKFZ3oQifur5ZLVD9f
gvu/7lKcP/3KZZehE2x3/l8sbbZNSfQYu4quN4HL8frSy3bXp5Ir8HrWLm3X
g7Pd9a/hSvQwu4fqVXbh9TXFdtffeeXWq8T12/a3tNkGr8br/4By5zWe3fOH
vHJzStiMb5ztnn/U/BOdVi69VtiuB2eHKZ9WjlwnbOqNXId5VTe6m+2ePxVd
L2zXg1+PefZ6/Pf1N4jc9vcNmJffiE4qz0nb/u7Bxz+hXHsT2ncz7u8O5Zmb
xfEy42u8BY/fqHJ1Lx7/HvYwzY/lbsX5E2O7+TYlbeqFb8P5OsR2873idnQX
O0z1fmK7/mlJozNsH9Wr+5fqb/aS6/UdeP5ISNv+Zgfd9fpO/v3ueq3c28f7
63zrkrs8p8nt7Nj5tB5c2mwb7vYcIA+zi8iV9/DvP4/Wg0ub7Tw7RW7t5/15
Hq0HZwcoD96LHmAXkf33eR7toPXg0mabZ6fIzfcL2/5mRymvGeB65LRy6QM8
/xZSf0ub7TR7lBx5EF31ELqbnSIXDQqb8bUNYp5lR8n1D6MHpe168H9jnlSe
kzb1oo9gPqFcO4TuG8J6qz6KeYfyzKNYr/ExzEeVqx9H9zwu9oft72HcPzHl
KeWhJ3D/VzyJ7pI24yuovOUpPN4Z5boRnB/3jGBe9jTOp4S0qTer8qZn0GPK
gWeF7XpwtpvPJaPodmnb3ypveA49rFz5vOgf29/SZjuv3PoCOjiGHlD2v4j9
2fki5nnl5pfQ4y/h+LZ9GfO0cuk41ouPYz6tHHkFPfIK1tvsVcy7lYtew/3f
9hrm2ddwf9dPoAelbX+/jnlSeU554g107Zs4n/qkzfh8Gcw7lGeUG9/C+fjs
W5hXv43ueRvrFb+DeUx5Sjk8if32iLTZVryL7pK2/a3ylvdUfyvXLVL9vQjz
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
zHuUi/+D5/+YtNlOKYc/Qw9J2/6exrxLuaCc+S+67nN0/+c4vrIv1PVaeVa5
aQavhy/MYB74Ul2vpU29kv+p67VyTrlhMdZ7fDHmlbPqej2L9ebZPne9/go9
qRz8Wtj299eY+79Bdyo359HjyjXfCpvxpb/FvPQ7dFx5+jsc3wHfc/+ebvOR
7/Hnq+awXvcc5kU/oNuUsz9gvd1/xHxQufwnrJf8CfM55WgBPVHAejv8jHmf
su8X9Ixy4684P0alzfiq5zHvYS95/v0bOiZt14OrPPw7ng+GpE29ij/w/Nal
XFBuKQrD+f9NabOtW8azu570S9v+Xtaze70iwXavj8wqNy3nOUHXtxek7W8p
9uxez+lVbl+ex+euz2z3+lLDCsJmfMNs9/pV5YroFNu93jXPTtDrYSeUCJvt
pHJwJR4f1Rtgu9fr/CujO9nu9b68tF0Pvgrm42z3+mFNqbDtb7Z7/bH0T+i4
8rS07e//8+xe7xxRrloVXeRDt7Hd66tZaTO++tUwH1QuXx2dlLbrwVUeXQM9
sQbWqy3DvE/Ztya6Y02s94XKG9fCxzsqbft7bcx7lIv96Ji07W8/Hp/wn9FD
yl3roAvKLevi/MhIm21dObpfuWw9YbsenO3m46xy0/rCpt7Y+pgHNsD536tc
UiFs14NXYJ5TbtgQ+21Y2mwrN0KnlOelbX9vjPmkcrAS7d8E3amc3wTH17wp
5uPKNZuh05vh+FapwjyuPF2F9SJ/wXxEuWpzdPfmuP//2Bz3d9sW6Ky07e9q
zAer8fiX/xWdlLb9rfLolugJ5b6t0L4AuiOA45tReePW6FHl6m1wfDdug3nx
tvh4Y9tivSmVh2vQQ8oV2+H+v3I7PD4F5Zbt8Xhntse8bge8PvUrl9Xi9e2C
Wsxn2e562LQjOrATupftrqclOwub8bXvjHmOveR6XYceZrv3hzbeBa/3KbZ7
PjAvbeq1/o0fj/v7Wjm4K4+fPCBt14MHMe9ku+c3eWnb3yEeP+XjyjW78fjd
62fStr935/G75+PK0+wlr5fVo6v24PGSu6XN+Ir25PG659/KWbZ7Plu/l7Bd
D74X5uVhHj/9PZCUNvXm2KOUR/dGTyjX7sPXw9NpPbi0rbovukPa9rfKGxv4
8ZNHlav3E7b9zQ5SXrw/OqYcPgA9xPaRKyLCZnxdEcwLyi0Hes7HrDPSdj34
Qby/KO9XLjtY2NRLHIz5LDtBbmpEj0nb9eCHYN6rXPJ3zxGq1y5ttjnlhkN5
vpGHpW1/N2GeUp5nF5EnD0MHD0cPSJvx+Y/AvJM9epp1XuXNzSK368Gb8edr
jkSn2dHTaD34UcJmGz8Kf35a5ZGjhe168KMxr4qiu6NYr+gfmLexK8hZ5fpj
hG1/H4N5+bHoJDt3qnW0BT2hXHucsBlf33GY+47n+UTuUJ6RtuvBT8B8VLm6
lfuR6vVIm23xieiY8pS0XQ9+EuZD7CJyxcnCtr9Pxryg3NKGzkjb/j4F837l
slPRs+z0KdZNp6HHpJexXYR5r3LJ6ej203F8n5yO9RvOQA+fgfujcgHmKeV5
5dZ2rPdOO+7/4JnogTPxePvPwrxTOc9286X5bJxfL7Pd/KyJo9PK8XOwP6aV
I+cKm/GNsJf080LVz8pFHXj+OVnabLNsd76qP0+cL029QWmzLT8fz8dJtjuf
z7HTdD4++gJhs51gu+tJbUJcn2x/S5ut70K8vnWw3fVyhu2uvwdfpK7XbHc9
r76Y67vrcycfD3d9ZrvnJ1PSZnzhS3h/uNfL2O75UsWlvD/c62XSdj04e8nr
ZZdxffd6uLSpV5fk4+NeL2O7549ll6MTbPf8c7G02TZdweMhj0nb/r6Sx+de
L1Mu6eLxudfPpG1/q7zhKh6/ez6unLoaPc92z+9brxE245u8BvNgCj2g7P8n
P376++RiabPNKzdfK2zqjV+Lec11wv8P430HPA==
       "]],
      FontFamily->"Times New Roman"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.5187615135000005`*^9, 0},
  BaseStyle->{FontSize -> 14, FontFamily -> "Times New Roman"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"cfs\"", TraditionalForm], None}, {
     FormBox["\"Date, GMT\"", TraditionalForm], 
     FormBox["title", TraditionalForm]}},
  FrameTicks->FrontEndValueCache[{{Automatic, None}, {
      Table[{$CellContext`time + 302400., 
        DateString[$CellContext`time + 302400., {
         "MonthShort", "/", 
          "DayShort"}]}, {$CellContext`time, $CellContext`start, \
$CellContext`end, 604800}], None}}, {{Automatic, None}, {
      Table[{$CellContext`time + 302400., 
        DateString[$CellContext`time + 302400., {
         "MonthShort", "/", 
          "DayShort"}]}, {$CellContext`time, $CellContext`start, \
$CellContext`end, 604800.}][3.518715618*^9, 3.527894718*^9], None}}],
  GridLines->FrontEndValueCache[{
     Table[$CellContext`time + 
      60 60 12 7, {$CellContext`time, $CellContext`start, $CellContext`end, 
       604800}], Automatic}, {
     Table[$CellContext`time + 
      60. 60. 12. 
       7., {$CellContext`time, $CellContext`start, $CellContext`end, 
       604800.}][3.518715618*^9, 3.527894718*^9], Automatic}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{},
  PlotRange->{{3.5188992*^9, 3.527711136*^9}, {0, 2028.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6702293052246222`*^9, 3.6702305686248846`*^9, 3.6702309043270855`*^9, 
   3.6702639204637785`*^9, 3.6702656338066597`*^9, 3.670265893298948*^9, 
   3.6702661187487216`*^9, 3.6702661658615074`*^9, {3.6702664045770893`*^9, 
   3.670266416611234*^9}, 3.670577056850854*^9, {3.670580156350135*^9, 
   3.6705801829036536`*^9}, 3.6705804258765507`*^9, 3.6705822859989443`*^9, 
   3.67058398848332*^9, 3.670586656232907*^9, 3.6705871013763676`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s", "=", 
  RowBox[{"hecplot", "[", 
   RowBox[{
   "\"\<Irene\>\"", ",", "\"\<observed\>\"", ",", "\"\<observed\>\"", ",", 
    "\"\<washington\>\"", ",", "\"\<flow\>\"", ",", "\"\<only\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<washington.wmf\>\""}], "]"}], ",", "s"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"r", ",", "\"\<washington.eps\>\""}], "]"}], ",", "s"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6690887792073603`*^9, 3.6690887877064056`*^9}, 
   3.6702290718062716`*^9, {3.670230925256283*^9, 3.6702309565230713`*^9}, 
   3.67026391018336*^9, 3.670266104474495*^9, {3.6702661362295527`*^9, 
   3.6702661587785935`*^9}, {3.6702663941514263`*^9, 3.6702663953264284`*^9}, 
   3.6705753128641033`*^9, {3.6705821245987124`*^9, 3.6705821254617615`*^9}, 
   3.6705866190157785`*^9, 3.6705870446251216`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587121759534*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871218295374`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "iterb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iterator \[NoBreak]\\!\\({time, start, end, 604800}\\)\
\[NoBreak] does not have appropriate bounds. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/iterb\\\", ButtonNote -> \
\\\"Table::iterb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587121911542*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Table :: \
iterb\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871219585447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587122099553*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587122246561*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871223875694`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587122516577*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587122654585*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: prng\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871227005873`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871228295946`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587122873597*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"obflowscatter", ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"start", ",", "end"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Infinity]", ",", 
        RowBox[{"-", "\[Infinity]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"time", "+", 
             RowBox[{"60", " ", "60", " ", "12", " ", "7"}]}], ",", 
            RowBox[{"DateString", "[", 
             RowBox[{
              RowBox[{"time", "+", 
               RowBox[{"60", " ", "60", " ", "12", " ", "7"}]}], ",", 
              RowBox[{"{", 
               
               RowBox[{"\<\"MonthShort\"\>", ",", "\<\"/\"\>", 
                ",", "\<\"DayShort\"\>"}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"time", ",", "start", ",", "end", ",", "604800"}], "}"}]}],
          "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"cfs\"\>", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Date, GMT\"\>", ",", "title"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"time", "+", 
         RowBox[{"60", " ", "60", " ", "12", " ", "7"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"time", ",", "start", ",", "end", ",", "604800"}], "}"}]}], 
       "]"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\<\"Times New Roman\"\>"}]}], "}"}]}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670229308365802*^9, 3.670230571750063*^9, 3.670263923536984*^9, 
   3.670265636989065*^9, 3.6702658958615007`*^9, 3.670266121369526*^9, 
   3.6702661688723125`*^9, {3.6702664066593084`*^9, 3.670266419263239*^9}, 
   3.6705770641432705`*^9, 3.6705801910631204`*^9, 3.6705822909062243`*^9, 
   3.670583998038867*^9, 3.670586659936119*^9, 3.6705871236126394`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871237546473`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871238856554`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587124019663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.67058712414467*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \
\[NoBreak]\\!\\({\\(\\({start, end}\\)\\), \\(\\({\[Infinity], \\(\\(-\
\[Infinity]\\)\\)}\\)\\)}\\)\[NoBreak] is not All, Full, Automatic, a \
positive machine number, or an appropriate list of range specifications. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::prng\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587124278678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: prng\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.67058712432268*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(obflowscatter\\)\[NoBreak] is not a list \
of numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.670587124438687*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705822902251854`*^9, 3.6705839965637827`*^9, 
  3.6705866588490562`*^9, 3.6705871244836893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["4"], "Input",
 CellChangeTimes->{3.6702734286645746`*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6705770660503798`*^9, 3.6705801930352335`*^9, 
  3.670582292591321*^9, 3.6705840014380617`*^9, 3.6705866632553086`*^9, 
  3.6705871261907873`*^9}]
}, Open  ]]
},
WindowSize->{784, 802},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 548, 12, 92, "Input"],
Cell[CellGroupData[{
Cell[1131, 36, 1516, 30, 72, "Input"],
Cell[2650, 68, 552, 11, 21, "Message"],
Cell[3205, 81, 554, 11, 21, "Message"],
Cell[3762, 94, 552, 11, 21, "Message"],
Cell[4317, 107, 604, 12, 21, "Message"],
Cell[4924, 121, 677, 13, 39, "Message"],
Cell[5604, 136, 676, 13, 39, "Message"],
Cell[6283, 151, 21212, 363, 377, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27532, 519, 1092, 25, 72, "Input"],
Cell[28627, 546, 1018, 18, 96, "Message"],
Cell[29648, 566, 1165, 19, 113, "Message"],
Cell[30816, 587, 1020, 18, 92, "Message"],
Cell[31839, 607, 1118, 19, 110, "Message"],
Cell[32960, 628, 550, 11, 21, "Message"],
Cell[33513, 641, 552, 11, 21, "Message"],
Cell[34068, 654, 550, 11, 21, "Message"],
Cell[34621, 667, 600, 12, 21, "Message"],
Cell[35224, 681, 678, 13, 39, "Message"],
Cell[35905, 696, 680, 13, 39, "Message"],
Cell[36588, 711, 55605, 927, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92230, 1643, 1052, 24, 72, "Input"],
Cell[93285, 1669, 554, 11, 21, "Message"],
Cell[93842, 1682, 556, 11, 21, "Message"],
Cell[94401, 1695, 554, 11, 21, "Message"],
Cell[94958, 1708, 606, 12, 21, "Message"],
Cell[95567, 1722, 692, 13, 39, "Message"],
Cell[96262, 1737, 533, 11, 21, "Message"],
Cell[96798, 1750, 694, 13, 39, "Message"],
Cell[97495, 1765, 533, 11, 21, "Message"],
Cell[98031, 1778, 692, 13, 39, "Message"],
Cell[98726, 1793, 608, 12, 21, "Message"],
Cell[99337, 1807, 535, 11, 21, "Message"],
Cell[99875, 1820, 605, 12, 21, "Message"],
Cell[100483, 1834, 4065, 107, 172, "Output"],
Cell[104551, 1943, 694, 13, 39, "Message"],
Cell[105248, 1958, 535, 11, 21, "Message"],
Cell[105786, 1971, 692, 13, 39, "Message"],
Cell[106481, 1986, 532, 11, 21, "Message"],
Cell[107016, 1999, 692, 13, 39, "Message"],
Cell[107711, 2014, 605, 12, 21, "Message"],
Cell[108319, 2028, 533, 11, 21, "Message"],
Cell[108855, 2041, 607, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109499, 2058, 71, 1, 31, "Input"],
Cell[109573, 2061, 196, 3, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
